PREFACE 

Architects concern themselves professionally with the forms of buildings, with the functions of buildings, and with how to relate the two. Louis Sullivan alliteratively proposed that form follows function, but this provides little practical guidance since he failed to specify precisely what he meant by “form" or “function" or (for that matter) "follows." In this book I attempt to give more precise definition to these terms, and on that foundation to elucidate the structure of design reasoning. 

The argument that is developed here may be taken as a response to a crucial problem posed by John Summerson some three decades ago. In his essay “The Case for a Theory of Modern Architecture" (1957), Summerson wrote: 

The conceptions which arise from a preoccupation with the programme have got, at some point, to crystallise into a final form and by the time the architect reaches that point he has to bring to his conception a weight of judgement, a sense of authority and conviction which clinches the whole design, causes the impending relationships to close into a visually comprehensible whole. He may have extracted from the programme a set of interdependent relationships adding up to a unity of the biological kind, but he still has to face up to the ordering of a vast number of variables, and how he does this is a question. There is no common theoretical agreement as to what happens or should happen at that point. There is a hiatus. One may even be justified in speaking of a missing architectural language. 

I show here how architectural languages1 can be established, interpreted, and used. 

To deploy such a language to solve functional problems is to build. But if there is, in addition, rhetorical intent and a concern for formal qualities, then building becomes architecture. (Hence Nikolaus Pevsner's famous dictum that a bicycle shed is a building but Lincoln Cathedral is a piece of architecture.) So I am concerned with both practical and poetic uses of architectural languages. 

My approach builds on some ideas of modern logic, and I draw on some recent artificial intelligence and cognitive science research, but I do not assume any background in these fields. The technical apparatus that I introduce is, for the most part, elementary and informal. I begin by considering how buildings may be described in words and showing how such descriptions may be formalized using the notation of first-order predicate calculus. This leads to the idea of a critical language for speaking about the qualities of buildings. 

Turning to the question of depiction by drawings and scale models, I develop the notion of design worlds that provide graphic tokens which can be manipulated according to certain grammatical rules. I then view design processes as computations in design worlds with the objective of satisfying predicates of form and function stated in a critical language. 

There are three main parts to the central thesis. First, I propose that the relationship of criticism to design may be understood as a matter of the truth-functional semantics of a critical language in a design world. Second, I show how design worlds may be specified by formal grammars. Third, I argue that the rules of such grammars encode knowledge of how to put together buildings that function adequately. Thus the relation of form to function is strongly mediated by the syntactic and semantic rules under which a designer operates. 

I hope that this discussion will be of general interest to architects and architecture students concerned with the theoretical foundations of their discipline, but I have a more directly practical aim as well. Computer technology is revolutionizing the way that architectural design is done, but the theoretical presuppositions underlying computer-aided architectural design systems are rarely made explicit—and when they are, they often turn out to be shaky and inconsistent. There is an urgent need for a comprehensive, rigorously developed computational theory of design that can provide an adequate basis for practical software development work. I cannot claim to have produced such a theory fully fledged, but I raise what seem to me to be the relevant questions about it, and I explore some of the starting points in a quest for answers. 

'T 

•H 

«■&lt; 

ACKNOWLEDGMENTS 

This book grew out of seminars on design theory conducted at Harvard, UCLA, Carnegie-Mellon, and Cambridge, and I am grateful to my students and colleagues at these universities for raising many stimulating questions. Chapter 8 draws extensively on work conducted in collaboration with George Stiny, and my discussions with him over the years have been a fruitful source of insight. My particular thanks go to Claudia Knauer, who produced the illustrations, Yasuyo Iguchi, who designed the book, and Debra Edelstein, my editor at The MIT Press. 

1 

l.i 

The creator as an architect bringing order out of chaos. William Blake,  The Ancient of Days,  frontispiece to  Europa, a Prophecy,  1794. The Lessing J. Rosenwald Collection, Library of Congress, Washington, D.C. 

BUILDING DESCRIPTIONS 

DISTINCTIONS 

The beginning of architecture is empty space—characterized by Plato in the  Timaeus  as "the mother and receptacle of all created and visible and in any way sensible things." Architecture is an art of  distinctions  within the continuum of space, for example between solid and void, interior and exterior, light and dark, or warm and cold. 

When such distinctions are made an amorphous world is transformed into a world that has distinct parts organized in some particular way. Thus creation myths frequently recount successive acts of distinction from which the form of the world emerges. The book of Genesis, for instance, describes the world before creation as "without form, and void," then tells how God "divided the light from the darkness" and "divided the waters which were under the firmament from the waters which were above the firmament." The sea and the dry land then appeared and became the habitations of different creatures. On a more modest scale, architects also make distinctions in space to produce habitable form, and numerous illustrators of creation (most notably William Blake) have found it natural to depict the deity as an architect, with dividers in hand, bringing form out of chaos by separating and distinguishing (figure 1.1). 

So the means of architecture are basically given by our capabilities to make and sense physical distinctions in space. Frequently, then, architecture is classified with painting and sculpture as a visual art concerned primarily with optical distinctions—in light and color and surface. This tendency is encouraged when we look at drawings and photographs of buildings, rather than directly experience the real thing. But it can be misleading: distinctions between warm and cold, still and breezy air, in scent and sound, in the feel of surfaces on the skin, and in sensations of movement may be equally important components of architectural experience. It is with sensitivity to the dimensions, nuances, and subtleties of spatial distinction that the abilities to understand, to be moved by, and eventually to create architecture originate. 

Distinctions in space present themselves to us as differences in stimuli reaching our receptor organs. An array of such stimuli (for example, an array of patches of light falling on the back of the retina) constitutes a perceptual field.1 

Aristotle recognized five distinct sensory modalities: visual, auditory, tactual, olfactory, and gustatory. Today we usually add the kinesthetic (the sensation of bodily movement), and it is sometimes suggested that the tactual should be further subdivided into the modalities of warmth, cold, pressure, and pain. The standard modern view is that the differentiation of modalities follows directly from the way our nervous systems are organized: for each modality there is a receptor system that transduces physical stimuli into brain states. 

Psychophysicists usually distinguish four sensory attributes within each modality: quality, intensity, extension, and duration. When a colored patch appears on a movie screen, for example, a viewer senses its qualities of hue and saturation, its brightness (intensity), its area (extension), and the time during which it is present (duration). By contrast with qualitative attributes (such as hue, pitch, and odor), the attributes of intensity, extension, and duration are quantitative—they vary in magnitude. 

For our purposes here we can think of the input to a receptor as an array of physical stimuli and the output as a corresponding array of symbols, stored in memory and recording qualitative and quantitative attributes. A laser scanner, as used for input of images to a computer, provides a clear model of this. The scanner treats the visual field as an array of small, square cells (pixels) and scans it to produce a corresponding array of numerically encoded intensity levels (figure 1.2). 

1.2 

A visual field sampled on a square grid to yield an array of intensity levels 

a. A visual field 

b. The corresponding primal sketch 

1.3 

Extraction of a primal sketch 

SEGMENTATION 

The segmentation of perceptual fields (particularly visual fields) into distinct parts which we regard as "things" is one of the most basic of the processes performed by our perceptual systems.2 Consider, for example, the visual field (that is, array of intensity levels) shown in figure 1.3a. We can easily draw contours to divide this field into continuous areas of similar intensity (figure 1.3b). This produces a maplike representation of the visual field known to researchers in image analysis as a "primal sketch" (Marr, 1979). Computer programs have been developed for extracting primal sketches, and some recent theories of the human visual system suggest that it employs analogous mechanisms at a preconscious level (Fischler and Firschein, 1987). 

Extraction of edges from a visual field does not always divide it into simple closed regions, however. Open contours will sometimes result, as shown in figure 1.4. Furthermore, where there are gradual transitions rather than sharp discontinuities, the locations of edges can become indefinite: using different edge-extraction algorithms and setting different thresholds at which the "similar" becomes the "dissimilar" will often produce different configurations of edges and different divisions of the field into regions. Even at this very low level of visual information processing, different observers may interpret a scene in different ways. 

1.4 

Open and ambiguous contours 

A further step in the processing of sensations is to differentiate figures from the backgrounds against which they appear. We naturally interpret the facade of Gunnar Asplund's Villa Snellman (figure 1.5), for example, as a collection of well-defined figures (windows and decorative motifs) arranged on the ground of the wall surface. But the distinction between figure and ground is not always so clear. Rudolf Arnheim (1974) has noted that we can interpret solids and voids in a facade in several different ways (figure 1.6). Small windows may appear as discrete figures upon a continuous ground of wall. If we enlarge the ratio of opening to wall surface, as in Gothic architecture, we can reach a point where we interpret a facade as an alternation of open and solid elements, neither of which is unambiguously figure or ground. If we carry this process still further, as perhaps in the glazed wall of a modern office building, we eventually produce the figure of a structural frame seen against a continuous ground of window surface. 

1.5 

Figures of openings on the ground of a wall: elevation of the Villa Snellman by Gunnar Asplund, 1917-18 

In addition to distinguishing elementary figures, we often give further structure to our perceptions of surface and space by grouping elementary figures into higher-order figures. For example, we immediately interpret the cluster shown in figure 1.7a as a circle. Rather more surprisingly, we interpret the cluster shown in figure 1.7b as a pair of overlapping triangles. Such phenomena were studied extensively by the Gestalt psychologists, who formulated various "Gestalt 

Punched openings 

Frame 

1.6 

Different figures appear as proportions of solid and void in a wall are varied 

1.7 

Grouping of elementary figures into higher-order figures 

•    •    •    •    • 

•    *    •    •    • 

•    •    •    •    • 

•    *    •    •    • 

•    •    •    •    • 

•    •    •    •    * 

•    •    •    •    • 

•    •    •    •    • 

a. Proximity creates columns 

•    •    •    »    • 

b.    Similarity creates diagonals 

•    *    •    •    • 

«    *    »    ♦ * 

•    •    •    •    • 

•    •    •    •    • 

•    #    •    •    • 

c.     Both rows and columns 

1.8 

Grouping by proximity and similarity 

1.9 

Enclosed shapes tend to be read as figures 

laws" governing figure perception.3 They observed that figures close to each other tend to be grouped into a unit: the law of proximity (figure 1.8a). According to the law of similarity, like figures tend to be grouped (figure 1.8b). And these effects may combine, as shown in figure 1.8c. 

Another well-known Gestalt law, the law of closure, suggests that shapes with closed contours tend to be seen as units (figure 1.9), while the law of good continuation notes that relatively smooth, uninterrupted contours also help to define units (figure 1.10). And the law of symmetry asserts that symmetrical objects tend to be seen as units (figure 1.11). The theoretical framework of Gestalt psychology is no longer widely accepted, but the Gestalt laws remain useful empirical generalizations. 

Notice how Asplund knowingly manipulated all these effects to inject a restless vitality into the apparently simple facade of the Villa Snellman. Proximity and similarity allow us to read horizontal and vertical rows of openings, but this reading is subverted by the complex rhythm of the top row and the variation of window sizes from story to story. The effects of the law of good continuation are disrupted (but not totally destroyed) by introduction of slight horizontal and vertical offsets. The closed figures of arched openings are contrasted with the open curves of the decorative motifs. Overall symmetry is clearly enough suggested to lend an apparent classical unity (much like that of a Renaissance palace) to the composition, but this begins to dissolve on closer inspection. The overall effect is to engage us in a fascinating game of expectation and surprise as we attempt to organize our perceptions. 

A figure is something in the visual field to which we direct our attention, and the Gestalt laws describe how we tend to do this. But we can often shift our attention (particularly when the effects of the Gestalt laws are weak or contradictory), so that what is a figure at one moment becomes part of the background at another, and we become aware of new figures. The elementary design exercise of figure-ground reversal exploits this possibility (figure 1.12). And it is part of the fascination of Islamic tile patterns that they allow us to pick out a variety of different figures within them (figure 1.13). Thus, at this higher level of visual information processing, different observers of a scene may be attending to quite different things. 

1.10 

Good continuation: we perceive the organization that interrupts fewest lines—a rectangle and a square 

TUT 

l.n 

Symmetry: we perceive the symmetrical T-shapes rather than the asymmetrical L-shapes 

1.13 

Some of the figures that can be found within a tesselation 

1.12 

Figure-ground reversal 

When perceived things are substantial, spatially coherent, and persist over time, we usually regard them as physical objects. Such things maintain their identity (that is, we can recognize them when we see them again), and we use verbal or other labels to identify them. To recognize an object is to correctly apply a label to a figure in a perceptual field (figure 1.14). Not only human beings, but also advanced computer vision systems can perform this task.4 

The question of how object-recognition mechanisms actually work has long been a focus of epistemological debate (Daley, 1982). Cartesian rationalists have insisted that the human capacity for object recognition must be innate, while empiricists have tried to demonstrate how it can arise from sensory experience. Empiricists have often maintained that we must begin by discriminating objects then sort these into classes according to their observed similarities and differences, but others (for example Goodman and Elgin, 1988) have argued that "beliefs and expectations supply systems of categories or kinds that structure what we perceive." Whatever stance we take on these issues, though, we surely must grant that object recognition is a crucial step in the process of understanding and describing what we see. It provides the basis for interpreting visual fields as collections of physical objects, for predicating properties of these objects, and for specifying relationships of objects. 

Later we shall see how designers look at things in different ways, recognize different objects, and follow profoundly different paths of design exploration and critical analysis as a result. 

1.14 

Recognition is the correct application of labels 

triangle 

square 

circle 

white (Parthenon) 

1.15 

An object and a simple description 

REFERENCE AND DESCRIPTION 

We can refer to an object by pointing at it, or by assigning it a label and subsequently using that label. And once we can refer to objects, we can go on to describe them. Consider, for example, the simple sentence: 

The Parthenon is white. 

The reference of this sentence is carried by the proper name  The Parthenon,  and the phrase  is white  ascribes a physical property. Thus the sentence refers to its subject and applies a predicate. The complete sentence constitutes a very simple physical description of the building shown in figure 1.15.5 

When such a sentence is used in some definite context, it makes a claim that may be either true or false. That is, it expresses a proposition. If the sentence is employed appropriately with respect to the subject, then it is true; otherwise it is false. The sentence may be true on one occasion and false on another. For example, it is true as I write that the Parthenon is white. But it was once brightly colored. 

Instead of making claims in English we can do so in the terser and more uniform notation of first-order logic. We can write, for example: 

white (Parthenon) 

Under the notational conventions followed here the symbol denoting the subject of the assertion (the topic) is written between parentheses, and the symbol expressing the content of the assertion (the comment) is written in front of the parentheses. The complete expression is called a predicate, the symbol in front of the parentheses is called the predicate symbol, and the symbols between the parentheses are called the arguments of the predicate. (This corresponds to the usual grammatical distinction between subject and predicate of a sentence.) Our example expression is a predicate with one argument, but, in general, a predicate is an n-tuple of arguments grouped between parentheses and prefixed by a predicate symbol. It has a value of either true or false. Our example asserts that the object  Parthenon  is in the set of white objects. This, of course, assumes that we have some clear interpretation for the predicate symbol. For the moment we shall take it that predicate symbols have roughly the same meanings as their English cognates. 

Now let us consider the slightly more complicated sentence  The color of the Parthenon is white. 

Here we have the ascriptive phrase  is white  as before, but the referring expression has been made more precise. It specifies not only a particular physical object, but also the aspect of that object that is of concern to us — specifically, its color. In first-order logic we can express the referring expression as: 

color (Parthenon) 

Here  color  is used as a function symbol, and the expression is a function with one argument. Although functions are written like predicates, they work quite differently. Unlike a predicate, a function does not express a complete thought, and it can have a value other than  true  or  false  (figure 1.16). In this case, the function's value is  white.  We can complete the thought by specifying the value picked out by the given argument, thus: 

color (Parthenon) = white color (grass)  =  green color (sky)  =  blue 

An alternative notational approach is to use a predicate symbol to characterize the nature of the relation between the individuals  Parthenon  and  white.  We want to say that the relation is of  color  (not, for example, of  size  or of  shape).  Thus we might write: 

color (Parthenon, white) color (grass, green) color (sky, blue) 

Arguments 

Value 

1.16 

Arguments and values of a function and a relation expressing the same information 

Here the predicate symbol  color  serves as a binary relation symbol, and we use it to assert that ordered pairs of arguments such as  (Parthenon, white } are in the relation to which it refers. The relation is a mapping from physical objects to colors. The mapping happens to be a function, and the value of the function appears as the final argument. In general, a function of  n  arguments can be converted into a relation of  [n  +  1)  arguments in this way. (However, relations cannot always be converted into functions.) 

By substituting other symbols in place of  color  we can construct a set of referring expressions that identify physical properties of the Parthenon that interest us, for example: 

length (Parthenon) width (Parthenon) numberofcolumns (Parthenon) cuhiccapacity (Parthenon) material (Parthenon) 

Then, by associating values, we can produce a more extensive physical description of the Parthenon. We can use function symbols and the equality operator, thus: 

material (Parthenon) = marble 

Alternatively, we can use relation symbols and write two-place predicates, thus: 

material (Parthenon, marble) 

Sometimes we may need predicates of more than two places. Consider, for example, the English sentence: 

The color of the material of the Parthenon is white. 

This might be expressed as a three-place predicate:  color (material, Parthenon, white) 

Indefinitely many predicates might, in principle, be applied to buildings and parts of buildings. In practice, though, the predicates that concern us when we consider the physical properties of buildings are quite well defined. Usually we are interested in shape (rectangular, triangular, circular), size (length, width, height, diameter), mass and volume properties (density, volume, weight), color (red, yellow, blue), other surface properties (rough, shiny, transparent), and material (steel, brick, concrete, marble). English has a wide variety of predicate adjectives for specifying such properties. 

VARIABLES AND STATES 

Let us further extend our elementary logical framework by considering the following "incomplete sentence": 

The color of the Parthenon is _. 

We can turn it into a variety of different meaningful (though not always true) complete sentences by substituting words like  white, red, purple,  and so on for the blank. Each such sentence specifies an imaginable state of the Parthenon. The range of imaginable states specifiable in this way is given by the extension of our concept of color. (Substitution of something other than a color word yields a meaningless string of words, to which no truth value can be assigned and which does not specify an imaginable state.) 

Linguists and ethnologists define the words that can be substituted for a blank, in this way, as a contrastive set (Conklin, 1962; Frake, 1962; Lyons 1963). The words in a contrastive set all come under some superordinate term (such as  color),  and they exclude one another. That is, only one of them can be applied at a time: the Parthenon cannot simultaneously be white and red. 

To express this point a little more formally, we can put a symbol in place of the blank, as follows: 

The color of the Parthenon is X. 

Now we say that X is a variable standing for color. The range of X is the set of all colors. By substituting6 a specific value from this range for X, for example  white,  we specify one imaginable state of the Parthenon. The variable, then, stands for a domain of imaginable possibilities, and we select one specific possibility from this domain when we substitute a value for the variable. The sentence thus expresses a parameterized proposition: it can be instantiated to a proposition by substituting a value for X. (We will, throughout this book, make extensive use of the idea of a parameterized expression and its instantiations.) 

It is straightforward to generalize to use of more than one variable in the following fashion: 

The color of the Parthenon is X. 

The length of the Parthenon is Y. 

The material of the Parthenon is Z. 

The different variables (X, Y, and Z) stand for different dimensions of variation, and the range of possible states is the set of all possible combinations of values (that is, the Cartesian product7 of the ranges of X, Y, and Z). 

This description can also be expressed in the notation of first-order logic, as follows: 

color (Parthenon,  X)  length (Parthenon,  Y)  material (Parthenon,  Z) 

Alternatively, using functions instead of predicates, we can write: 

color (Parthenon)  =  X  length (Parthenon) =  Y  material (Parthenon) =  Z 

Since both constants ( Parthenon ) and variables (X, Y, and Z) appear in these expressions, we need some way to distinguish the two. I shall follow the typographic convention of showing variables in boldface. 

These expressions are not complete sentences in first-order logic, since they contain free variables and are neither true nor false. However, we can turn them into sentences with truth values by substituting values for the variables. If substitution of a value for a variable argument of a predicate yields a true sentence, we say that the variable satisfies the predicate. Thus substitution of the value  marble  for the variable Z yields the true claim: 

material (Parthenon, marble) 

But substitution of the value  steel  yields the false claim  material (Parthenon, steel) 

Thus the value  steel  fails to satisfy the predicate. Similarly, values may or may not satisfy sentences constructed with functions. 

STORAGE OF VALUES IN DATA STRUCTURES 

This format for expressing descriptions is not as compact and uniform as it might be. Instead of writing a set of expressions to describe the properties of the Parthenon one by one, we might write a single expression as follows: 

properties (Parthenon,  Length, Width, Color) 

An even more general scheme for describing any object in terms of its length, width, and color is: 

properties  (Name, Length, Width, Color) 

Here the value of Name picks out the individual object to be described. In other words, we have a key followed by descriptors. 

1.17 

A file of records for storing descriptions 

A structure of this type is known, in computational jargon, as a record. A sequence of records is a file. We can think of files as tables, in which rows correspond to objects that are to be described, columns correspond to descriptor variables, and cells are spaces for recording the values of variables, as shown in figure 1.17, for example. This constitutes a simple data structure suitable for storing descriptions in computer memory. 

In general, then, the properties of objects can be specified in at least three different ways: by writing English sentences, by writing expressions in the notation of first-order logic, or by filling the slots in a data structure with appropriate values. It is usually possible to translate from any one of these formats to any other. 

PARTS AND WHOLES 

So far we have considered the properties of the Parthenon taken as a whole, but we can also direct our attention to parts of the Parthenon. This reveals a hierarchy (figure 1.18). We might first regard the Parthenon as a set of fairly large parts, such as columns. Then we might say that a column is, itself, broken down into parts such as capital and shaft. These parts might then be still further subdivided. 

More formally, we can say that the Parthenon can be broken down into some set of elementary parts, which we choose to regard (for our purposes at hand) as indivisible.8 Elementary parts may then be grouped into various subsets, and subsets may be included within larger subsets. The set of all subsets of a set is its power set. The power set forms a lattice under the relation of inclusion. To exemplify this, figure 1.19 illustrates the lattice formed by the subsets of elements of a classical entablature. 

1.18 

Decomposition of the Parthenon into primary and secondary parts 

1.19 

The lattice formed by the parts of an entablature under the relation of inclusion 

1.20 

A file of part records for the Parthenon 

1.21 

A function mapping from parts to orientations 

Not all of the subsets in the power set of the elements of a building will be of interest to us. Indeed, most will not. But those that are may be identified and referred to by name (such as  capital)  or indirectly picked out by a function (such as  thingabove (shaft)). 

This opens up the possibility not only of ascribing physical properties to the Parthenon as a whole, but also of ascribing physical properties to its parts. We might, for example, express a description of the Parthenon as a file of part records, as shown in figure 1.20. An alternative approach is to define Part as a variable ranging over the parts of the Parthenon, and to consider functions such as: 

length  (Part)  height  (Part)  color  (Part) 

Then we can express a description by recording values of these functions for particular parts or (more compactly) by providing general rules or procedures for evaluating them. In general, such functions are one-to-one or many-to-one mappings from a set of parts to a contrastive set of properties. Figure 1.21, for example, illustrates a function mapping from a set of parts to a set of possible orientations. 

We might also write sentences, such as: 

The pediment is triangular. 

All columns are fluted. 

Some columns are broken. 

Translation of the first sentence into logical notation is straightforward. We can write: 

triangular (pediment) 

The second sentence, however, contains the universal quantifier  all:  it makes a claim not just about one column, but about all columns (figure 1.22). By convention, in logic, the universal quantifier is written V and pronounced "for all." Using this symbol and a variable  Column  we can now write: 

V Column (fluted (Column)) 

This is a sentence in which the variable  Column  is bound by the universal quantifier. Since the variable is bound the claim made is either true or false. (We could demonstrate its falsity by finding an unfluted column—a column that does not satisfy the predicate  fluted (Column).)  Similarly, the existential quantifier is written 3 and pronounced "there exists." Using it we can write: 

3 Column (broken (Column)) 

This sentence is either true or false. (We could demonstrate its truth by finding a broken column—one that satisfies the predicate  broken (Column).) 

V  Column  (fluted  (Column)) 

3  Column  (broken  (Column)) 

1.22 

Quantified assertions about the columns of the Parthenon 

The expressive power of first-order logic is greatly enhanced by allowing the use of variables, in quantified sentences, to make assertions about sets of objects. If we were to extend this idea, and also allow variables to stand in place of predicate and function symbols (that is, quantification over predicates and functions), we would obtain a second-order logic. Consider the sentence: 

The Parthenon has a mysterious quality. 

We might express it, in logical notation, as: 

3X(X (Parthenon) and mysterious (X)) 

Here, though, we will not take the step of introducing second-order logic; first-order will suffice for our purposes. 

We might also consider introduction of additional quantifiers to allow construction of modal assertions, as for example the sentence: 

Most columns are intact. 

This would also take us beyond standard first-order logic, so we will not further pursue the elaboration of quantification.9 

PHYSICAL RELATIONS AND INTERNAL PHYSICAL STRUCTURE 

In addition to specifying the properties of the parts of an object, we can also specify the relationships in which those parts stand to each other. Consider, for example, the following sentences: 

The capital is above the shaft. 

The shaft is below the capital. 

The column is between the plinth and the entablature. 

The cell a is inside the colonnade. 

The colonnade is outside the cella. 

The portico is in front of the cella. 

The cella is behind the portico. 

Here various positional relationships are specified by employing prepositions of place.10 Translations into logical notation are as follows (figures 1.23, 1.24): 

above (capital, shaft) 

below (shaft, capital) 

between (column, plinth, entablature) 

inside (cella, colonnade) 

outside (colonnade, cella) 

frontof (portico, cella) 

backof (cella, portico) 

Some spatial relationships among the construction elements of the Parthenon 

between (column, plinth, entablature) 

1.24 

Some spatial relationships in the plan of the Parthenon 

inside (naos, peristyle) 

front of (pronaos, naos) 

back of (opisthodomos, naos) 

equal (leftcolumn, middlecolurim) taller (leftcolumn, rightcolumn) shorter (rightcolumn, leftcolumn) 

1.25 

Some comparatives 

spacing (leftcolumn, rightcolumn,  A) 

1.26 

Specification of numerical intervals 

Length 

R = Length/Width 

proportion (plan,  R) 

1.27 

Specification of numerical ratios 

We can also specify relationships of inclusion, for example: 

The shaft is part of the column. 

In logical notation this becomes.  part (shaft, column) 

Furthermore, we can write comparatives (figure 1.25): 

equal (leftcolumn, middlecolumn) taller (leftcolumn, rightcolumn) shorter (rightcolumn, leftcolumn) 

Variables can be introduced into claims about relationships, for example:  above  (Part,  entablature) 

The variable  Part  ranges over all the parts of the Parthenon. Substitution of the value  pediment  for  Part  yields the true 

claim: 

above (pediment, entablature) 

But substitution of the value  plinth  yields the false claim:  above (plinth, entablature) 

All the terms can be variables, for example: 

above  (Part, Part)  between  (Part, Part, Part) 

Thus the subset of ordered pairs of values  in  the Cartesian product  Part  x  Part  that satisfy the predicate  above   (Part, Part)  constitutes the relation  above  in the set of parts of the Parthenon, and the subset of ordered triples of values m Cartesian product  Part  x  Part  x  Part  that satisfy the predicate  between   (Part, Part, Part)  constitutes the relation  between  m 

the set of parts of the Parthenon. 

Sometimes it is useful to introduce numerical descriptors 

(figure 1.26), as for example in: 

spacing (leftcolumn, rightcolumn, A) heightdifference (leftcolumn, rightcolumn, B) 

Here the variables  A  and  B  take numerical values on some measurement scale. Not only intervals, but also ratios can he specified with numerical parameters, for example (figure 

1.27): 

proportion (plan, R) 

In general, relations in sets of objects (such as the parts of the Parthenon) can be recorded in tabular files. For example the relation  above  can be expressed as a two-column tab (figure 1.28). Every pair of parts in the relation appears as a record. Similarly, the relation  heightdifference  can be 

THE LOGI 

C OF ARCHITECTURE 

expressed as a three-column table. In this case there is a record for every pair of parts, and their height difference is recorded in the third column. 

1.28 

A file expressing the relation  above  in a set of parts 

Thus we can specify the internal relationships between an object's parts by writing English sentences, by writing  13 -place predicates in first-order logic, or by entering values in data structures. In any case, when we do so, we describe the object's physical structure. We can also specify the external relationships of an object—of the Parthenon to the Erechtheion, for example. These begin to establish the internal structure of some more inclusive object, such as the city of Athens. 

COMPOUND CLAIMS 

To form more complex claims than we have so far we can use logical connectives to combine sentences. First-order logic provides for negation, conjunction, and disjunction, as illustrated by the following examples: 

not color (Parthenon, green) 

material (Parthenon, marble) and color (Parthenon, white) 

V  Column  (broken  (Column)  or unbroken  (Column)) 

3  Column  (not unbroken  (Column)) 

It also allows formation of conditionals and biconditionals, but it will be convenient to defer consideration of these until later. 

These connectives enhance the expressive power of first-order logic by allowing us to form compound sentences from simple ones without specifying the truth or falsity of the constituent sentences. Then, when the truth-values of the constituent sentences are known, the truth-values of compound sentences can be determined by applying the well-known Boolean laws.11 These laws are usually expressed by means of truth-tables. Where SI and S2 are sentences, for example, the truth-table for conjunction is: 

SI 

S2 

SI and S2 

true 

true 

true 

true 

false 

false 

false 

true 

false 

false 

false 

false 

The truth-table for disjunction 

is: 

SI 

S2 

SI or S2 

true 

true 

true 

true 

false 

true 

false 

true 

true 

And the truth-table for negation is: 

SI 

true 

false 

not SI 

false 

true 

Truth-tables for more complex combinations can be built up from these. 

CONCEPTUALIZATIONS AND DESCRIPTIONS 

The threads of this discussion can now be drawn together into some unifying definitions. 

In a given context, the set of objects to which we can refer, and about which we can express comments, is the universe of discourse. In discourse about a building the universe invariably includes the parts of the building to which we choose to give attention. Different people may decompose a building into parts in different ways and so include different collections of parts in a universe of discourse. 

The universe of discourse may be extended to include various contrastive sets of properties that interest us. There might, for example, be a contrastive set of colors: 

(red, orange, yellow, green . . .) 

There might be a contrastive set of textures: 

(rough, smooth) 

There might be a set of lengths (expressed in numbers of feet), and so on. Different people may be concerned with different properties and may draw distinctions within contrastive sets in different ways. 

A function is a particular kind of interrelationship among the objects in a universe of discourse. Specifically, a function takes an object or objects in the universe of discourse as its arguments and has an object in the universe of discourse as its value. A function may map from parts to parts, as for example: 

above  (Part) = Part 

Or it may map from parts to properties, thus:  texture  (Part)  =  Texture 

By naming all the functions that we want to consider, for a specified universe of discourse, we establish a functional basis set. 

A relation is a second kind of interrelationship among the objects in a universe of discourse. Unary relations have one argument, as in: 

round (A) 

Binary relations have two arguments, for example: 

above (B, C) 

In general, a relation symbol takes  n  arguments. When values are substituted for all the arguments, as for example in 

above (capital, shaft) 

an assertion about an n-tuple of objects in the universe of discourse results. This assertion may be true or false. The extension of the relation is the set of all ordered  n -tuples of objects in the universe of discourse which satisfy the predicate.12 As with functions, we can establish a relational basis set by naming all the relations that we want to consider. In architecture, for example, we are frequently concerned with relations of position, shape, scale and proportion, tone, color, and texture among the parts of a composition. 

A conceptualization (Genesereth and Nilsson, 1987) consists of a universe of discourse, together with a functional basis set and a relational basis set for that universe. By establishing a suitable conceptualization, we can lay the foundation for describing buildings.13 That is, we can establish the building parts to which we may directly and indirectly refer, the properties and relationships that we can ascribe to those parts, and the aspects of internal physical structure that we can specify. When we describe by means of English sentences, the conceptualization is implicit in the vocabulary and sentence constructions that we employ. In first-order logic the conceptualization is usually made explicit by declaring the constant, variable, function, and relation symbols that we intend to use. And in a computer data structure the conceptualization establishes the slots that are to be filled with values. 

Within the framework of a conceptualization, a description is a collection of assertions about a building. These assertions may be expressed as English sentences, as first-order logic sentences, or as entries in a data structure. A description is complete (relative to the conceptualization) if it allows evaluation of any function in the functional basis set, or determination of whether any relation in the relational basis set is satisfied, for any arguments. Otherwise (and more usually) it is incomplete: a particular description 

of the Parthenon might not tell us the material of the columns or the shape of the pediment or whether the pronaos is adjacent to the opisthodomos-even though the conceptualization provides for this. 

SUMMARY 

If we want to develop a discourse about some body of architectural work, we must establish an appropriate conceptualization within which that discourse can unfold. We must have a strategy for segmenting architectural compositions into parts and a way to refer to parts by name. (In the tradition of classical architecture, for example, there is a standard system of segmentation and naming.) We must also have a sufficiently extensive and finely differentiated vocabulary of relation and function symbols for use in specifying the properties and interrelationships of parts. Finally, we need a system for constructing assertions from names of parts, relation symbols, and function symbols: we might assign values to variables in a data structure, we might construct a set o first-order logic sentences, or we might allow the discourse to unfold as a sequence of English sentences. 

THE LOGIC OF ARCHITECTURE 

ARCHITECTURAL FORM 

A DEFINITION OF FORM 

On the foundation established in chapter 1 we can now lay out a reasonably clear and precise definition of "form." We shall take it, for our purposes here, that the form of a building is its internal physical structure, as described under some appropriate conceptualization. Indefinitely many aspects of internal physical structure might be considered and described, but the conceptualization always defines the scope of our interest. 

This definition is in the spirit of the general usage of the term in aesthetics. Clive Bell (1914), for example, claimed that "relations and combinations of lines and colors" in a painting could constitute "significant form." Another early modernist critic, R. H. Wilenski (1927), insisted that an architect's "business as artist" was with "the definition, organization and completion of his formal experience by creating a concrete object." He went on to propose that "the architect experiences, synthesizes, and creates; he experiences proportion, balance, line, recession and so on, he coordinates and organizes his experience, and he gives it definite form in a building. . . . He is concerned from first to last with problems of formal relations." A more recent text, Monroe Beardsley's  Aesthetics  (1958), suggests that "the form of an aesthetic object is the total web of relations among its parts." The commonality of these definitions is captured by one of the usual dictionary senses of "form."  Webster’s,  for instance, defines the form of a work of art as its "structural element," specifically "the combinations and relations to each other of various components (as lines, colors, and volumes in a visual work of art or themes and elaborations in an aural work of art)." 

Under this definition we can find no form in the elementary particles of matter (leptons and quarks) since, as described in current physical theory, they have no detectable shape or structure (though some physicists have speculated that they might eventually turn out to be composite objects). But we can find form in all higher-level particles, such as atoms and molecules, since relationships between their constituent parts can be described. Similarly, in Euclid's geometry, a point is an elementary, formless object. But lines, polygons, etc. have form. 

FORMAL QUALITIES 

The ancient Greeks were fascinated by the concept of form, and in their consideration of the forms of things they drew a fundamental distinction between  chaos  and  kosmos  (that is, order). In science they attempted to discover a cosmology—an underlying system of order in the form of the world—and in the arts they developed an explicit concern for formal regularities and disciplines in compositions. This gave rise, ultimately, to an influential tradition of formalist criticism—criticism that concerns itself primarily with the properties of form rather than with the external relations of works. A formalist critic might, for example, begin with a simple observation about form, such as: 

round (column) 

When the observation is expressed in this way, however, it is not possible to add a further comment about "roundness" for the technical reason that  round  is a predicate symbol, not the identifier of an object in the universe of discourse. This situation can be remedied by treating  round  as the value of a function, thus:  shape (column) = round 

Now the shape of the column can be the subject of comments, for exampleh  symmetrical (shape (column)) 

We can carry this sort of construction further, for example: 

symmetry (shape (column))  =  rotationalsymmetry graceful (symmetry (shape (column))) 

This is a comment on the symmetry of the shape of the column. We can unpack its meaning by evaluating functions, 

thus: 

graceful (symmetry (round)) graceful (rotationalsymmetry) 

In other words, the symmetry of roundness is graceful or, alternatively, rotational symmetry is graceful. 

This strategy is one of reification2—of introducing into the universe of discourse constructs such as  shape  and  symmetry  to serve as topics of critical comment. Then, by adding predicates such as  graceful  that apply to these things, we can extend the corresponding critical language to provide not only for expression of observations about the physical properties and relations of architectural elements, but also for expression of value judgments about architectural form. 

We might begin to develop a vocabulary of formalist criticism by noting that, in most buildings, there is repetition of elements such as columns. We might comment on the repetition of columns in the Parthenon: 

rhythmic (repetition (columns)) 

The predicate, here, originates from the Greek term  rhyth-mos  (figure 2.1)3—originally associated with the idea of regular movement, as in dance. 

Secondly, we might observe that the dimensions of parts of a composition are in certain ratios. Thus, for example, we might want to comment: 

well-proportioned (shape (portico)) 

The predicate used here derives from the Greek concept of  symmetria.  Use of this concept in artistic theory and criticism can be traced back at least to the well-known  Canon 4 of the fifth-century  bc  Greek sculptor Polyclitus.  Symmetria  was achieved, according to Polyclitus, by relating the dimensions of all parts of a statue to each other, and to the whole, by means of an appropriate system of ratios. Hence his famous remark that "perfection arises through many numbers." 

Vitruvius drew much of his aesthetic theory from earlier Greek sources, so it is not surprising to find that he propounded similar ideas. He suggested that there should be "a correspondence among the members of an entire work, and of the whole to a certain part selected as standard." He then went on to discuss the ratios governing the dimensions of the human body and to propose that the dimensions of a building should be derived from the basic module by use of a system of ratios related to that of the body. 

Much of the theory concerned with ratios and proportion in architectural composition can be traced back, ultimately, to the Pythagoreans. They observed that the pitch of the note sounded by a plucked string was proportional to its length and that harmonious combinations of notes resulted when the lengths of the strings formed certain ratios of small whole numbers, particularly 1:2 (octave), 2:3 (fifth), and 3:4 (fourth). So there emerged the compelling idea, with the authority of Pythagorean and Platonic philosophy behind it, that harmony and beauty followed from ratios of small whole numbers. These ratios should govern not only the musical scale, but also the proportions of buildings.5 This idea was discussed by Vitruvius, though not in a very coherent way. Later it was taken up by medieval thinkers, notably 

2.1 

Rhythmos:  repetition of elements at regular intervals 

aaa. . . rhythm 

1:1  (identity) 

3:4 (fourth) 

2:3 (fifth) 

2.2 

Symmetria:  harmonic proportions for rooms as recommended by Palladio 

2.3 

Bilateral symmetry: reflection across an axis is the symmetry operation 

Augustine and Aquinas, with the result that the use of harmonic ratios became an important formal ordering principle in medieval religious architecture. And it was to flower most spectacularly in the Italian Renaissance, particularly in the work of Palladio, who used harmonic ratios to interrelate length, width, and height within a room and to coordinate the proportions of different rooms (figure 2.2). Palladio would presumably want a critic to comment: 

harmonious (proportion (room)) 

The idea of harmonic governing ratios lost favor during the eighteenth century, when theorists like Edmund Burke and William Hogarth (in his  Analysis of Beauty  ) denied that ratios could be beautiful in themselves and argued that the sense of harmony was a purely subjective matter. But interest in systems of proportioning rules that allegedly guarantee the harmony of architectural compositions has periodically revived: Le Corbusier, for example, proposed a system based on Fibonnaci sequences and the golden ratio.6 

The English word "symmetry" also derives from the Greek  symmetria,  but it has come, by a gradual process of differentiation of concepts, to refer to a different kind of formal regularity from that connected to modules, ratios, dimensioning disciplines, and progressions. 

In general usage today, "symmetrical" most commonly refers to bilateral symmetry—the kind of symmetry possessed by the human body (figure 2.3). This was an important principle of classical architectural composition, and we might, for example, comment of the Parthenon: 

bilaterallysymmetrical (shape (pediment)) 

Renaissance architectural theorists frequently suggested the desirability of bilateral symmetry. Alberti remarked in his  Ten Books of Architecture  that "if a dog had one ear like that of an ass, or if a man had one foot bigger than the other, or one hand very large, and the other very small, we should immediately pronounce such a one deformed." He then to drew the moral that the parts of an architectural composition should be disposed "with an exact correspondence as to the number, form, and appearance; so that the right may answer to the left, the high to the low, the similar to the similar, so as to form a correspondent ornament in that body whereof they are parts." Similarly, in a well-known letter, Michelangelo7 commented that "the nose, that is in the middle of the face, is neither obligated to one nor to the other eye, but one hand is altogether obligated to be like the other, and one eye like the other, with respect to the sides and of the corresponding parts." He proposed that architecture 

(_ 

~\ 

2.4 

A composition in which rotation is the symmetry operation 

mm 

2.5 

A composition in which translation is the symmetry operation 

2.6 

A composition with translations, rotations, and reflections as symmetry operations 

should follow the same principle "because it is a certain thing, that the members of architecture derive from the members of man. Who has not been or is not a good master of the human body, and most of all of anatomy, cannot 

understand anything of it." 

Despite the ancient tradition of bilaterally symmetrical composition and these fifteenth- and sixteenth-century discussions of the idea, it was not until well into the seventeenth century that the concepts of proportion and symmetry, as we understand them today, were clearly distinguished. Pascal, for example, apparently thought of them as synonymous And when Claude Perrault published his French translation of Vitruvius (1673), he rendered  symmetric  as "proportion." But in a footnote he commented that, m everyday speech, the word  symetrie  referred to "the relationship which parts on the left side have with those on the right, those high up with those low down, those in back with those in front." By the eighteenth century we can find the English architect Sir William Chambers writing, "This column . . . must have a pilaster by its side, to make a symmetry with that on the other side of the window." 

Modern mathematics has further generalized and formalized the concept of geometric symmetry, grounding it upon the idea of a group* of geometric transformations. We now say that an architectural composition is symmetrical to the extent that it has symmetry operations, that is, isometric transformations (translations, rotations, reflections, and compositions of these) that transform the composition into itself: symmetry is defined as a property of a set of transformations. For example, a bilaterally symmetrical plan is transformed into itself by reflection across its axis; a pin-wheel is transformed into itself by rotation (figure 2.4); any regular frieze pattern (if we take it to be of unlimited length) is transformed into itself by translation through an appropriate increment along its axis (figure 2.5); and regular plane patterns may have translations, rotations, and reflections as symmetry operations (figure 2.6). This definition is broad enough to encompass not only symmetry about axes passing through a point, but also all kinds of repeating linear patterns, repeating two-dimensional patterns, and repeating three-dimensional patterns. 

3 0 

FORMAL VALUE 

From ancient times onward many critics have claimed that the predicate  beautiful  is correctly applied to compositions that have the classical formal qualities of rhythm, proportion, and symmetry. Vitruvius, for example, made frequent use of the Greek term  eurythmy.  (A reasonably good English equivalent is "grace." ) He defined it as 

. . . beauty and fitness in the adjustments of the members. This is found when the members of a work are of a height suited to their breadth, of a breadth suited to their length, and, in a word, when they all correspond symmetrically. 

In St. Augustine's aesthetic theory, formal order is regarded as the source of beauty, and in one passage from  De Vera Religione  (trans. Burleigh, 1953) Augustine suggested that the application of this principle to architecture was self-evident: 

If I ask a workman why, after constructing one arch, he builds another like it over against it, he will reply, I dare say, that in a building like parts must correspond to like. If I go further and ask why he thinks so, he will say that it is fitting, or beautiful, or that it gives pleasure to those who behold it. 

Alberti, in his  Ten Books,  was to define the sought-after quality of harmony in architectural form in rather similar fashion. His very elegant formulation (which draws directly upon Aristotelian ideas) runs as follows: 

Just as all the individual members harmonize in an animal organism, so all the separate parts of a building should harmonize. . . . Each part of a building must correspond to all the others so as to contribute to the success and beauty of the whole. The building cannot be beautiful in only one of its parts while the others are neglected; all must harmonize in order to appear as a single, well-articulated body, not a jumble of unrelated fragments. 

In his influential essay  Inquiry into the Origin of Our Ideas of Beauty and Virtue  (1725) the British philosopher Francis Hutcheson attempted to show  how  beauty depends on formal qualities. He suggested, in a much-quoted passage, that "what we call beautiful in objects, to speak in the mathematical style, seems to be in compound ratio of uniformity and variety: so that where the uniformity of bodies is equal, the beauty is as the variety; and where the variety is equal, the beauty is as the uniformity." Later in the essay, he gave the more concise formula for beauty as "uniformity amidst variety." Thus, according to Hutcheson's doctrine, richly varied compositions that are organized in accordance with some underlying unifying principle are beautiful. So are 

mathematical theorems that apply to extensive sets of apparently diverse figures or curves, and the forms of plants and animals. 

Owen Jones, the great nineteenth-century theoretician of ornament, gave a psychological interpretation to the "unity and variety" formula and explored its practical implications in the decorative arts. In the introduction to his  Grammar of Ornament  (1856) he asserted the general principle that "all ornament should be based upon a geometrical construction." But the principles of construction should not be too readily apparent. Of proportion, for example, he wrote: 

As in every perfect work of Architecture a true proportion will be found to reign between all the members which compose it, so throughout the Decorative Arts every assemblage of forms should be arranged on certain definite proportions; the whole and each particular member should be a multiple of some simple unit. 

However, he went on: 

Those proportions will be the most beautiful which it will be most difficult for the eye to detect. Thus the proportion of a double square, or 4 to 8, will be less beautiful than the more subtle ratio of 5 to 8; 3 to 6, than 3 to 7; 3 to 9 than 3 to 8; 3 to 4 than 3 to 5. 

(Note the contrast, here, with the Pythagorean views discussed earlier.) Later, in his chapter on "Moresque Ornament," he explicitly related aesthetic value to the degree of mental effort" required to discover an underlying order: 

All compositions of squares or of circles will be monotonous, and afford but little pleasure, because the means whereby they are produced are very apparent. So we think that compositions distributed in equal lines or divisions will be less beautiful than those which require a higher mental effort to appreciate them. 

Then, in some remarks on the use of curves, he related this "mental effort" to the economy with which a composition can be described: 

Those compositions of curves will be most agreeable, where the mechanical process of describing them shall be least apparent; and we shall find it to be universally the case, that in the best periods of art all mouldings and ornaments were founded on curves of the higher order, such as the conic sections; whilst, when art declined, circles and compass-work were much more dominant. 

In this century, numerous variants of the "uniformity and variety" (alternatively, "unity and variety" or "order and complexity") formula have been put forward,9 leading ultimately to various efforts to quantify aesthetic value. The mathematician George Birkhoff (1933) made an interesting but in the end unconvincing attempt to measure aesthetic values of visual and musical compositions by a formula of the form  m = o/c,  where  m  is aesthetic value, o is an objective measure of order, and c is an objective measure of complexity.10 Following the publication of Shannon and Weaver's  Mathematical Theory of Communication  (1949), there were some attempts to identify uniformity and variety with information redundancy and entropy (as formulated in statistical information theory), and thus to find an information-theoretic measure of aesthetic value.11 During the 1960s an alternative formulation of information theory, based upon the theory of algorithms rather than upon concepts of probability, was developed (Kolmogorov, 1968). This appears to provide a rather more promising foundation for analysis of aesthetic value, and at least one rigorously developed exploration of the approach (much in the spirit of Owen Jones's analyses) has appeared (Stiny and Gips, 1978). 

The uniformity and variety formula applies quite convincingly to classical architecture, with its regular rhythms, disciplined proportions, and strict symmetries enlivened by freer decorative elements and the subtle asymmetries of shade and shadow. And early modernist play of irregular forms and placements within a framework of regular structural rhythms, symmetrical enclosure, and regulating lines (as at the Villa Savoye) seems consistent with it too. But the Russian constructivists inverted the definition, preferring random assemblage to rhythmic placement, asymmetrical and occluded fragments to symmetrical closed forms, and arbitrary proportions to the regulation of simple ratios (figure 2.7). Thus we should not look for a universal definition of aesthetic value in terms of particular formal qualities, but should recognize instead that different people, at different times, will seek and value different formal qualities in compositions. This will be reflected in differing critical terminology and in differing usages of predicates such as  beautiful. 

2.7 

A composition by El Lissitzky that achieves its drama through negation of classical principles 

FORMALIST CRITICISM 

Many theoreticians and critics have distinguished between aesthetic value that is held to derive from the formal qualities of a work (for example, regular rhythm, good proportions, symmetry, underlying uniformity, and an appropriate amount of variety) and aesthetic value that supposedly has other sources. In a well-known passage contained in  Parentalia,  for example, Sir Christopher Wren gave the following analysis: 

There are two causes of Beauty, natural and customary. Natural is from Geometry, consisting in Uniformity (that is Equality) and Proportion. Customary Beauty is begotten by the use of our senses to those objects which are usually pleasing to us from other causes, as Familiarity or particular Inclination breeds a Love to Things not in themselves lovely. Here lies the great Occasion of Errors; here is tried the architect's Judgement: but always the true test is natural or geometrical Beauty. 

Various other seventeenth- and eighteenth-century figures suggested variations of this dichotomy. Claude Perrault, in his treatise on the orders of architecture (1683), had distinguished positive beauty, which derived from formal and material qualities, from arbitrary beauty, which followed from fashion, custom, and usage.12 In his  Elements of 

Criticism  (1761) the British philosopher Henry Home (Lord Kames) proposed a distinction between intrinsic and relative beauty. Intrinsic beauty, much like Wren's "natural" beauty and Perrault's "positive" beauty, was a property derived directly from the formal and material qualities of a work and could be appreciated without reference to any other thing. But relative beauty, on the other hand, "is that of means relating to some good end or purpose." Thus appreciation of relative beauty requires consideration of a work's role relative to other things. Natural forms, according to Kames, possess both kinds of beauty, and please "partly from symmetry and partly from utility." 

Certainly the most celebrated version of the distinction was that drawn by Kant in his  Critique of Aesthetic Judgement  (1790).13 He distinguished between free and dependent (or pure and adherent) beauty. Free beauty is an entirely formal matter, divorced from all considerations of function, depiction, or content. Kant assigned this kind of beauty to decorative patterns and arabesques, shells, crystals, and the like. Appreciation of dependent beauty, on the other hand, follows from a knowledge of ends, as when we judge an artifact well adapted to some purpose or a picture as a good likeness. So, Kant suggested, a well-designed building appeals both to our sense of pure form and to our sense of aptness or fitness. 

Nineteenth- and twentieth-century aestheticians have typically distinguished formal values from material values on the one hand and from associational values on the other.14 Material values are said to follow directly from pleasurable colors, textures, sounds, scents, tastes, and so on, without consideration of form. That is, they are based upon recognition of physical properties only and do not require the recognition of physical relations. But associational values are said to relate to content, as when the form evokes ideas or emotions or serves to convey some meaning. 

The critical attitude of formalism is grounded on the belief that formal values, rather than material or associational values, are of paramount importance in a work of art. The theoretical foundations of this position received articulate expression from the Viennese critic Eduard Hanslick, who argued in his book  On the Musically Beautiful  (1854) that music should be valued for its own sake, without consideration of external associations or purposes: the critic's primary concerns are with patterns of melody, harmony, rhythm, and instrumentation. 

On the face of it, rigorous formalism seems less tenable in the visual arts, where representation has traditionally been a central concern. But the English critics Clive Bell (1914, 1922) and Roger Fry (1926, 1937, 1939) consistently took and strongly defended formalist positions. This had the merits of focusing critical attention on issues other than representational accuracy in painting and of providing a basis for understanding abstract painting and sculpture. It also proved congenial to the kind of architecture that is concerned primarily with formal experience, rather than with immediate sensual pleasures, sentimental associations, or historical references, as for example the severely geometric, white-painted compositions of the early modern movement. And indeed, we find Jeanneret (the young Le Corbusier) and Ozenfant insisting in the pages of  L’Espiit Nouveau  4 (1920) that the primary aesthetic value of architecture derived from the composition of elementary geometric solids, while the association of ideas was a secondary matter. 

Thus it is useful to qualify the predicate  beautiful  and to distinguish the usages of  formally beautiful, materially beautiful, associationally beautiful,  and so on. In formalist criticism  beautiful  is normally taken to mean  formally beautiful,  but in other critical traditions the predicate  beautiful  may be applied in different ways. 

SUMMARY 

Formalist criticism attends to rhythms, ratios, symmetries, and other aspects of the form of a building. It makes use of a vocabulary of descriptive predicates: rhythms may be regular or irregular, ratios may be harmonic, symmetries may be dihedral, and so on. It also employs predicates such as  graceful, harmonious,  and  beautiful,  which express judgments of aesthetic value. In the next few chapters I shall treat design primarily as a matter of formal composition of constructing rhythms, ratios, symmetries, asymmetries, contrasts, harmonies, and so on, in order to produce beauty. Then I shall expand the discussion (as suggested by Kant's conception of beauty) to deal not only with pure form, but also with design that concerns itself with aptness or fitness for practical or representational ends. 

DESIGN WORLDS 

GIVING FORM TO MATERIALS 

In his  Poetics of Music  (1942) Stravinsky pointed out that isolated natural sounds such as "the murmur of the breeze in the trees, the rippling of a brook, the song of a bird" are not music, but merely "promises of music." Then he argued that "tonal elements become music only by virtue of their being organized." To generalize, an artist  gives  form to his or her materials. 

The notion that an artist gives form to materials can be traced back directly to the Platonic doctrine of ideas.1 Plato suggested that physical objects imperfectly imitate perfect, abstract ideas. Aristotle, in the  Metaphysics,  developed a modification of this doctrine, according to which a form first exists in the mind of the artist, then it is given by the artist to matter. Numerous later commentators elaborated this theme and discussed its application to painting, sculpture, and architecture. In a particularly famous passage in  Summa Theologia  St. Thomas Aquinas suggested that "the house pre-existed in the mind of the architect: and this can be designated as the Idea of the house, because the artist intends to assimilate the real house to the same form that he has conceived in his mind." 

Alberti echoed this, in his  Ten Books of Architecture,  when he carefully distinguished between the "design" and the "structure" of a building. He added: 

Nor has this design any thing that makes it in its nature inseparable from matter; for we see that the same design is in a multitude of buildings, which have all the same form, and are exactly alike as to the situation of their parts and the disposition of their lines and angles; and we can in our thought and imagination contrive perfect forms of buildings entirely separate from matter, by settling and regulating in a certain order, the disposition and conjunction of the lines and angles. Which being granted, we shall call the design a firm and graceful pre-ordering of the lines and angles, conceived in the mind, and contrived by an ingenious artist. 

1

DESIGN MEDIA AND DESIGN WORLDS 

thing else—constructions of the imagination. More precisely we refer to some sort of model—a drawing, physical scale model, structure of information in computer memory, or even mental model-rather than to a real building.3 Just as an assertion in a critical language consists of verbal tokens (words) forming a one-dimensional string (a sentence), so a model is a collection of graphic tokens, such as points lines, and polygons, forming a two-dimensional or three-dimensional arrangement. We can think of the space populated y these tokens, for example a drawing surface or a three-dimensional Cartesian coordinate system, as a specialized, delimited microworld-the design world. Tokens can be inserted into the design world, deleted from it, geometnca y transformed, and otherwise manipulated. We assume that some procedure exists for translating graphic tokens, and their properties and relations, into corresponding objects, properties, and relations in the larger world. In this sense, the design world is used to depict possibilities m the larger world But the potential translation into physical reality may or may not actually take place or have any prospect of taking place; it suffices that such translation is possible m 

^Designers often establish design worlds implicitly, through their choices of design media and instruments. A drawing board and traditional drafting instruments, for example, establish a Euclidean design world populated by two kinds of graphic tokens—straight lines and circu ar arcs—that can vary in size and position and be related to each other as parallels, perpendiculars, and so on. A designer toying with a cardboard working model enters a design world populated by plane polygons that can be shaped m different ways and translated and rotated in three-dimensional space. Designers shaping clay with their fingers, or cutting polystyrene blocks with hot wires, enter yet other kinds of 

design worlds.    , . 

When a computer-aided design system is used, the data 

structure and its associated operations establish the design world. There might, for example, be records to store information specifying points, vectors, arcs, polygons and other kinds of graphic tokens. Fields might be provided for specification of properties such as thicknesses of lines and colors of polygons. Procedures exist for translating information in the data structure into a screen display, and there is some repertoire of operations for inserting, deleting, transforming, an combining graphic tokens to produce compositions. 1 

1

 8 

b.  A  square array of points 

3.1 

Establishment of a point world 

The first step in precise formulation of a design world is to specify the primitives (kinds of elementary graphic tokens) out of which designs may be assembled. Let us briefly and informally consider some of the basic possibilities. 

POINT WORLDS 

To take points as the primitives of a design world is to initiate an exploration of formal possibilities in a very low-level, atomistic way—much like considering the physical world purely at the atomic and molecular level, painting in a pointillist style like that of Seurat, or examining a building in brick-by-brick fashion. 

The idea of a point world follows closely from that of a Cartesian coordinate system. Consider, for example, a two-dimensional, rectangular, coordinate system as shown in figure 3.1a. A point in such a system is a structured object with two components—an x-coordinate and a y-coordinate. We can express the combination of these components into a single object by writing, for example: 

point (10, 20) 

Space can be filled, at any density, with a square array of such points (figure 3.1b). Thus a picture plane can be described as an array of points, and any one of these points can be specified by substituting values for X and Y in: 

point (X, Y) 

A  kind of graphic primitive known as a pixel may now be defined as an array point with an associated state, described: 

pixel (point  (X, Y), State) 

Bitmaps are widely used for encoding images and storing them in computer memory.4 Raster display devices have equivalent grids of pixels on their screens and display bitmapped images by intensifying pixels or not according to the corresponding stored values. The technique can be extended to deal with halftone and color images by elaborating the description of states, for example: 

pixel (point  (X, Y),  color  (Hue, Saturation, Value)) 

One of the simplest types of computer graphics systems used by artists and designers, a paint system, is based directly on the idea of bitmapping. A paint system displays a 

3.2 

Bitmap representation of a floor plan: rooms are modeled by collections of adjacent pixels 

bitmapped image on the screen and provides "tools" (actually operations on the bitmap) for performing various graphic manipulations. Some computer programs used to perform floor-plan layout tasks represent plans, in closely analogous fashion, as sets of square modules (figure 3.2). An architect working with any of these systems has entered a two-dimensional point world. 

In a three-dimensional Cartesian coordinate system, space can be filled, to any desired density, with a cubic array of points. When states are associated with these gridpomts they are known as voxels—volumetric elements. 

voxel (point  (X, Y, Z), State) 

A binary array of voxels can be used to represent three-dimensional solid shapes (figure 3.3), and in medical imaging voxel arrays are frequently used for three-dimensional representation of anatomy.5 In this case the description of states is elaborated to allow representation of spatial distribution of material, thus: 

voxel (point  (X, Y, Z), Material) 

Architectural theorists have occasionally noted that building forms might be represented in this fashion: in his discussions of modular coordination, for example, Albert Farwell Bemis (1936) showed how architectural forms could be built up from four-inch cubes (figure 3.4). But in practice it rarely proves useful to adopt such an extreme atomistic viewpoint. 

3.3 

A three-dimensional solid represented by a voxel array 

the logic of architecture 

3 A 

A  house represented as a collection of four-inch cubes (after Bemis, 1936] 

line (point (XI, Yl), point (X2, Y2)) 

3.5 

Representation of a straight line by its endpoint coordinates 

Circular arc 

Elliptical arc 

3.6 

Different types of lines connecting the same two points 

LINE WORLDS 

A famous passage from Alberti's  Ten  Books of  Architecture  suggests the usefulness of taking lines as primitives. Alberti proposed that "the whole force and rule of the design consists in a right and exact adapting and joining together of  the lines and angles  which compose and form the face of the building" (my italics). In other words, lines are the elements of architectural compositions, and design is a matter of forming relationships (such as angles) between lines. 

An architect who takes up drafting instruments such as parallel rule, triangles, dividers, and compasses to construct plans, sections, and elevations enters the kind of world that Alberti had in mind. The associated theory is that of Euclid's geometry, so it is not surprising that this has figured prominently in the history of architectural thought. The "secrets of the medieval masons consisted, in large part, of Euclid-based procedures for construction of line figures (Frankl, 1945). Renaissance architectural treatises, such as Serlio s  Five Books of Architecture  (1545), typically introduced points, straight lines, and arcs as basic compositional elements, then surveyed line figures and constructions. And the first significant discussion of architectural theory in English was contained in Dr. John Dee's preface to an English translation of Euclid's  Elements  (1570). 

In a two-dimensional Cartesian coordinate system, a straight line segment can be represented by its endpoint coordinates (figure 3.5). In other words, we can describe it as a relationship of two points:  line (point (XI, Yl), point (X2, Y2)) 

Arcs, splines, fractals, and other types of curved lines can also be represented by associating coefficients specifying shape between the endpoints (figure 3.6).6 Thus the database of a two-dimensional, line-based, computer graphics system consists of records describing lines, and display software translates this information into corresponding marks on a screen or plotting surface. Various relations in the set of lines, such as connection at endpoints, might also be recorded. Associated editing operations usually allow the user to insert, delete, extend, trim, divide, reshape, and move lines of various types. Thus a line world is established in much the same way that traditional drafting instruments do so, an computer-aided design systems of this type are consequently called two-dimensional drafting systems. 

perpendicular bisector of line AB 

Bisector of angle CAB 

Tangent from point B to circle centered at A 

3.7 

Some Euclidean constructions of straight lines and arcs 

Euclid's  Elements  is mostly concerned with the types of relations into which straight lines and arcs can be put; that is, with the construction of parallels and perpendiculars to straight lines, bisectors of angles, tangents to circles, and so on (figure 3.7). Drafting instruments and Euclid's theorems provide the means to form such relationships, and computer drafting systems provide analogous capabilities. Composition in a two-dimensional line world thus becomes a matter of using the available construction tools to build up structures of such relationships. 

The development of perspective construction methods encouraged Renaissance architects to explore not only two-dimensional line worlds, but also three-dimensional worlds in which building designs became "wire frames" of lines in space—depicted by projecting these lines onto a plane (figure 3.8). Line-based computer graphics techniques can be extended from two dimensions to three in a similar way: a three-dimensional coordinate system is introduced, endpoints are now represented by coordinate triples instead of coordinate pairs (figure 3.9), and the display software must appropriately project lines onto the screen or plotting surface before drawing them (figure 3.10). Systems organized like this are usually known as wire-frame modeling systems. 

To work in a line world (either two-dimensional or three-dimensional) is to direct attention constantly to discontinuities of color or material, boundaries and silhouettes of shapes, edges of spaces, and the profiles defined by the intersections of surfaces (figure 3.11). Everything else is implicit and must, literally, be read between the lines. Translation from a line world to three-dimensional physical reality is largely a matter of cutting along specified lines, painting up to specified lines, and so on. 

3.8 

A wire-frame perspective drawing of a three-dimensional form (after Serlio's  Five Books of Architecture,  1545) 

3.9 

Representation of a straight line by coordinate triples 

ill 

line (point (XI, Yl, Zl), point (X2, Y2, Z2)) 

3.10 

A computer-generated wire-frame perspective 3.11 

Lines defining edges and intersections of surfaces (after Guarini's  Aichitettuia Civile,  1737) 

4   4 

the logic 

OF ARCHITECTURE 

SURFACE WORLDS 

Just as zero-dimensional endpoints bound one-dimensional line segments, so one-dimensional line segments can become the edges bounding two-dimensional polygons (figure 3.12). A triangle, for example, might be described as a relationship of lines: 

triangle (line (point  (XI, Y1 ), point  (X2, Y2)),  line (point  (X2, Y2),  point  (X3, Y3)),  line (point  (X3, Y3),  point  (XI, Yl))) 

Circles (figure 3.13) and ellipses (figure 3.14) are also closed planar shapes. A colored circle, for example, might be described: 

circle (location  (X, Y),  size  (Diameter),  color  (Hue, Saturation, Value)) 

More complex closed planar shapes can be produced by using a variety of curved lines as edges (figure 3.15). When closed colored shapes are arranged in the plane (figure 3.16), an image related to the traditions of painting, rather than to those of line drawing, is produced. 

3.12 

The vertices, edges, and surface of a plane polygon 

X 

3.13 

Description of a circle by three variables 

Length 

X 

3.14 

Description of an ellipse by four variables 

3.15 

Some examples of closed planar shapes with both straight and curved edges 

Designers frequently take two-dimensional colored shapes as the primitives of design worlds. An architect might, for example, cut shapes from cardboard to represent rooms or furniture items, then shuffle them around on a plane surface to explore alternative configurations. Similarly, a painter might cut shapes from colored paper and arrange them to produce a collage. 

The data structure of a computer graphics system for manipulating this sort of world has records for the various kinds of closed planar shapes that are admitted—polygons, circles, ellipses, and so on. Usually each record stores shape, position, color, and pattern information. Associated editing operations typically provide for shaping and positioning the graphic elements and for assigning colors and patterns to them. 

Closed planar shapes can also be arranged in three-dimensional space. A cube, for example, is twelve edges in a line world, but is six square surfaces in a three-dimensional surface world (figure 3.17). 

Once surfaces are liberated into three-dimensional space they can become curved as well as planar. An architect s design world might, for example, admit of cylindrical, spherical, and conical surfaces (figure 3.18). An automobile stylist's design world needs to be populated with warped and spline surfaces as well. 

Traditionally, architects have explored surface worlds by constructing physical models of cardboard, clay, or fabric, or through use of painters' surface-rendering techniques. More recently, however, computer-aided design systems with the capacity to model and render surfaces have become increasingly commonplace.7 The data structure of such a system records vertex coordinates, the associations of edges to vertices, the associations of surfaces to edges, and coefficients specifying edge and surface curvatures. There are operations to insert, delete, reshape, and move surfaces. Usually, as well, there is software to render surface compositions with hidden edge lines removed or with shading (figure 3.19). 

To work in any such surface world, and to consider the visual effects that illuminated surfaces produce, is to heed Le Corbusier's admonition that architecture is "the masterly, correct, and magnificent play of masses brought together in light." Translation from a surface world to three-dimensional physical reality usually involves producing specified surface shapes (by such methods as bending, lofting, milling, and so on) and specified surface qualities (by painting, polishing, etc.). 

3.16 

A floor plan schematically represented as a collection of closed colored shapes in the plane 

3.17 

Point, line, and surface boundary models of a cube 

3.19 

Hidden-line and shaded-surface views of a surface composition 

3.20 

The complementarity of solids and voids in a building 

VOLUMETRIC WORLDS 

In the same way that lines can bound surfaces, so surfaces can bound closed volumes such as cubes and spheres. In architecture, closed volumes appear both as solid construction elements (columns, beams, etc.) and as bounded voids (rooms, for example). Thus a building can always be understood, in complementary ways, as an assemblage of solids or as an assemblage of voids (figure 3.20).8 

Just as points bound lines and lines bound polygons, so polygons bound polyhedra. Thus, for example, a cube can be represented as a relationship of surfaces. The three-dimensional volume is bounded by six two-dimensional surfaces, each two-dimensional surface is bounded by four one-dimensional lines, each one-dimensional line is bounded by two zero-dimensional points, and each point is specified by a triple of numbers. (It is straightforward but tedious to write out the corresponding symbolic expression.) 

Architects sometimes use three-dimensional volumes directly, as the primitives of compositions.- Le Corbusier suggested this in a well-known sketch (figure 3.21): he introduced a vocabulary of basic volumetric elements, then showed how these might be assembled into a complex architectural composition. As a child, Frank Lloyd Wright played with Froebel blocks (figure 3.22), and many of his mature architectural compositions clearly emerge from a process of taking simple volumes and intersecting them in space to produce something richer (MacCormac, 1974; figure 3.23). 

3.21 

A sketch by Le Corbusier from  Vers une architecture  (1923), showing how architectural compositions can be assembled from simple volumetric solids 

3.22 

Composition of closed volumes: some forms constructed with Froebelblocks 

3.23 

The combination of simple hip roofs to produce more complex volumes in Frank Lloyd Wright's prairie houses (after Koning and Eizenberg, 1981) 

THE LOGIC OF ARCHITECTURE 

Surface shape 

Solid shape 

Wooden or polystyrene building blocks of various sizes and shapes can be used for exploration of volumetric worlds. Brunelleschi reportedly carved large turnips, and modern architects have sometimes (with unfortunate results) turned to sugar cubes. The techniques of stereotomy provide a way to explore three-dimensional volumetric worlds by using drafting instruments to construct projected views.9 But such media and techniques have obvious disadvantages, and the computer offers an increasingly attractive alternative. 

Computer-aided design systems that take closed volumes as their primitives are usually known as solid modelers.10 They provide vocabularies of closed volumes (boxes, cylinders, spheres, etc.), together with operations for inserting, deleting, reshaping, and positioning them. Advanced solid modelers also provide operations for combining simple shapes to produce more complex shapes. 

The data structures of solid modelers are more complex than those of line or surface modelers since they must keep track of more associations: not only of edges to their endpoints and faces to their bounding edges, but also of volumes to their bounding faces. Furthermore, variables describing volume, mass, and material properties may be associated with solids. 

Translation from a volumetric world to physical construction is usually more direct and less problematic than it is for the other types of worlds that we have considered. Two-dimensional design worlds have inherent ambiguities of interpretation in the third dimension, line worlds are ambiguous about surface, and surface worlds can be ambiguous about the disposition of solids and voids; but volumetric worlds leave little missing information to be filled in and few inconsistencies to be resolved in the translation process. It is even feasible, in some contexts, to automatically translate solid models into numerical-control cutter paths for production of actual three-dimensional objects (Grayer, 1977). 

SHAPES 

In any design world a shape may be defined as a collection of primitives—such as a collection of pixels, a collection of straight lines and arcs, a collection of polygons, or a collection of solids (figure 3.24). Any primitive is, itself, a shape. The empty shape contains no primitives. 

It is tempting to go a step further and say that a shape is not merely a collection, but a  set  of primitives. Thus primitives become atoms of compositions—definite, discrete parts 

5 1 

DESIGN WORLDS 

—335 

Alternative decompositions of a shape into primitives 

that retain their identity. Sometimes this is appropriate, and most computer-aided design systems treat shapes as sets of primitives. But it can lead to difficulties. If we assume, for example, that the shape shown in figure 3.25 consists of eight primitive lines, then we are not recognizing the existence of the small central square. On the other hand, if we assume that the shape consists of twelve primitive lines, then we are not recognizing the existence of the two larger rectangles. To avoid this sort of difficulty I shall not insist that shapes are sets of primitives, and I shall use the more general term "collections."11 

FUNCTIONS AND RELATIONS OF SHAPES 

In general, we will be interested not only in shapes themselves, but also in functions and relations of shapes. So the specification of a design world must provide for this. 

Consider, for example, the function  length  (Line).   We can reasonably say that a design world represents this function when there is some way to evaluate it for any line picked out by a value of the argument Line. If a graduated scale is associated with a design world of drafted lines, for example, the designer has a simple way to find the required value. But the scale does not provide a way to evaluate the function  circumference  (Circle):   to accomplish this task the designer must be able to measure diameter and must know the formula for calculating circumference as a function of diameter. 

In a similar way, a design world represents a relation of shapes if and only if there is some way to determine whether specified shapes are in the relation. In a world of colored cardboard polygons, for example, a designer can determine the truth of assertions such as the following by visual inspection: 

color (square, red) adjacent (square, triangle) 

Computer-aided design systems typically represent various relations of shapes in their databases by structures of pointers or by tables in a relational database system (Codd, 1970; Chen, 1976). Thus they can provide facilities for querying the relations of a specified shape or the shapes in a specified relation. 

Methods of evaluating functions and relations of shapes in a design world by visual inspection, use of measurement instruments, or execution of computer programs provide a designer with the capacity to make observations about a 

design. Then, as we shall see in chapter 5, these observations can be combined with other knowledge to yield useful inferences. The practical usefulness of a design world is largely determined by the range of observations that it allows. 

SPECIFICATION AND IMPLEMENTATION OF DESIGN WORLDS 

The informal characterization of design worlds on which I have relied so far can now be made precise. Let us summarize what must be done to specify a design world. 

First, we must create some working space. This can be done by assuming a Cartesian coordinate system or by taking a clean sheet of paper on which to draw. 

Next, we must define the primitives from which designs are assembled. The simplest of these objects are points. Usually it is useful to introduce various kinds of lines: straight segments, arcs, conics, splines, fractals, and so on. We might add a variety of closed planar objects: circles, ellipses, polygons, etc. In a three-dimensional design world we might allow curved surfaces, such as spherical, cylindrical, conical, ruled, and spline surfaces. Finally, we might allow closed solids such as spheres, cylinders, cones, and polyhedra. 

Once the primitives have been established, we can define shapes as collections of primitives. Any primitive is a shape, and any arrangement of primitives is a shape. To describe such collections we need a binary relation  member  associating primitives with shapes, so that we can construct sentences like: 

member (line3, square2) 

The next step is to specify the functions and relations of shapes that we will want to be able to evaluate. Often we will be interested in measuring geometric properties such as lengths of lines, areas of closed planar shapes, and volumes of closed solids. We may want to inspect colors and textures of shapes. And we will usually be concerned with various binary relations of shapes—inclusion, adjacency, overlap, disjointness, and so on. 

A specification of a design world is made practically useful to a designer by implementing it in some way. The implementation might, for example, employ paper and drawing instruments and rely on the graphic expression of properties, functions, and relations. Grouping of lines into shapes might be expressed by drawing different shapes on different 

overlays of transparent paper. Special instruments, such as scales, protractors, and planimeters, might be introduced to evaluate certain functions. Alternatively, the implementation might employ wooden or polystyrene blocks, together with cutting and shaping tools. In this case, functions and relations are expressed spatially and by joining (with glue, hinges, pins, etc.). In a computer implementation, geometric primitives are typically stored as records. Grouping of primitives into shapes might be expressed by providing pointers from primitive records to shape records, or by setting up appropriate tables. Functions and relations of shapes might be expressed explicitly by storing tables in a relational database or implicitly by providing procedures that can be executed to return values of functions or lists of shapes in specified relations. In any case, the implementation establishes a physical symbol system. It provides some kind of memory structure in which shape tokens (embodied as cardboard polygons, blocks of wood, pencil lines on paper, or bits in computer memory) can be stored, and some way of interrogating that memory structure to make observations of designs. 

AXIOMATIZATION OF DESIGN WORLDS 

Once we have established the space, shapes, primitives, properties, functions, and relations that will concern us in a design world, we can go a step further and axiomatize that world. That is, we can state necessary relationships between shapes that exist within it. A world of wooden blocks, for example, is governed by the axiom that two blocks cannot be in the same place at the same time. And a two-dimensional line world manipulated with drafting instruments is governed by the axioms of Euclid's geometry. Sometimes axioms express arbitrary conventions, for example that all dimensions are modular (figure 3.26) or that rectangular cuboids can only be arranged orthogonally to each other (figure 3.27). 

When designers work with conventional graphic and physical modeling media, much of the axiomatization of the design world is implicit in the physical properties of the materials and instruments that are used. Similarly, in a computer-aided design system, the axiomatization is usually implicit in the organization of the data structure and the definition of the procedures used to operate on the data structure. In principle, though, the axioms of a design world may be stated formally and rigorously as a set of logical assertions. 

3.26 

Schematic plan of Children's Home, Amsterdam, 1958, by Aldo Van Eyck. A composition in a design world strictly governed by an axiom of modularity. 

3.27 

A composition by Van Doesburg and Van Eesteren, 1925. De Stijl designers often worked in design worlds governed by axioms that allowed cuboids to intersect but required them to remain strictly orthogonal. 

Just as variables have ranges of states so too do complete design worlds. In a world of wooden blocks or cardboard cutouts, a state is simply a particular arrangement of the pieces. In a world of lines drawn on a surface, a state is a particular line pattern. And in a computer-aided design system, a state is a particular binding of values to the variables in the data structure. 

A design operation (such as moving a wooden block or inserting a line) changes a design world from one state to another. The set of all states reachable by performing design operations, then, becomes the universe of possibilities that a designer explores (usually very partially) in search of design solutions. This universe may be pictured as a state-action tree (figure 3.28), in which the root is the initial state, internal nodes are possible states (not necessarily unique), and branches are available design operations. By performing manual operations on a drawing or scale model a designer traverses a state-action tree. By quickly executing design operations a computer-aided design system provides a highspeed way to move around in a state-action tree. In practice, state-action trees usually branch luxuriantly and rapidly become inconceivably enormous. But they are always limited to the territory staked out by some set of assumptions about shape primitives and their possible properties and relationships. 

A designer's exploration of formal possibilities can be thought of as a path traced through the state-action tree—like Ariadne's thread strung through the Cretan labyrinth. The sequence of nodes along this path describes the evolution of the designer's knowledge about the form of a design proposal, and sometimes this evolution is recorded by preserving sequences of sketches, snapshots of models in progress, or backup copies of a computer-aided design system's database.12 The tree may not always be traversed in a 

3.28 

Part of the state-action tree for a design world, and a designer's path through it from the initial state to a final state. Circles represent states and arrows represent available actions. 

forward direction: sometimes a designer decides that a line of exploration is not fruitful and so retracts some design moves to return to a former node, perhaps even to the root of the tree. 

The intermediate states of a design world need not be complete, consistent depictions of the three-dimensional form of a building: designers make extensive use of incomplete and ambiguous sketches and models as they try to discover and pin down formal possibilities. But we require completeness (in some reasonable, practical sense) and consistency of the final state, which we are to understand as a proposal for the form of an actual building. 

SUMMARY 

In summary, selection of the primitives and axioms for a design world establishes some domain of formal possibilities for a designer to explore, and the designer must be concerned that the domain is appropriate to the task at hand. The process of exploration is supported by implementing the formal specification of the world with graphic media and instruments, with physical modeling media and tools, or as the database and associated procedures of a computer-aided design system. 

We have now seen how an architectural discourse can unfold as a sequence of assertions in a critical language or as a sequence of depictions constructed from graphic tokens in a design world. It remains to show how these verbal and graphic discourses are related. 

Critical language 

4.1 

Observation of how a critical language relates to the design world 

4.2 

A matrix that establishes an interpretation 7 of a critical language in a design world 

INTERPRETATION OF FIRST-ORDER LOGIC IN DESIGN WORLDS 

Once we have established a design world and put it into some state, we can make claims about it. These claims may or may not be true of that world, and we need some way of determining whether they are or not. In other words, we need a way to interpret sentences in the design world. We might interpret English sentences, but here we shall concern ourselves with interpretation of sentences in first-order logic, as introduced in chapter 1. 

We shall adopt the viewpoint of the observer shown in figure 4.1. On one hand we have a language with a vocabulary (names for shapes and for function and relation symbols) of our choosing and the syntax of first-order logic. The language is the set of sentences which can be constructed with the specified vocabulary according to the specified syntactic rules. On the other hand we have a design world, which has some set of possible states. We assume that the symbols of the sentences refer in some consistent way to the shapes, functions, and relations of the design world. Thus the sentences can be regarded as claims about states of the design world. For any given sentence, and any given state, we can ask: "Is this sentence true or false?" We know the meaning of a sentence if we know what the design world would have to be like in order for the sentence to be true—that is, the conditions under which it is true (or false). 

A straightforward (but uninteresting) way to establish the semantics of a critical language, then, is to enumerate all the possible sentences in the language, to enumerate all the possible states of the design world, and to associate a value of true or false with each sentence/state pair in the Cartesian product of the two sets. We can display the result of this in the form of a matrix, as shown in figure 4.2. Rows correspond to states, columns correspond to sentences, and the symbols  T  or  F  indicate whether a given sentence is true or false for a given state. By scanning down a column we can find all the states for which a sentence is true—in other words, what it takes to make it true. By scanning across a row we can find all the true sentences about a state—everything that can be truly said about that state. 

The pattern of  T  and  F  symbols in the matrix establishes an interpretation  I  of the critical language in the design world. Clearly it is possible to establish many different 

interpretations  I, J, .. .  etc. by deploying T and  F  symbols in different patterns within the matrix, and a given sentence may be true under one interpretation and false under another. Usually, though, we are not particularly interested in arbitrary interpretations: we want, instead, to establish some interpretation  I  that accurately expresses our intuitive grasp of the meanings of vocabulary elements and sentences in the language. 

Another way to formulate this view of semantics is to say that each sentence is a truth function—that is, a function mapping from states of the design world to the set of values  {T,F}.  A column of the matrix defines this function by explicitly giving its value for every state of the design world. 

The obvious problem with this approach is that explicit construction of the matrix is, in any interesting case, impractical. It would be inconceivably enormous. But the approach becomes much more interesing and useful if, instead of defining all the truth functions explicitly, we provide concise and efficient rules for evaluating them. In other words, we specify general truth conditions. 

4.3 

A design world populated by lines 

To specify truth conditions we must first specify how vocabulary elements in the critical language refer to the design world, then give rules by which the truth-values of sentences are determined from the truth-values of their parts. This idea was first rigorously and comprehensively developed by the philosopher Alfred Tarski, then carried further by Rudolf Carnap in his extensive writings on semantics. It has become the foundation of the modern theory of model-theoretic semantics.1 Detailed, rigorous exposition of theory requires introduction of some fairly formidable technical apparatus and use of a highly abstract style of argument that will seem strange and tedious to most designers. This is best left to the standard texts on formal logic and model theory. But the basic idea can be grasped through consideration of a simple example, and this will suffice for our purposes here. 

Consider a two-dimensional design world populated by straight lines described by their endpoint coordinates. One possible state of that world is illustrated in figure 4.3. Let us assume that, for referring to individual lines, the critical language has a set of proper names: 

(linel, line2, line3 . . . lineNj 

The first step, in establishing an interpretation  I,  is to define a one-to-one mapping of proper names to lines; that is, an interpretation of proper names as lines. This can be done by 

writing names on lines as shown, or in a data structure by using the names as keys of records storing endpoint coordinates. 

Next, consider one-place predicates such as: 

vertical  (Line)  horizontal  (Line) 

The extension of such a predicate in the design world may be defined as the set of lines for which the predicate holds. Thus, in our example, the extension of  vertical  (Line)  is given by the list of names: 

(linel, line2 / 

and the extension of  horizontal  (Line)  is given by the list: 

/ line3, line4j 

In this way we interpret one-place predicates as sets of lines. Furthermore, we can write simple rules for determining whether arbitrary lines are in the extensions of these predicates. A line is vertical if and only if its endpoint x-coordi-nates are the same. And a line is horizontal if and only if its endpoint y-coordinates are the same. 

Two-place predicates can be handled in a similar way. Consider, for example: 

parallel  (Line, Line)  perpendicular  (Line, Line) 

The extension of  parallel  (Line, Line)  in the design world is given by the list of ordered pairs: 

((linel, line2), (line2, linel), (line3, line4), (line4, line3)) 

And the extension of  perpendicular  (Line, Line)  is given by: 

((linel, line3), (linel, line4), (line2, line3), (line2, line4), (line3, linel), (line3, line2), (line4, linel), (line4, line2)j 

The language might include three-place predicates such as: 

triangle  (Line, Line, Line) 

And it might include four-place predicates like:  square  (Line, Line, Line, Line) 

In general, an n-place predicate is interpreted as a set of ordered n-tuples of lines, and we need a rule or procedure for determining whether the predicate holds for an arbitrary  n- tuple of lines. 

To interpret a function symbol we provide a method for evaluating the function. Consider the function: 

length  (Line) 

6 1 

CRITICAL LANGUAGES 

We know how to interpret this if we can place a scale against an arbitrary line and read off its length or if we can perform appropriate arithmetic operations on endpoint coordinates. Then, if we have a way of determining whether one number is less than another, we can interpret sentences of the form: 

lessthan (length (Line), length (Line)) 

The next step is to extend the rules of interpretation to cover not only simple sentences, but also compound sentences formed with the connectives  and, or, not.  For example, we might want to interpret sentences like: 

parallel (Line, Line) and not perpendicular (Line, Line) 

We simply use the standard Boolean laws, as expressed in truth-tables, to determine the truth-values of compound sentences from the truth-values of their constituent sentences. 

A further step is to extend the rules to cover sentences with quantifiers, such as: 

VLine (straight (Line)) 

We can say that this is true if and only if all individual lines in the design world are elements in the extension of the predicate  straight (Line).  Similarly, we can say that the sentence. 

3 Line (short (Line)) 

is true if and only if there is at least one line in the design world that satisfies the predicate  short (Line).  In a computer-aided design system, we might provide for interpretation of quantified assertions by writing procedures to search through lists of line records and perform tests for straightness, shortness, and so on. 

A final step would be to extend the rules to cover, in general, n-place quantified assertions. This, however, requires introduction of more extensive logical apparatus, so I shall not pursue it here. 

A computer game for teaching first-order logic, known as Tarski's World (Barwise and Etchemendy, 1987), strikingly dramatizes this idea of interpretation of first-order logic sentences in a design world. Tarski's World presents two windows (figure 4.4), one for entering sentences in first-order logic and one for manipulating a three-dimensional design world of polyhedra. The world is populated by tetrahedra, cubes, and dodecahedra. There are operations for inserting, deleting, naming, sizing, and moving polyhedra. For describing relations of polyhedra the system provides a selection of 

4.4 

Tarski's World: first-order logic sentences are interpreted in a world of three-dimensional blocks on a grid 

relation symbols:  small, medium, large, smaller, larger, leftof, between, rightof, backof,  and  frontof.  The system tests and reports whether sentences are syntactically correct and whether they are currently true or false in the world.2 

CRITICAL LANGUAGES AND OBSERVATIONS 

We can now provisionally define a critical language as a language with an interpretation  I  in a given design world. Thus, for example, Tarski's World has a highly simplified critical language. The vocabulary has names for a few kinds of polyhedra and a few kinds of relations. The syntax is that of first-order logic, and it allows the construction of sentences about polyhedra, their sizes, and their spatial relations. Nothing else can be said. 

Different critics may, and sometimes do, have different interpretations of a critical language in a design world; in this case they may mean different things by the same critical assertion. In practice, there is not likely to be much argument about observations like: 

adjacent (square, circle) 

63 

CRITICAL LANGUAGES 

Critical language 

Design world 

4.5 

A triangular pattern of reference: sentences in the critical language refer directly to states of the design world, states of the design world depict possible states of the real world, so sentences refer  indirectly  to the real world 

There is good consensus about what it takes for this to be true. But there is less consensus about assertions like: 

graceful (juxtaposition (square, circle)) 

Critics may differ considerably in their conceptions of the conditions for correct application of the predicate  graceful  to a juxtaposition of shapes. 

In this book I shall begin with very simple design worlds and critical languages, then progressively elaborate them to allow for more sophisticated exploration and discourse. For the most part I shall use two-dimensional and three-dimensional worlds of lines, polygons, and polyhedra, and I shall use standard first-order logic for making assertions about those worlds. First-order logic has some strict limitations, but it will suffice for our purposes here.3 

DESIGN PROBLEMS 

So far we have a completely hermetic system. The critical language refers to a design that is bounded and self-contained. This will not do, since design (as opposed to abstract pattern-making in a microworld) is undertaken with the intention of changing the real world. We must extend the framework that has been developed by considering the way in which a design world depicts possible states of the real world. 

Under a depiction relation, shapes in the construction world stand for objects in the real world. Furthermore, properties of shapes in the design world stand for properties of objects in the real world, and relations of shapes in the design world stand for relations of shapes in the real world. A triangular pattern of reference thus develops (figure 4.5): sentences in the critical language refer directly to shapes in the design world and indirectly to objects in the real world. 

Now we can give precise definition to the intuitive notion of a design problem. In general, a problem exists when you want something but cannot immediately see how to get itt intellectual effort is required to find a solution. More specifically, a design problem exists when you can say what you want in the critical language but cannot immediately see how to produce a state of the design world that depicts what you want. The task is to manipulate the design world to produce such a state and to demonstrate that this state satisfies the predicates of the formulation. There is an implicit subjunctive: if the real world were as depicted in a successful design, then you would actually have what you want. 

* 

Construction world 

Design world 

4.6 

A state of the design world may have multiple realizations in the construction world 

CONVENTIONS OF DEPICTION 

In order to understand precisely how architectural depiction works we must first dispose of an ontological question. We must ask what exists, in the real world, to be depicted. The usual architect's answer (with which I have no reason to quarrel for our purposes here) is that a site and some repertoire of construction components and materials exists. The possible states that concern us are the possible configurations of components and materials on the site. A design world does not need the capacity to depict anything except the site and an arrangement of components and materials on it. 

In different contexts, though, the nature of the site, of the construction repertoire, and of the design problem formulation may require depiction of different sorts of things. To keep this clear, I shall no longer speak of the "real" world but of a "construction world" that encompasses everything that may need to be depicted and reasoned about in the exploration of a particular design problem. This greatly simplifies the problem of establishing a satisfactory system of depiction. 

Formally, a depiction of a construction world in a design world is the value of a function or partial function  D  mapping from physical objects in the construction world to shapes in the design world, from functions in the construction world to functions in the design world, and from relations in the construction world to relations in the design world. In general,  D  will be a many-to-one mapping: many states of the construction world will have the same depiction in the design world. Conversely, there is a one-to-many mapping (the inverse of  D)  from states of the design world to states of the construction world (figure 4.6). Any state of the construction world corresponding, under this inverse mapping, to a state of the design world is a realization of that design. 

Thus the notion of truth-functional meaning is extended. For any state of the design world and state of the construction world we can ask whether we have a true depiction in the design world. Or, if we want to look at it in the other way, we can ask whether we have a true realization in the construction world. A surveyor might begin with an existing building and attempt to produce a true depiction (an accurate measured drawing, say) in the construction world. Conversely, a contractor might begin with a state of the design world and attempt to produce a true realization (a corresponding actual building) in the construction world. In the case of an unrealized design we will be interested in the question of whether a true realization  can  be produced in the construction world. 

4.7 

Three-dimensional scale modeling: shapes in the design world stand for similar but larger shapes in the construction world 

4.8 

Plans: two-dimensional shapes in the design world are parallel projections of shapes in the construction world 

The usual systems of architectural depiction are well known, but it will be useful to review them briefly here. Any such system is grounded on rules establishing the referer-ences of graphic tokens.* In a plan or elevation, for example, lines usually stand for boundaries—edges of solids, or divisions between different materials. Often there are conventions under which colors and patterns stand for materials. And in a plumbing or electrical layout drawing, various special symbols (which need not "look like" their referents) may indicate different types of fixtures. (In chapter 6 I shall examine these kinds of rules more closely). 

Secondly, in order to convey spatial relationships, there must be some function mapping from coordinates of objects in the construction world to coordinates of corresponding graphic tokens in the design world. The techniques of scale modeling, plan, elevation, and section drafting, axonometric projection, and perspective rendering employ different functions of this sort.5 

For example, the simplest (and probably the most ancient) of depiction techniques is to make, in the design world, a scaled-down three-dimensional model of the proposed building in the construction world (figure 4.7). Technically, the depiction function  D  becomes a similarity transformation from points in the construction world to points in the design world: three-dimensional shapes in the design world stand for similar but larger shapes in the construction world. 

A second standard technique is to compose plans, elevations, and sections in the design world. In this case, two-dimensional shapes in the design world are parallel projections of three-dimensional shapes in the construction world6 (figure 4.8). 

Axonometric projections generalize this principle (figure 4.9). Under the conventions of plan, elevation, and section drawing we usually position the projection plane so as to minimize foreshortening of shapes, but in an axonometric we rotate the projection plane so that perpendicular lines and surfaces can be shown—at the cost of producing some foreshortening. Technically, shapes in the design world become affine transformations of shapes in the construction world. 

Yet another convention, which was known to the Romans and then rediscovered in Renaissance Italy, is to replace parallel projection by perspective projection. The essential difference between parallel and perspective projection is illustrated in figure 4.10: in parallel projection the projection rays are imagined to be parallel (like rays of sunlight casting shadows), while in perspective projection they are imagined 

4.9 

Foreshortening of shapes in axonometric due to the rotation of the projection plane 

4.10 

Comparison of parallel and perspective projections 

6 7 

to diverge from the viewer's eye. From an arithmetic viewpoint (as when these projections are calculated in a computer graphics system), we can say that a parallel projection on the xy picture plane is made simply by discarding the z (depth) coordinates, while a perspective projection is made by dividing by the z coordinates, so that shapes are scaled down in proportion to their depth back from the xy picture plane. This division has the effect of encoding additional depth information in the drawing at the cost of further shape distortion: shapes in the design world are now perspective transformations of shapes in the construction world. 

Figure 4.10 also shows one of the reasons why mappings from the design world to the construction world are, in general, one-to-many instead of one-to-one: any point on the picture plane corresponds to many points in the construction world along the projection ray passing through it. Thus different three-dimensional arrangements in the construction world may collapse onto the same image in the picture plane (figure 4.11). Architects often work with such ambiguous views; this can be a strategy for concentrating on certain design issues and relationships while postponing consideration of others. Later, as more design decisions are made, the depiction may be disambiguated—for example, by providing a wall section to clarify the depth relationships in an elevation. 

Sometimes a designer wishes to specify the connectivity, but not the precise sizes and shapes, of elements in a composition. An architect might, for example, draw a rough "bubble diagram" of a floor plan, and an electrical engineer might produce an undimensioned network diagram. In this case, shapes in the design world become nonlinear continuous transformations of shapes in the construction world. 

Figure 4.12 shows how the standard depiction conventions form a hierarchy according to the generality of the transformations involved. If full-scale, three-dimensional mock-ups are composed in the design world, then shapes in the design world are isometries of shapes in the construction world. If three-dimensional scale models or plans and elevations are composed, then shapes in the design world are similar to shapes in the construction world. When axonometrics are drawn, we can say that shapes in the design world have affinity to shapes in the construction world; and when perspectives are drawn, we can say only that the shapes in the design world are linearly related to shapes in the construction world. Other conventions of depiction, such as those 

CRITICAL LANGUAGES 

Similarity 

4.11 

An Ames room demonstrates that different architectural compositions may collapse onto the same perspective image 

6 8 

Affinity 

Nonlinearity  4.12 

Transformations of a square under different depiction conventions 

THE LOGIC OF ARCHITECTURE 

followed by cubist painters, may involve nonlinear transformations. 

A depiction (like a verbal description) is usually incomplete: it does not show everything that  could  be shown. A small-scale sketch plan might depict walls by single lines, thus not showing their thickness. Plans do not show height relationships, and elevations do not show depth relationships. Line drawings do not show colors and textures. Drawing, as has often been remarked, is the art of knowing what to leave out. 

ANNOTATIONS 

An architectural drawing may consist not only of graphic tokens specifying shapes and positions of objects, but also textual annotations associated with the graphic tokens. These annotations may serve to fix reference more precisely, as when some plumbing fixture symbol is supplemented with a serial number from a manufacturer's catalogue. They may also specify material properties, as when a graphic token depicting a wall is labeled "brick" or "concrete." (Colors and patterns may be used to encode the same information if appropriate coding conventions exist.) 

Sometimes annotations are physically separated from a drawing but logically connected to it by means of some cross-referencing scheme. Typically, for example, an architectural design is expressed jointly by a set of plan and elevation drawings and a set of cross-referenced text documents (specifications, door and window schedules, and so on). 

4.13 

Paths of reference in computer-aided design 

THE DATABASES OF COMPUTER-AIDED DESIGN SYSTEMS 

When a computer-aided design system is used (in place of conventional drawings or scale models), the pattern of reference becomes even more complex: the number of worlds to consider grows from three to four, and the interpretation links grow from three to six. The structure of the situation is diagrammed in figure 4.13. The database of the computer-aided design system contains records (or other structures) storing symbolic descriptions of physical components and assemblies in the construction world. In the graphic interface of the computer-aided design system this information is interpreted as a graphic display depicting those components and assemblies. An expression in the critical language may 

refer directly to graphic tokens in the display, indirectly to the database records from which the display is generated, and even more indirectly to the components and assemblies in the construction world described by those records. 

Each of these worlds has an associated vocabulary and syntax. In the construction world there is some vocabulary of physical components, which can be put together in compositions in certain ways. In the database there are records of various types, which can be put together in files, arrays, lists, and so on. In the graphic display there are pixels, lines, and polygons, which can be put together in graphic compositions. And finally, in the critical language, there are object names, predicate symbols, and function symbols, which can be put together in sentences. 

Conventions of interpretation define mappings between these worlds. We can, for example, consider the conventions for interpretation of the critical language in the graphic display, in the underlying database, or in the construction world that the database represents. We can consider how the design encoded in the database is interpreted as a graphic display or realized as a physical construction. And we can consider how graphic displays depict the construction world. These conventions of vocabulary and syntax in the various worlds, and for mapping between worlds, define a framework within which design reasoning takes place. 

EVALUATION OF CONSTRUCTION WORLD PREDICATES 

Given such a framework of conventions, a critic may want to make observations not only about the formal properties of the design itself, but also about the state of affairs that  would  result if the design were to be executed. The building that is depicted might, for example, be buildable or unbuild-able, economical or expensive, structurally adequate or inadequate. To provide for this, the critical language must be extended by addition of appropriate predicate and function symbols, and the meanings of these must be established by specification of truth conditions. 

4.14 

Flow of data in an integrated computer-aided design system that automatically determines whether a design requirement has been satisfied 

Critical language window 

Design world window 

Construction world window 

4.15 

Windows into different domains 

7 1 

Since the time of Galileo the standard way to specify such truth conditions has been to provide formulae and procedures for calculating the values of functions, or for determining whether predicates are satisfied, from information recorded in the design world. These formulae and procedures encode knowledge about the construction world. Let us imagine that a designer has drawn a rectangular cantilever beam in elevation and cross section and specified its material. The question is whether this beam is strong enough to support the loads to which it will be subjected. In his  Dialogues Concerning Two New Sciences  (1632) Galileo showed how to calculate the strength of a cantilever beam as a function of its section, length, and material properties, and thus how to evaluate the predicate  strong enough.  The succeeding centuries have seen the development of an enormous repertoire of techniques, based on classical physics and theorems of analysis and calculus, for calculating various measures of technical performance as functions of geometric and material properties (Cowan, 1977). 

Today these calculations are usually executed by computer. In "integrated" computer-aided design systems, values for input variables of analysis routines are extracted directly from the database that represents the design7 (figure 4.14). For example, there might be routines to perform area take-offs, cost analyses, structural analyses, and thermal analyses. The values that they output can be used in automatic verification procedures that report whether or not specified design requirements are satisfied. 

SUMMARY 

We have now seen how expressions in critical languages are interpreted in design worlds and how designs in design worlds are realized in construction worlds. (The relationships among these three domains can be summarized by imagining "windows" into each one, as shown in figure 4.15.) Design problems are formulated by specifying, in the critical language, predicates to be satisfied. The designer's basic task, then, is to find a state of the design world which depicts a state of the construction world satisfying the predicates. The critic's basic task is to identify predicates left unsatisfied by the designer's proposal. And the designer can respond to criticism by adapting the proposal to satisfy those predicates. 

CRITICAL LANGUAGES 

REASONING ABOUT DESIGNS 

KNOWLEDGE BASES ABOUT CONSTRUCTION WORLDS 

Really interesting critics do not confine themselves to obvious, direct observations and algorithmic analyses of a design. They go a step further and combine their observations with facts and rules about the construction world to derive comments that are not self-evident and that we may take to be surprising and insightful. This process of critical inference is schematically diagrammed in figure 5.1. 

The sum total of what a critic knows about a construction world is that critic's knowledge base. Its content might be expressed in many different formats—as English sentences, diagrams, code of computer programs, and so on—but it will be convenient for our purposes here to think of it as a set of declarative sentences in the syntax of first-order logic. This is not unrealistic, since first-order logic is sufficiently powerful to capture a great deal of useful, nontrivial design knowledge.1 Furthermore, there is available a well-developed theory of resolution in first-order logic; that is, determination that a statement is consistent with or derivable from another set of statements (Robinson, 1965). This considerably facilitates reasoning with knowledge represented in first-order logic.2 

Some critics operate with large knowledge bases and some with small ones. Some knowledge bases contain accurate knowledge of a construction world, while others may be incomplete and inaccurate. Closed-minded critics refuse to alter their knowledge bases, whereas open-minded critics are willing to add and retract facts and rules. Some take their knowledge to be categorical, and others admit of degrees of uncertainty. At any moment, though, the current knowledge base provides the foundation for making and justifying critical comments. 

In order for a critic to make useful comments about a design, the critic's conceptualization of the construction world (which forms the basis for expression of facts and rules about that world) and the designer's conceptualization (which forms the basis for depiction) must be similar. That is, the critic must have facts and rules about the objects and relationships that the designer depicts. This permits the critic to make observations of the design world, then to draw inferences from them. Different kinds of definition allow 

5.1 

Derivation of critical comments from observations of a design proposal and facts and rules about the construction world 

different kinds of observations and therefore different inferences: a plan does not provoke the same comments as a section. 

The set of true assertions about a design that can be derived from observations of it, together with the facts and rules in some critical knowledge base, by the application of a reasoning mechanism, constitute that design's entailment. Generally a design will entail economic, social, and cultural consequences of interest. It is the critic's task to explore the entailment. An epistemological problem must, however, be faced here. In practice, the entailment of any design will tend to be very large and complex. How does the critic focus on relevant implications and ignore the vast number of irrelevant ones (for example, that painting the walls green will not cause a neighboring building to explode)? This is an aspect of the well-known "frame problem" in artificial intelligence (Dennett, 1984). There is considerable anecdotal evidence to suggest that critics usually deal with it by coming to their task with an agenda of issues to be pursued. Consequently, designers must be on the alert for critical agendas that are too narrow or otherwise inappropriate. 

In general, an effective critic must know what to look for in a design, bring an adequate knowledge base and an appropriate agenda to bear, and apply sound, efficient reasoning strategies to derive useful comments.3 

AXIOMS, FACTS, AND RULES 

It is an ancient idea (going back at least to Euclid) that a knowledge base about some topic can usefully be structured as a collection of axioms, facts, and rules. We can think of the axioms as fundamental assumptions or basic definitions, such as those set forth at the beginning of Euclid's geometry. 

We then expect the corpus of facts to be consistent with these axioms and derivable from them through the application of rules. Facts can be proved by directly or indirectly deriving them from the axioms, or they can be disproved by demonstrating inconsistency with an axiom. This became the paradigm for Newton's mechanics and for Spinoza's axiomatized metaphysics. More recently it has served as the foundation for the development of "knowledge-based" computer systems that perform reasoning in various specialized domains. 

The axioms, facts, and rules of an adequate knowledge base for architectural criticism are extensive. They include those of physical geometry and classical physics (since a critic must be concerned with basic feasibility), of relevant areas of economics (since a critic must be concerned with cost and financial feasibility), of aspects of the social sciences (since a critic must be concerned with the relations of buildings to human behavior patterns), and of the relevant cultural framework. Thus the education of an architect involves not only development of facility in manipulation of design worlds, but also development of a sufficiently extensive knowledge base to allow derivation of an adequate picture of what those proposals entail. 

INFERENCE 

The mechanism by which critical comments are produced can be described as one of inference—deriving conclusions from premises. Each step in a logically sound inference process must be sanctioned by one of the rules of inference that logic provides.4 Rules of inference associate sentence patterns called conditions with sentence patterns called conclusions. Whenever we have sentences that match the conditions, we can infer sentences that match the conclusions. 

A particular type of compound sentence called an implication plays a crucial role in most inference processes. Implications are formed with the material conditional symbol, which is written —» and pronounced "if . . . then." The following, for example, is an implication: 

below (column, beam) supports (column, beam) 

This asserts,  "If  the column is below the beam  then  the column supports the beam." Whenever the antecedent (on the left) is true, the consequent (on the right) is true. 

Implications are used as premises in inference according to the rule of  modus ponens  (which, in fact, follows from the definition of "implies"), for example: 

premise 1     below (column, beam) -&gt; 

supports (column, beam) 

premise 2     below (column, beam) 

conclusion     supports (column, beam) 

They are also used in inference according to the reverse rule of  modus tolens,  for example: 

premise 1     below (column, beam) -&gt; 

supports (column, beam) 

premise 2     not supports (column, beam) 

conclusion     not below (column, beam) 

Bidirectional implications play a closely related role. These are sentences formed with the material biconditional symbol, which is written &lt;-&gt; and pronounced "if and only if ... then." The following is a bidirectional implication: 

below (column, beam) &lt;-&gt; above (beam, column) 

This asserts, "If and only if the column is below the beam, then the beam is above the column." This can be understood as an abbreviation for: 

below (column, beam) —&gt; above (beam, column) and above (beam, column) -&gt; below (column, beam) 

In a bidirectional implication the sentences on the left and right are said to be equivalent. Whenever one is true the other is true. And whenever one is false the other is false. 

One rule of inference that does not involve implications is called elimination. This applies to conjunctions, for example as follows: 

premise     stone (column) and round    (column) 

conclusion 1     stone (column) 

conclusion 2     round (column) 

Conversely, the rule of introduction licenses us to reason: 

premise 1     stone (column) 

premise 2     round (column) 

conclusion     stone (column) and round (column) 

Frequently we want to reason from the general to the particular by using the rule of universal instantiation, for example. 

premise 1     VX polyhedron (X) 

premise 2     X = column 

conclusion     polyhedron (column) 

Similary, we can replace variables in existentially quantified sentences according to the rule of existential instantiation, but this introduces some technical complexities that we will not pursue here. 

If we restrict ourselves to certain simplified forms of expression (as is the practice, for example, in Prolog programming5), we can omit explicit quantification in implications containing variables to yield concisely stated general rules, for example: 

below (X, beam) —&gt; supports (X, beam) 

This says that anything below the beam supports the beam—a fact about all the objects in the universe of discourse. According to the rule of universal instantiation we can, by instantiating X to suitable values, derive facts such as: 

below (column, beam) -&gt; supports (column, beam) below (wall, beam) -&gt; supports (wall, beam) below (bracket, beam) —&gt; supports (bracket, beam) 

In other words, a rule implicitly encodes a set of facts, and any fact in this set can be made explicit by instantiation. 

In general, critics take as their premises observations of the design and facts and rules about the construction world and derive their conclusions through a multistep process—by constructing chains of inference from intermediate conclusion to intermediate conclusion and eventually to the final conclusion. Some critic might, for example, work by the rules: 

triangle  (Shape)  —&gt; dynamic  (Shape)  dynamic  (Shape)  and color  (Shape,  pink) —&gt; postmodern  (Shape) 

Now, when he detects a three-sided pink polygon in a design world, he can conclude from the first rule that this shape is dynamic, and from the second rule he can derive the critical conclusion that the shape is postmodern. 

FORWARD-CHAINING AND BACKWARD-CHAINING 

Reasoning can proceed in two directions. A critic might, for example, begin with a set of observations and, by constructing chains of inferences, attempt to derive a useful set of conclusions: this is called forward-chaining inference (Davis and King, 1977). Alternatively, a critic might state a fact as a hypothesis and attempt to prove or disprove it: this is called backward-chaining inference. 

Typically, at any step in such a process, there are several (perhaps many) possible inferences to consider. So just as design worlds have associated state-action trees, so do critics. In this case, though, each state is a state of the critic's working memory (which we take to be a collection of sentences), 

5.2 

Drawings of unrealizable "nonsense figures" 

and each branch is a legal inference. Strategies for efficiently finding paths through those trees to useful conclusions are known as inference procedures. 

Procedures for both forward-chaining and backward-chaining inference may be executed manually. Alternatively, it is now possible to build efficient automatic inference engines. A "knowledge-based" or "expert" computer system consists, essentially, of a knowledge base of facts and rules about some domain of interest, together with an inference engine that can be applied to the knowledge base.6 Knowledge-based systems that provide design criticism began to appear in the 1980s and seem certain to be of increasing practical importance.7 

CONSISTENT, FEASIBLE, AND GOOD DESIGNS 

A basic task of critical inference is to establish whether or not a given design proposal makes consistent sense. A proposal is nonsensical if contradictory facts can be derived from observations of it. Some well-known examples of such proposals are illustrated in figure 5.2: observations of these lead to inconsistent conclusions about their three-dimensional geometry. If a design can be shown to be nonsensical, then there is no further entailment to consider. 

A design may be geometrically consistent but unrealizable. In a strong sense, a proposal is unrealizable if it can be shown to be inconsistent with physical laws. At best, we can imagine its realization in a construction world governed by physical laws that are different from those of the world in which we live. In a weaker sense, a proposal may be technologically or economically unrealizable in a particular construction world (the necessary materials and processes may not be available, or may cost too much), but realizable at some other time or place. For example, modern architects can assume that steel-framed highrise buildings are realizable, but ancient Greek architects could not. Finally, realizability may be socially or historically contingent. We might see that a proposal would be realizable if social conditions were different, or would have been realizable had history taken a different course. 

Among design proposals that can be shown to be realizable, a critic will usually be interested in discriminating the good from the bad. This requires knowledge of rules of valuation—that is, conditions for correct application of predicates such as  commodious  and  delightful.  In different contexts, at different moments, critics may operate under different rules 

of valuation, thus yielding different conclusions as to whether a design proposal is good or bad. 

5.3 

Nested classes of design proposals 

In general, then, there will be many possible construction worlds, each governed by a set of axioms and described by a corpus of facts and rules. Interpretation of critical comments about consistency, feasibility, and quality of designs is a matter of possible-world semantics.8 Some critical comments (tautologies) may be true in all construction worlds, others may be true in some but not all construction worlds, and others (contradictions) may be true in no construction worlds. 

However we relate critical comments to construction worlds, these comments divide design proposals that are produced for consideration into nested classes, as shown in figure 5.3. The designer's problem is to produce proposals that are consistent, feasible, and good. 

COMPUTATIONAL EFFICIENCY 

In summary, a design problem is represented by predicates stated in a critical language, a design world which depicts some construction world, a knowledge base about that construction world, and procedures for deriving inferences. Two such representations are informationally equivalent if all the information in the one is also inferable from the other, and vice versa (Simon, 1978). In other words, each could be constructed from the information in the other. 

Informationally equivalent representations are not necessarily computationally equivalent, however: one may be more efficient than the other. According to a definition cogently stated by Larkin and Simon (1987): "Two representations are computationally equivalent if they are informationally equivalent and, in addition, any inference that can be drawn easily and quickly from the information given explicitly in the one can also be drawn easily and quickly from the information given explicitly in the other, and vice versa." In general, computational efficiency depends on how the information describing design requirements, the design, and the construction world is organized in a data structure, and on the procedures that are available for operating on the data structure. 

A designer must find a design problem representation of sufficient computational efficiency to allow the problem to be solved within practical time and resource limits. The traditional approach to this has been to represent design requirements in the form of a written list (the program, or 

brief), to represent the design primarily by means of drawings, and to represent the construction world by means of facts and rules stored in reference books and in the designer s head. Historically, developments in the technology of desrgn have mostly been directed at improving on the computational efficiency of this approach. First, formalized procedures were developed for evaluating functions used in reasoning about cost and performance. Next, calculators and computers were used to execute these procedures more efficiently. More recently, it has become common to model designs m the databases of computer-aided design systems rather than in the form of drawings on paper and to gain further efficiency by integrating cost- and technical-analysis procedures with these databases. And more recently still, there has been growing interest in the application of general-purpose automatic inference techniques in design reasoning. 

CAVEAT: THE MONOTONICITY ASSUMPTION 

The theory that I have outlined here commits us to the so-called monotonicity assumption.9 We must assume that the addition of new facts and rules to the critical knowledge base does not falsify any fact already in the knowledge base. Or, to put this in another way, the knowledge base cannot accept any new fact or rule if it contradicts something already known. This is not an entirely satisfactory description of human critics, who undoubtedly have the ability to accept and sort out new and perhaps contradictory information. 

Consider, for example, a critic who reasons about a design as follows: 

observation     possesses (room, window) 

rule     possesses (room, window)  -&gt; 

ventilated (room)  conclusion     ventilated (room) 

But now the critic makes another observation: observation     inoperable (window) 

This leads to the revised conclusion: conclusion     not ventilated (room) 

Then a third observation leads, by a different route, back to the original conclusion: 

observation     airconditioned (room) 

ruje     airconditioned (room) —&gt; 

ventilated (room)  conclusion     ventilated (room) 

Such nonmonotonic reasoning is very important, since critics often seek to observe designs in original ways, to bring new facts about them to light, to uncover contradictions, and to challenge beliefs. Furthermore, the problem is fundamental, since monotonicity follows directly from the fundamental properties of traditional first-order logic. So it seems likely that development of a more generally satisfactory theory of design reasoning will await the outcome of current attempts to find useful formalizations of nonmonotonic modes of reasoning. 

DESIGN GAMES 

According to the view of design reasoning I have now laid out, the roles of designer and critic (which may, of course, be combined in one person) are symmetrical. A critic may stake some claims expressed as sentences in the critical language, setting the designer the task of satisfying them by manipulating the design world. Conversely, the designer may produce a proposal expressed as a state of the design world, setting the critic the task of deriving conclusions that establish whether or not it is satisfactory and why. The initiative may be on either side, or proposals and goals may evolve together. 

Design, then, is a complex game in which exploration of formal possibilities in some world and critical inference from some knowledge base proceed in parallel and eventually reach a reconciliation. There is also a meta-game, in which the axiomatization of the design world, the rules for interpreting the critical language in that world, the conventions of depiction of the construction world, and the contents of the critic's knowledge base are established. 

A logician might ask why it is necessary to separate the facts depicted in the design world from those in the critic's knowledge base (and not be satisfied with the answer that designers and critics have always done this). After all, a design might be regarded simply as a collection of facts about building form. The data structure of a computer-aided design system expresses these facts symbolically. It might even express them as sentences of first-order logic—just like the critic's assertions. 

One part of the answer is that the separation provides conceptual clarity by resolving an ancient paradox. In the  Meno,  Plato had his protagonist formulate this paradox for Socrates: 

And how will you inquire, Socrates, into that which you do not know2 What will you put forth as the subject of mqm y• And if you find what you want, how will you ever know that 

this is what you did not know? 

More specifically, how do we know what to look for when we search for the solution to a design problem? And how do we know when we have found a solution? If we carefully distinguish between the graphic design world and the critic s verbal assertions, we can reply that we are looking for a state of the design world. And we will know when we have found the sought-after state because we will be able to demonstrate that it satisfies predicates stated in the critical language. A second part of the answer is that we can gam computational efficiency: some of the inference processes required m design are best supported by graphic depictions and some are best supported by collections of verbally expressed facts and rules.10 Sa,  pace  Mies van der Rohe, designers must draw 

and  talk. 

8 2 

TYPES AND VOCABULARIES 

THE EXPRESSIVENESS OF CRITICAL LANGUAGES 

A useful critical language must have sufficient expressive power to capture relevant knowledge of the construction world that is under consideration and to allow complete and precise formulation of the requirements for solution of a design problem—that is, the predicates that the designer seeks to satisfy by manipulating the design world. The vocabulary of common nouns provided by a critical language plays a crucial role in this. Let us consider how such a vocabulary might be established. 

INDIVIDUALS, CLASSES, AND INHERITANCE 

In the early decades of this century many artists and designers—Constructivists, Suprematists, members of the de Stijl group, and others—were interested in worlds of abstract geometric elements and in exploration of formal relations in these worlds. Related approaches to design education, such as that pursued in the famous Bauhaus introductory course, also emphasized formal relations of abstract elements. When critical discourse is cast purely in these terms, however, it soon becomes strained and tedious. Consider, for example, the design by Peter Eisenman shown in figures 6.1 and 6.2, and the following commentary (Eisenman, 1982)—in which the only element recognized is an el form and the only predicates used are "equal width," "same shape," "inverted," "deeper than," and "similar": 

In an orthogonal or frontal reading of the two north quadrants, the el forms can be read as equal, they can be called A-A, a notation about the equality of the width of both elements, or 0-0, a notation about the equality of their width in relationship to a neutral base condition. If reading occurs from the west, the el forms are seen to be the same size and shape, and although they are in inverted positions with respect to each other, they can also be given an A-A notation (or 0-0 as a base condition). However, from the northwest corner, it is obvious that the horizontal element of the north face is deeper than the horizontal element of the west face of the quadrant. This, then, gives the north face a (+) notation and the west face a (-) or (0) notation in relation to the north face; or, conversely, the north face can be seen as (0), in which case the west face becomes (-). At the same time, when viewed from the northeast corner, the north and east faces appear similar, and they both can be given a (+) or (0) notation. The same shifting condition is evident in the relative sizes (widths) of both the vertical and horizontal elements of these elevations. 

6.1 

Peter Eisenman, House X, Scheme F 

North elevation 

West elevation 

East elevation 

South elevation 

Northwest corner 

Northeast corner  6.2 

Axonometric diagrams of House X corners 

This sort of close formal analysis is not entirely unilluminating, but something, clearly, is missing (no doubt deliberately excluded, in this case, for polemical purposes). 

What is eschewed as far as possible, in all these cases, is the interpretive step of classifying the elements under consideration in conventional ways. We are not supposed to ask of an element "What  is  it?" 

Some definitions are needed to make this clear. When we speak of the  Parthenon, Plato,  or the  Queen Mary,  we employ proper nouns to refer to individual objects. But when we speak of  temples, philosophers,  and  ships,  we employ common nouns to refer to classes of objects. We can specify class membership by writing English sentences: 

The Parthenon is a temple. 

Plato is a philosopher. 

The Queen Mary is a ship. 

And we can do the same in logical notation: 

temple (Parthenon) philosopher (Plato) ship (QueenMary) 

In architectural discourse we frequently use common nouns such as  column, beam, wall, floor, door,  and  window  when speaking of construction elements. Similarly, we use common nouns like  bedroom  and  kitchen  when speaking of spaces and common nouns like  house  and  temple  when speaking of complete buildings. 

Classes and common nouns are useful because they allow us to structure our knowledge not just as facts about individuals, but also as generalizations about entire classes. We might take it as a fact, for example, that philosophers are clever. Thus we can write the rule: 

philosopher (X) -&gt; clever (X) 

Thus if X is Plato, we can infer that Plato is clever. Similarly, the rule: 

ship (X) —&gt; floats (X) 

allows us to infer from the fact that the Queen Mary is a ship the fact that the Queen Mary floats. Technically, these individuals  inherit 1 certain properties by virtue of their class membership. 

When we label a shape in a design world with a common noun such as  column  or  kitchen  we are saying that we want that shape to represent a member of a class. If we know some facts about the class, then this knowledge can enter into the critical discourse, direct design intentions, and guide design explorations. But if we want to break free from 

preconceptions, or avoid well-trodden paths of critical discourse, then we must confine ourselves to labels such as  square  or  el-shape  that come very lightly freighted with architectural knowledge. 

TYPES AND INSTANCES 

What classes do we want to recognize in conceptualizations of buildings and critical discourse about them? How should we characterize and label members of classes? What properties do we want design elements to inherit by virtue of class membership? The approach that I shall take to answering these questions is based upon a distinction originally drawn by the American philosopher C. S. Peirce (1931) between types of objects and tokens or instances.2 Briefly, a token instantiates or is an instance of a type. Thus, for example, the word  architecture  instantiates the letter  r  twice, the letter  a  once, and contains no token that instantiates the letter z. Similarly, the Doric column is instantiated repeatedly in the Parthenon. Tokens are unique physical entities that we find located in a particular place at a particular time. Tokens may be of the same type by virtue of having something, for example, shape, in common.3 Each such token conforms to the type that it instantiates. 

Hence complex constructions of various kinds may be understood as assemblages of instances drawn from some specified set, or vocabulary, of simpler types of objects. For example, a word instantiates various characters from an alphabet, a sentence instantiates various words from the vocabulary of a language, and a simple melody instantiates various notes from a scale. Often we can recognize that a physical system instantiates various types of artifacts. And, most relevant to our concerns here, a building instantiates various recognizable types of architectural elements (columns, beams, walls, etc.). A drawing of that building instantiates various types of abstract shapes (such as squares, circles, and triangles), and the given conventions of depiction establish some mapping between shape tokens in the design world and physical instances in the construction world. 

ESSENTIAL AND ACCIDENTAL PROPERTIES 

A further distinction following from this concept of type is that between essential and accidental properties of an object. (The word "accidental" is here used in a technical sense, in which it carries no pejorative connotations.) Essential 

Four-line figure 

Four-sided figure 

Quadrilateral 

Parallelogram 

Rectangle 

' Square  6.3 

A typical hierarchy of subtypes defined by successively more restrictive definitions 

properties are those that it shares with others of its type.4 Accidental properties, on the other hand, may vary from instance to instance within a type. For example, we might choose to say that bilateral symmetry is an essential property of a classical portico, but that classical porticos may have various different colors. Thus the bilateral symmetry of the portico of the Parthenon is an essential property, while its white color is an accidental property. If it were to be painted in bright colors (as indeed it once was), we would still regard it as a classical portico. But if it were altered in some way that destroyed the bilateral symmetry (say the removal of the last three columns on one side), then we would no longer regard it as a classical portico. The essence of being a classical portico would not be preserved under such an operation. 

Another way to put this point is to note that formation of a type is an act of abstraction; we identify what is the same about all members of some class of objects and disregard what varies. The invariants, then, are the essential properties. Thus, for example, we see that all classical porticos are bilaterally symmetrical but that the colors of classical porticos vary from instance to instance. 

Types may be divided into subtypes by specifying additional essential properties. Thus, for example, we might divide classical porticos into Doric, Ionic, and Corinthian subtypes. Conversely, we may generalize type definitions by deleting properties, as when we generalize from squares to rectangles, and from rectangles to quadrilaterals. In general, then, we may construct hierarchies of subtypes within sub-types (figure 6.3). Where such a hierarchy spans a universe of discourse, it provides a comprehensive classification scheme for elements in that universe. Such schemes are often referred to as typologies. 

These technical definitions of type and essence are more precise than, but reasonably consistent with, the influential early definition of architectural type that was given by Quatremere de Quincy in his  Dictionnaire historique d’architecture  (1832). Quatremere took great pains to distinguish between concrete models, to be replicated "exactly," and types, regarded as "more or less vague" intellectual constructs, after which one can "conceive works which do not resemble each other." However, works that conform to a type all have some kind of common "elementary principle." It does not seem to be stretching things too far to identify Quatremere's "elementary principle" with the essence of a type and to identify his lack of "resemblance" with variation in accidental properties. 

The former position is that essences are, in some sense, given and unchanging. Thus revelation of the essence of an object is akin to revelation of a scientific or mathematical truth. Indeed the task of science, on this view, is to cut through superficialities and errors to reveal the  real  essences of things, and it is generally held that the successes of modern science are bringing it closer to this goal. Thus, for example, modern science has a better definition of what it is to be a whale or a lemon or a man than did ancient science. 

If we grant the validity and usefulness of the essential/acci-dental distinction, there remains the question of the basis upon which it should be put. Conflicting positions have been advanced on this point; some philosophers argue that essences are absolute, while others take them to be relative. 

A closely related view lies at the root of classical attitudes toward artistic form; the artist's task is taken to be the elimination of accidents and imperfections in order to reveal an object's essence. To put this another way, an artist represents universals rather than depicts particulars. For example, Sir Joshua Reynolds stated forcefully, in the fourth of his  Discourses on Art  (1771), that "perfect form is produced by leaving out particularities and retaining only general ideas. He developed his point in considerable detail, suggesting, for example, that the painter should not "debase his conceptions with minute attention to the discriminations of Drapery." 

Instead, he should abstract and generalize, so that "the cloathing is neither Woollen, nor linen, nor silk, sattin, or velvet: it is drapery: it is nothing more." In summary, the painter must "consider nature in the abstract, and represent in every one of his figures the character of its species. 

Neoclassical sculptors took Reynolds's precept one step 

further and abstracted away from "accidents" of color to produce monochromatic statues of white marble or natural metal. And they also preferred to abstract away from the details of clothing, either to reveal the essential human form naked or to clothe it in the stylized folds of classical drapery. 

Similarly, architects of the early modern movement (following a distinct classicizing tendency) preferred to leave their buildings white. If they allowed colors at all, they were saturated primaries: the "essential" colors. And they either refused to clothe their buildings with surface decoration or, like Louis Sullivan, employed decoration that related to underlying structure in much the same way that classical drapery relates to the underlying anatomy. 

Temple of Zeus, Olympia 

Temple of Poseidon, Paestum 

6.4 

Realizations of the essential Greek temple form 

These attitudes, like so many classical attitudes in the arts, can be traced back to the Platonic doctrine of Ideas and Aristotle's theory of forms. Plato took the aim of art to be  mimesis  (imitation), and in a famous passage of the  Republic  he illustrated this notion with the example of a bed—distinguishing between the unchanging, perfect, abstract idea of a bed; the imperfect imitation of the idea by a craftsman who constructs a bed; and the still more imperfect imitation of the imitation by a painter who depicts the bed. But Cicero in the  Orator  and Plotinus in his  Enneads  modified this doctrine to accord a higher status to art. The modified theory claims that an artist does not just hold up a mirror to nature, but imitates a general idea (for example of a bed) which he or she has in mind. The task of a craftsman or painter, then, was to seek the right and perfect form for an object. 

Rhys Carpenter has persuasively argued, in  The Esthetic Basis of Greek Art  (1959), that for the Greeks the underlying essences of things were always conceived of visually: "For the Greek mind there was always a concrete visual image somehow attached to the abstract universal concept." Thus the Greeks "regarded the world of objects as a series of typical forms displayed and embodied in individual instances" (figure 6.4). This leads the architect to a very conservative view of form: 

If he plans a temple, his most conspicuous artistic duty will be to consider afresh the adequacy and rightness of the temple-form as his predecessors have sought it out and embodied it. What criteria can he use for scrutinizing their success or failure? Only those of that inner necessity by which a form is recognized as right and true. Whatever is unessential, whatever is not necessary to the temple for its purpose or stability or durability, is irrelevant to the form; it is not a part of the temple. The expense and labor and time incident to the processes of building conspire to encourage the architect in eliminating the superfluous. How then could there logically be different temple-plans, when there is only one purpose for which temples are used, one identical force of gravitation to combat and master, one rain and sun to oppose? There should only be variety insomuch as there might be inadequacy in expressing, or incompleteness in discovering, the true and right form. The Parthenon is not a different building from the temple of Poseidon at Paestum: it is the same building grown closer and truer to its proper and perfect semblance. Iktinos invented nothing: he merely saw more clearly how things should be. 

One of the clearest and most celebrated statements of this sort of attitude in architectural theory is that set forth by Marc-Antoine Laugier in his  Essai sur Varchitecture  (1753).5 For Laugier, the essence of a work of architecture was 

6.5 

Goethe's  Urpflanze:  an image of a universal plant archetype (after Thompson and Geddes, 1931) 

represented by a "primitive hut" of certain construction. He introduced this notion with an anecdote of a "savage" seeking shelter: 

He wants to make himself a dwelling that protects but does not bury him. Some fallen branches in the forest are the right material for his purpose; he chooses four of the strongest, raises them upright, and arranges them m a square; across the top he lays four other branches; on these he hoists from two sides yet another row of branches which, inclining towards each other, meet at their highest point. He then covers this kind of roof with leaves so closely packed that neither sun nor rain can penetrate. Thus, man is housed. 

This, Laugier suggested, provided a universal architectural 

prototype: 

All the splendors of architecture ever conceived have been modeled on the little rustic hut I have just described. It is by approaching the simplicity of this first model that fundamental mistakes are avoided and true perfection is achieved. The pieces of wood set upright have given us the idea of the column the pieces placed horizontally on top of them the idea of the entablature, the inclining pieces forming the roof the idea of the pediment. 

Just these few parts form the essence: 

From now on it is easy to distinguish between the parts which are essential to the composition of an architectural Order and those which have been introduced by necessity or have been added by caprice. The parts that are essential are the cause of beauty, the parts introduced by necessity cause every license, the parts added by caprice cause every tau t. 

(In Laugier's usage "introduced by necessity" means introduced for circumstantial practical reasons.) Thus, according to Laugier, in order to qualify as a true work of architecture, a building must, in some sense, instantiate the type represented by the primitive hut. Furthermore, accidents of form (that is, parts "introduced by necessity" or "added by caprice") should be rigorously suppressed, the better to reveal the absolute essence. This turned out to be a rather inconvenient prescription in practice, since the primitive hut had no walls; Laugier was forced to admit that walls might be introduced "by necessity" and that this was an allowable 

"license." 

The idea of an architectural archetype is closely related to very similar ideas in biological thought.® Goethe (writing later in the eighteenth century than Laugier) postulated a plant archetype, the essence of which was to be found in every plant instance (figure 6.5). Similarly, he imagined such an archetype of vertebrate anatomy and wrote, in his  First Draft of a General Introduction to Comparative Anatomy  (1795): "On this account an attempt is here made to arrive at an anatomical type, a general picture in which the forms of 

all animals are contained in potentia, and by means of which we can describe each animal in an invariable order." (Ironically enough, though, Goethe had no sympathy for Laugier's architectural theory,- he violently attacked it and took the side of gothic against classic.) In the nineteenth century the French biologist Etienne Geoffroy Saint-Hilaire attempted to found a science of morphology based upon the idea of "one uniform type," and the British biologist Richard Owen published a famous volume entitled  On the Archetype and Homologies of the Vertebrate Skeleton  (1848). 

RELATIVE ESSENCES 

The relativist position, by contrast, is that there are  no  absolute essences and that essential/accidental distinctions may be drawn in various ways. Properties are of the same basic kind, and what we take to be the essence of something simply depends on our interests of the moment or on quirks of vocabulary. John Dewey (1938) provided a cogent statement of this position: 

As far as present logical texts still continue to talk about essences, properties and accidents as something inherently different from one another, they are repeating distinctions that once had an ontological meaning and that no longer have it. Anything is "essential" which is indispensable in a given inquiry and anything is "accidental" which is superfluous. 

An example of a more recent statement is that given by Nicholas Rescher (1975): 

Our essentialism adopts the posture of a pragmatic  pluralism.  For we shall maintain that there are various different and  alternative  bases upon which the essential/accidental distinction can be placed, and that one cannot establish any one of these as uniquely and universally  correct,  but rather can only maintain one or another of them as functionally suitable within the concrete setting of a particular problem-context. Viewing the distinction between the essential and the accidental as one to be developed along  various distinct lines,  no one of which is specially privileged, we regard the implementation of one or another of these as a matter not to be settled at the theoretical level of general principles, but at the concrete level of specific contexts of application. 

As Rescher points out, this interpretation of essentialism allows for different people, with different interests, to regard different features of some given object as essential and to classify objects according to alternative type definitions. In other words, typologies should properly be regarded as situational rather than universal. Fie offers the following example: 

Suppose some item is introduced into the framework of discussion as, e.g., "this wooden kitchen chair." Then from the carpenter's perspective it would be essential that it be a wooden piece of furniture (whether a chair or table might be incidental); from the home decorator's perspective it would be essential that it is a kitchen chair (that it is wooden might be incidental); from the fire marshal s perspective that it be something wooden; and so on. 

That is, the carpenter, the home decorator, and the fire marshal all follow different habits or conventions of abstraction (as appropriate to their interests), resulting in classification of the object under different types. 

It seems to me that consideration of the history of architecture tends to cast the relativist position in a favorable light, since it reveals wide variation in the ways that essences have been defined, even within the classical tradition. Let us consider, for example, a set of apparently clear, well-defined and unchanging architectural types: the five orders of classical architecture. John Summerson (1963) has traced the history of their type definitions as follows (my italics): 

Let us be quite clear about how variable or how invariable the orders are. Serlio puts them before us with a tremendous air of authority, giving dimensions for each part as if to settle the profiles and proportions once and for all. But in fact, Serlio's orders, while obviously reflecting Vitruvius to some extent, are also based on his own observation of ancient monuments and thus, by a process of personal selection, to quite a considerable degree his own invention. It could hardly be otherwise. Vitruvius's descriptions have gaps in them and these can only be filled from knowledge of surviving Roman monuments themselves. The orders as exemplified in these monuments vary considerably from one to the other  so it is open to anybody to abstract what he considers the best features of each in order to set out what he considers his ideal Corinthian, Ionic or whatever it is.  All through the history of classical architecture speculation as to the ideal types of each of the orders has continued, oscillating between antiquarian reverence on the one hand and sheer personal invention on the other. 

Parallels of the orders illustrate Summerson's point: they compare alternative abstractions of the essences of the Tuscan, Doric, Ionic, Corinthian, and composite orders. Figure 6.6 compares the Doric as defined by seven eminent authorities. 

6.6 

Alternative abstractions of the essence of the Doric (after Chitham,  1985) 

The dispute between the absolutists and the relativists turns on whether the meanings of common nouns are a matter of nature (and thus to be sought through scientific investigation) or a matter of language (to be established through definition and analysis). This led John Locke, in  An Essay Concerning Human Understanding  (1690), to distinguish between  real  essences (which he claimed exist in things themselves, are made by nature, and are unknowable) and  nominal  essences—definitions that determine what things may properly be called by names. Following from this, it may be argued that the essence/accident distinction is drawn relative to the vocabulary of the language that we use. C. I. Lewis (1946), for example, has suggested: 

Traditionally any attribute required for application of a term is said to be of the essence of the thing named. It is, of course, meaningless to speak of the essence of a thing except relative to its being named by a particular term. 

Or, as Locke himself put it, "boundaries of species are as men, and not as nature, make them." 

Such a language-oriented view serves well our particular purposes her eJ  I shall take it that the essence of an architectural type is a matter of convention and that this can be made explicit by formally stating a definition. A classically-minded architect might want to argue for stability and permanence of such definitions—leading to an architecture concerned with imitating and perfecting established forms. An anti-classicist, on the other hand, might want to argue that traditional definitions are always up for renegotiation and that traditional forms can be reinterpreted in radically new ways as concerns and interests change. 

TYPE DEFINITIONS 

How can type definitions be stated? In order to establish the semantic properties of a critical language we must have some way to define the necessary and sufficient conditions for objects to be instances of types. 

One approach is to employ diagrams (figure 6.7)—to  show  what a square or triangle is. This runs into the philosophical puzzle of how a single diagram may stand for many different things. Kant formulated this in his  Critique of Pure Reason  (1781), as follows: 

6.7, 

Essential properties depicted by a graphic schema 

In truth, it is not images of objects, but schemata, which lie at the foundations of our pure sensuous conceptions. No image could ever be adequate to our conception of triangles in general. For the generalness of the conception it never could attain to, as this includes under itself all triangles, whether right-angled, acute-angled, etc., while the image would always be limited to a single part of this sphere. 

The problem, in short, is to ascertain which of the indefinitely many properties displayed by the diagram are to be taken as essential and which may be varied to generate other instances subsumed under the type. A way around the difficulty is to implicitly or explictly dissect the diagram into partial diagrams that illustrate propositions, as shown in figure 6.7, and to specify the essence of the type by taking the conjunction of these propositions. This results in a verbal schema. Each proposition (feature) of such a schema is necessary for an object to be an instance of the type, and the schema taken as a whole is sufficient to determine whether an object is an instance. Schemata are conveniently expressed in the form of recognition rules, for example: 

sides  (Polygon,  4) and 

regular  (Polygon)  -&gt; square  (Polygon) 

Application of this rule to polygons enables us to classify them as squares or not. 

If a necessary condition is not satisfied, then an object cannot be an instance of the type. But satisfaction of a necessary condition might not guarantee that it is an instance, since other necessary conditions might remain unsatisfied. A condition might be sufficient to guarantee that it is an instance but not necessary, since satisfaction of other conditions might independently suffice. For example, a recognition rule for classical columns might be stated: 

Tuscan  (Column)  or Doric  (Column)  or Ionic  (Column)  or 

Corinthian  (Column)  classical  (Column) 

No one of these conditions is necessary, but any one is sufficient. Finally, a condition might be necessary and sufficient: an object is an instance if and only if this condition is satisfied. 

Often, as noted earlier, it is convenient to structure our knowledge in the form of taxonomic hierarchies, in which subtypes inherit the properties of subsuming types. The following rules, for example, define such a hierarchy: 

polygon (X) -&gt; thing (X) quadrilateral (X) —&gt; polygon (X) rectangle (X) —&gt; quadrilateral (X) square (X) —&gt; rectangle (X) 

In other words: X is a thing; all polygons are things; all quadrilaterals are polygons,- all rectangles are quadrilaterals; all squares are rectangles. Now consider an additional fact about polygons:  polygon (X) —&gt; planefigure (X) 

By inheritance, through the taxonomic hierarchy, this property is associated with quadrilaterals, rectangles, and squares as well.8 

EXCEPTIONAL INSTANCES 

This scheme runs into difficulties where there are exceptions to consider. As a general rule, classical columns have bases, so we can write: 

classical  (Column)  -&gt; possesses  (Column,  base) 

But Parthenon Doric columns, while undoubtedly classical, do not have bases. The difficulty can be overcome by allowing for the abnormality, thus: 

classical  (Column)  and not Parthenon  (Column)  -&gt;  possesses  (Column,  base) 

In practice, our knowledge must often be qualified in this way. A problem, though, is that attempts to produce precise and rigorous definitions typically yield lengthy, cumbersome lists of exceptions, as a glance at almost any building code will confirm. 

9 6 

the logic of architecture 

Another way to handle the problem of exceptional instances is to abandon insistence on necessary features and sharp, well-defined type definitions and to develop instead an approach based on family resemblances. The principle here is that some instances will be very "typical" because they share many features with many other "family members," while other instances will be very "atypical" because they share only a few features with other "family members." On this view, type schemata (such as that for classical columns) and the boundaries of types are fuzzily defined. Parthenon Doric columns count as slightly atypical classical columns. There is linguistic and psychological evidence that human beings do, indeed, often structure their knowledge of things in this way. Lakoff (1972) has noted the frequent use of "hedges" such as "technically," "loosely speaking," and "strictly speaking" to suggest degrees of membership in sentences such as "Strictly speaking, the Doric column is not classical." Rosch (1973) has studied people's ability to judge distances of instances from the "most typical" of its kind and has suggested that the "most typical" instance should be regarded as the "prototype" that defines the type. 

The frame formalism as introduced by Minsky (1975) provides a particularly general and flexible way to take account of these complexities in the formulation of type definitions. A frame consists of slots and slot fillers. A slot may be filled or unfilled. The filler of a slot can be an actual value, a default value, a procedure for finding a value, or another frame. An actual value is one that we know to be true, while a default value is one that we assume to be true until we learn otherwise. Thus default values encode expectations that can be adjusted, if necessary, in specific contexts. A frame for chairs might be written9: 

Chair 

Specialization of:  furniture  Number of legs: 

Default:  4 

If needed:  use procedure count  Number of arms:  0, 1, or 2  Seat: 

Back: 

Default:  same as seat  Style: 

Good for:  sitting 

Then, a frame representing a particular instance of a chair might be: 

Dining chair 

Specialization of:  chair  Number of legs: 

Number of arms:  2 

Seat:  woven 

Back:  bent wood 

Style:  Thonet 

Good for:  sitting at table 

These strategies all challenge the basic empiricist assumption that a type is an abstraction formed by dropping details that vary idiosyncratically from one exemplar to the next and retaining only the residue of commonality. They eliminate rigid insistence on necessary and sufficient conditions for falling under a type and substitute, instead, the notion of typical characteristics that can be illustrated by displaying prototypes. For our purposes it is not necessary to enter further into the controversy over how types should be defined10: I shall simply assume, henceforth, that we can make use of some sort of classification scheme and associated property inheritance mechanism, based either on necessity or on default. 

architectural vocabularies 

The types of architectural elements recognizable in a specified corpus of architectural compositions constitute the vocabulary of that corpus, just as a spoken vocabulary is a set of word types, the tokens of which are found in a specified corpus of sentences. It is commonplace, for example, to characterize architectural styles in terms of their vocabularies: the vocabulary of classical architecture includes the Doric column, the round arch, and the triangular pediment; that of the Gothic includes the pointed arch and the flying buttress; and so on. Sir Banister Fletcher's  History of Architecture on the Comparative Method  (1896), which is still being reissued in successive editions, compares vocabulary elements across different cultures and periods in much the same way that a work of comparative philology might compare words. 

It has also been standard practice for architectural texts to set forth recommended vocabularies which, they propose, students should learn and then employ in the production of compositions (figures 6.8, 6.9). Francesco Milizias  Principj di Architettura Civile  (1832) displays various types of 

6.8 

A classical vocabulary of window treatments (after Chitham, 1985) 

| 6.9 

A classical vocabulary of balusters 1 (after Swan, 1758) 

construction elements and explores their variants. Julien Guadet's vast compendium of beaux-arts design lore, his  Elements et theories d’architecture  (1894), exhaustively lists and describes both elements of composition (major volumetric elements) and elements of construction (physical components). Guadet described the elemental forms of walls, doors, windows, pilasters, columns, vaults, ceilings, and stairs as "the arsenal of architecture." The catalogues of modern industrialized component building systems are even more systematic and rigorous. 

Some theorists have suggested the existence of a universal architectural vocabulary. Guadet claimed that his "arsenal" existed independently of individual architects, cultures, and climates. More recently, Thiis-Evensen (1988) has argued that "creativity is primarily related to the way in which certain basic forms are combined and varied," and he attempts to show "that there is a common language of form which we can immediately understand, regardless of individual or culture." This leads him to an elaborate taxonomic hierarchy in which elements are first divided into three broad classes: floors, walls, and roofs. Within each class, "general solutions to problems of form" are catalogued. Thus the themes of dome, barrel vault, gable, shed roof, and flat roof are suggested for roofs (figure 6.10), stairs (treated as a special kind of floor) come in the basic varieties shown in figure 6.11, and so on. 

Whether we see a Babel of vocabularies or believe that we can discern universal commonalities, use of the concept of an architectural vocabulary seems indispensable in the conceptualization and description of buildings. We take instances of vocabulary elements to be the objects that an architect specifies and disposes, and we couch architectural discussion and criticism in terms of names for different types of elements. In practice, a vocabulary need not be fixed, explicit, or well-defined, but in principle the types comprising the vocabulary can be enumerated, named, and specified by type diagrams, recognition rules, or frames. 

READING DRAWINGS 

Organization of knowledge within the framework of some system of types enables us to read architectural drawings, scale models, and other depictions constructed within design worlds. We do so by recognizing instances of abstract shape types (squares, triangles, circles, and so on) and applying our knowledge of depiction conventions to see them as standing for instances of architectural vocabulary elements (or parts of 

6.11 

A vocabulary of stair motifs (after Thiis-Evensen, 1988) 

6.12 

Simple labeling of shape instances 

Labeling rules 

Labeled composition 

such elements) in the construction world. For purposes of analysis it is convenient to consider this as a two-step process: shape recognition then interpretation. 

Where shapes are discrete, recognition is relatively straightforward. We can simply apply recognition rules, such as those shown in figure 6.12, to label the instances appropriately. The task of recognizing discrete alphabetic characters is of this nature. 

More often, though, a drawing presents a complex scene, and the task becomes one of subshape recognition—breaking the scene down into parts and searching through the collection of parts to find those that qualify as instances of the shape type that interests us. This too is straightforward (though potentially laborious) if we treat shapes, as most computer-aided design systems do, as sets of discrete, indivisible primitives, such as vectors and arcs. This allows the task to be formulated as one of enumerating subsets of primitives and matching each subset against the type definition—a process similar to that of finding substrings in character strings. But human designers often do something more sophisticated than this; they recognize emergent subshapes. 

If we overlay two squares as shown in figure 6.13, for example, a third (smaller) square and two L-shapes emerge. Or, if we overlay two equilateral triangles as shown in figure 6.14, a hexagon, a star, and six more equilateral triangles emerge. We have no difficulty in recognizing these emergent shapes, but it is obvious that we could not do so if we defined a square as four "atomic" vectors or a triangle as three "atomic" vectors.11 

For generality, then, we must abandon the assumption that shapes have "atomic" parts. Once we do this, combinatorial explosions of emergent form can quickly develop. Combination of eight straight lines as shown in figure 6.15, for example, yields nine one-unit squares, four two-unit 

squares, and one three-unit square. 

The emergent shapes in a figure are not, in general, all immediately evident to us: sometimes we must actively search for them. Gottschaldt (1926) studied this phenomenon by asking subjects to find "hidden" shapes in line drawings (figure 6.16) and found that some such shapes can be extremely difficult to discover. Not surprisingly, then, computer algorithms for performing similar tasks turn out to 

be computationally complex.12 

The complete structure of a shape is given by all its subshapes—an infinite number of them if we assume that a shape does not have atomic parts, and usually a very large number if we assume that it does. But a designer pays atten- 

6.13 

Subshapes emerging from the overlay of two squares 

6.14 

Subshapes emerging from the overlay of two equilateral triangles 

6.15 

The overlay of horizontal and vertical parallels yields emergent squares 

6.16 

A "hidden" figure (after Gottschaldt, 1926) 

a. V  Square  (large  (Square)) 

b. 3  Square  (not large  (Square)) 

6.17 

Recognition of different figures leads to different assertions about a drawing 

tion to only some finite, small subset of these at any one time. As we saw in chapter 1, some are treated as figures and others as part of the "ground." More formally, we might say that those subshapes that have been labeled by the application of recognition rules are the figures currently available for further interpretation, and any others are excluded from consideration. In other words, the quantifier ih a statement such as: 

VSquare  (large  (Square)) 

is understood to pick out the shapes that are  actually  labeled as squares, not all the shapes that  could  be labeled as squares. It refers to the  set  of subshapes to which we are actually giving attention, not to the indefinite collection to which we  might  give attention. Thus the statement is true of a drawing labeled as shown in figure 6.17a, but false of the same drawing labeled as shown in figure 6.17b. 

Let us now consider a simple case of the interpretation of subshapes as depictions of parts of physical elements.^ Imagine a construction world populated by instances of rectangular blocks and a design world in which compositions of rectangular blocks are specified by making axonometric line drawings. Under the usual conventions, straight lines stand for edges of blocks. When we recognize an instance of a straight line, we can interpret it in any one of four possible ways (figure 6.18): as a convex edge, as a concave edge, as an outer edge seen against the background, or as an outer edge seen against the face of another block. A little further analysis shows that only four types of junctions of straight lines can occur in consistent depictions of the block world: L-shapes, T-shapes, Y-shapes, and arrow-shapes (figure 6.19). Under the usual conventions we interpret all of these as junctions of faces. A Y-shape, for example, might be interpreted as a convex junction or a concave junction (figure 6.20). Since all straight-line, L-shape, T-shape, Y-shape, and arrow-shape instances have several possible interpretations, there will, in general, be many possible combinations of subshape interpretations for a drawing. However, not all of these will be consistent with the axioms of the construction world. The interpretations of the lines in figure 6.21, for example, are not consistent with a world of rectangular blocks. Thus we read drawings by searching for combinations of subshape interpretations that are consistent with the axioms of the construction world. 

Drawings are ambiguous when several combinations of subshape interpretations are consistent with the axioms of the construction world. Under the conventions of wireframe axonometric projection and the axioms of a construc- 

Convex 

Against ground 

L-shape 

Against face 

6.18 

Different types of edges 

Arrow-shape 

6.19 

Different types of junctions of straight lines 

Concave 

6.20 

Consistent interpretations of a Y-shape as convex vertex and as a concave vertex 

Convex 

6.21 

An impossible junction 

tion world of plane-faced solids, for example, the shape shown in figure 6.22 may be consistently interpreted either as a cube seen from above or as a cube seen from below. Figure 6.23 shows a well-known example of a wire-frame drawing that has several consistent interpretations in a world of plane-faced solids. Some wire frames have many different interpretations as polyhedral objects.14 

Not only different combinations of subshape interpretations, but also different breakdowns of drawings into recognized subshapes can lead to alternative interpretations. Figure 6.24, for example, has two consistent interpretations in a world of cubic blocks. In each of these there are repeating subshapes which we recognize and interpret as cubes. In one, the three dots lie on a single cube, but in the other the three dots lie on three different cubes.15 

The famous rabbit/duck drawing16 (figure 6.25) clearly illustrates the interaction of subshape recognition and domain knowledge in interpolation of a depiction. The discrete, central subshape is immediately, and fairly unambiguously, recognizable as a depiction of an eye. Thus we might have a front elevation of an asymmetrical Cyclops or a side elevation of some two-eyed animal. If we dismiss the former conjecture as highly implausible, we can use our general knowledge of the features of animal profiles to suggest conjectures that the left part of the outline must depict either long ears or a bill, and that the right part of the outline must depict either a face looking right or the back of a head. There are four possible combinations of part labels, and we can use considerations of consistency (again drawn from our general knowledge of animals) to eliminate some from further consideration. One combination (bill/back) is consistent with the whole being a duck, a second (ears/front) is consistent with the whole being a rabbit, and the other two lead nowhere: there are no animals with ears growing out from the fronts of their faces or bills growing out from the backs of their heads. Now we can inherit and use knowledge about rabbits and ducks in an effort to sort out the remaining ambiguity. Isn't the neck a bit too thick to be that of a duck? Aren't the protuberances a bit too crisply defined to be floppy rabbit ears? The more details we know about rabbits and ducks the more likely it is that we will find evidence to confirm one or another of the readings. 

Architectural sketches—particularly those made at an early stage in a design exploration—can often, like the rabbit/duck drawing, be seen as different things. The various possible readings evoke different knowledge and thus suggest different ways to sharpen and complete the design. 

6.24 

A figure that can be seen as two different stacks of cubes 

6.22 

A vertex plays different roles in different interpretations  6.23 

A wire-frame figure seen as several different solids 

* 

1 0 7 

TYPES AND VOCABULARIES 

6.25 

The rabbit/duck ambiguous figure 

Experienced designers are often highly skilled at using rough sketches as evocative instruments in this way. Finished architectural working drawings, however, play a quite different role: they should unambiguously specify a state of the construction world and contain sufficient information to allow verification that this state satisfies the design requirements. 

SUMMARY 

The idea of a shape token, which was earlier used in an informal intuitive way, has now been made more precise. A design world is populated by shape tokens from some graphic vocabulary, and a construction world is populated by tokens from some architectural vocabulary. Conventions of depiction establish a mapping between the tokens in the two worlds and enable us to read drawings. From the viewpomt of the critical language, type definitions establish the meanings of common nouns and provide a useful way to structure knowledge. The relations between common nouns (verbal tokens) used in critical assertions, shape tokens used in depictions, and architectural vocabulary elements used in constructing buildings are summarized in figure 6.26. 

Construction world 

6.26 

Relationship of tokens 

7.1 

Icons depicting the shape-manipulation "tools" provided by a computer-aided design system 

Stale 1   — »     operator   -&gt;  State 2 

7.2 

A design operator is a function that evaluates to a new state of the design world 

OPERATORS 

A design operator is a tool for manipulating shapes in a design world. In a design world populated by cardboard polygons, the basic operators might be a matte knife for shaping polygons, hands for translating and rotating polygons, and a glue gun for joining polygons together. In a design world of straight lines and arcs on paper, the basic operators might be a pencil, a straightedge, compasses, and an eraser. And in a computer-aided design system, the operators are programs that manipulate the data structure: these are often invoked by clicking on icons that depict more traditional tools (figure 7.1). 

More formally, an operator is a function that evaluates to a new state of the design world (figure 7.2). Operators can thus be described by sentences of the form: 

opeiatoix  (Statel) = State2 

Statel and State2 are variables. By specifying the range of Statel (the argument of the operator), we can establish the circumstances under which the operator can properly be applied. And by specifying how to compute State2 for any value of Statel, we can define the effect of the operator. An operation (instance of the operator) is performed whenever the operator is applied to a particular state in the range of Statel. 

If we can specify an initial state of a design world, plus a set of operators characterized in this way, we have established the state-action tree for that world. Its branches are all the branches that can be constructed by recursive application of the set of operators to the initial state. 

The meaning of a design operation is its entailment—the set of facts that become true as a result of it and the set of facts that become false. Thus design operators can, in principle, be characterized semantically in terms of the predicates that survive their application. But this is usually a very formidable task, since alterations to a design may propagate long and complex chains of logical consequences.1 So designers usually content themselves with very rough and incomplete semantic characterizations of operators, apply operators speculatively, and then explore the consequences through critical discourse. 

A practical strategy for developing incomplete but useful characterizations of design operators is to assume that operators apply to shapes and to specify their immediate geometric effects. Less direct effects can then be traced by combining knowledge of geometric effects with facts and rules about the construction world to draw further inferences. For example, enlarging a shape depicting a structural member will have structural performance implications. In this chapter, then, I shall characterize the operators commonly used by designers for creating, deleting, transforming, and combining shapes in design worlds, and I shall show how architectural composition may be understood as a process of applying these operators to shapes. 

INSTANTIATION OF SHAPE PRIMITIVES 

Instantiation of shapes is the most basic of design actions. The effect of an instantiation operator is to insert a shape token (that is, an instance of a specified shape type) into the design world. 

Designers often proceed by instantiation of shape primitives: straight lines, arcs, splines, circles, polygons, and so on. By adding imperatives to the critical language, we can gain a way to specify instantiation operations (to a draftsper-son or to a computer). For example, a command to insert a straight line might be written: 

instantiate line 

more concisely, we might just say:  line 

7.3 

The parameters of a line 

But this is incomplete: it does not specify how long the line is to be, or where it is to be located. The deficiency can be remedied by adding parameters, thus: 

line ( X, Y, Theta, Length) 

The values bound to the variables X, Y,  Theta,  and  Length  f ull y specify the particular instance that we want (figure 7.3). 

Parameterized commands can be executed in several different ways. In a manual design process a draftsperson might draw the appropriate line with ruler and straightedge. In a Pascal program the command 

line  (X, Y, Theta, Length); 

might be an invocation of a procedure to draw a line on the screen or add a record representing a line to a data structure. A computer-aided design system might interpret a command of similar form by displaying an appropriate line on the 

1 1 o 

THE LOGIC OF ARCHITECTURE 

7.4 

Some parameterized shapes 

screen. We can also think of the statement as an assertion that the line which concerns us has specified values of X, Y, Theta, and Length, and we can make the assertion true (satisfy it) by drawing the line appropriately. 

The inverse of instantiation is deletion from the design world. This may be accomplished, for example, by erasing a line on paper, removing a cardboard polygon from a physical model, or deleting a record from a data structure. 

INSTANTIATION OF ABSTRACT SHAPE TYPES 

Combinations of shape primitives may qualify as instances of abstract shape types. For example, combinations of straight lines may qualify as instances of squares, rectangles, or triangles. Often it is more efficient for a designer to compose by direct instantiation of such combinations than by building them up in primitive-by-primitive fashion. 

In order to specify instantiation of abstract shape types, corresponding parameterized commands are needed in the critical language, for example (figure 7.4): 

square (X, Y,  Diameter)  rectangle (X, Y, X2, Y2) triangle (X, Y, X2, Y2, X3, Y3) 

Specified instances might be produced manually by using appropriate templates or rubber stamps. In a computer-aided design system they would be produced by executing corresponding procedures.2 

Notice that, in these commands, it is not necessary to specify any of the essential properties that characterize the type—for example, that opposite sides of a rectangle are equal. We assume that knowledge of these essential properties is somehow embodied in the production mechanism (a template, procedure, frame, or whatever) and that the essential properties will thus be propagated to all instances. In other words, knowledge of type definitions allows the executor of an instantiation command to "fill in" information that is not explicitly given in the command.3 

INSTANTIATION OF LABELED OBJECTS 

Where a designer works under established conventions of depiction, it is often necessary to instantiate abstract shape types that will serve as depictions of instances of architectural vocabulary elements in the construction world. If circles depict columns in plan, for example, the command 

column (X, Y,  Diameter) 

7.5 

Cuboids instantiated to represent walls of various dimensions and proportions 

7.6 

The parameters of a type of drafting chair 

should result in instantiation of an appropriate circle. Similarly, if cuboids stand for walls in plan, the command 

wall (X,  Y, Length, Thickness, Height) 

should result in instantiation of appropriate cuboids (figure 7.5). And the command  chair (X,  Y, Rotation) 

might produce a result something like that shown in figure 7.6. Here we rely on the production mechanism not only to fill in "missing" information, but also to follow the conventions of depiction correctly. 

Specialized computer-aided design systems (as opposed to general-purpose drawing or geometric modeling systems) often provide for composition with a pre-defined architectural vocabulary through use of such commands. Typically there are commands to instantiate various types of structural elements (columns, walls, etc.), openings (doors and windows), furniture, and fixtures. Systems for other purposes provide other vocabularies: a pipe layout system provides a vocabulary of pipes, joints, and fixtures; an electronic design system provides a vocabulary of electronic components; and so on. 

It should be clear, then, that the reading of a design drawing (or scale model) can be established in two different ways. If the drawing was built up from graphic primitives and abstract shape types, then recognition rules must be applied to produce an interpretation as an arrangement of architectural vocabulary elements in the construction world. But, if the drawing was built up by instantiating labeled objects, then the interpretation of shapes as vocabulary elements in the construction world is given a priori. 

TRANSFORMATION 

Once we have an instance of some type of thing we can perform operations that change it in some way. That is, we can transform it. 

As we commonly understand the word, transformations may be either destructive or preservative. A destructive transformation, such as smashing or burning or dismantling, destroys an object. For a well-known architectural example, consider Mies van der Rohe's Barcelona Pavilion of 1929. It was dismantled only a few months after construction, and the pieces were dispersed. Although the material from which it was constructed still exists, it no longer constitute a pavilion. We would all surely agree that the essence of being a pavilion did not survive this transformation. Under a 

preservative transformation, though, an object is merely modified and remains a thing of its kind. It is still an instance of the same type. If the Barcelona Pavilion had been left in place and painted purple, it would remain a pavilion. If we change the engine in an automobile, we certainly still have an automobile. If we heat a steel beam, it remains (up to a certain point) a steel beam. If we translate or rotate in the plane a rectangular concrete floor slab, it remains a rectangular concrete floor slab. In all these cases, the essential properties of the object remain unaltered, while various accidental properties change. That is, preservative transformations do not alter an object's type. 

▲ 

An equilateral triangle 

Stretched 

7.7 

Scaling and stretching an equilateral triangle 

Another more technical way to put this is to say that a type may have an associated set of transformations which are closed in the type, and, when applied to an instance of that type, always produce new instances of the same type: these transformations alter only accidental properties. But an unclosed transformation may produce an object that does not qualify as an instance of the type. That is, it may change some essential property: it may be destructive rather than preservative. The transformation of scaling, for example, is closed in instances of equilateral triangles (figure 7.7). Whenever we scale an instance of an equilateral triangle up or down, the result is another equilateral triangle. But the transformation of stretching is not closed in this type: if we stretch an instance of an equilateral triangle unequally in the horizontal and vertical directions, then we violate the essential requirement that all sides are of equal length and obtain something that is not an equilateral triangle. Stretching is closed, though, in triangles in general. 

The concepts of type, equivalence, and closure are inseparable. We recognize objects as equivalent when we see that there is a transformation that would change one into the other. We say that they are equivalent under this particular transformation. And the transformation is closed within some type of which the objects are both instances. 

Transformations of shapes in design worlds represent transformations of corresponding physical objects in construction worlds. However, transformation of a shape may yield a drawing or model that no longer has a consistent interpretation in the construction world or that no longer specifies a feasible arrangement. So it is useful to classify common transformations according to the properties that they preserve, and thus the architectural implications of their execution. 

The most familiar transformations are translation and rotation, either in the plane or in three-dimensional space (figure 7.8). These preserve shape and size, but alter position. Together with the identity transformation (which leaves an object completely unaltered, and is introduced for technical mathematical reasons), they constitute the proper isometric transformations. Composition often becomes a game of translating and rotating shapes to vary their spatial relations. 

Scaling 

7.8 

Transformations of a plane shape 

A designer might do this by moving around cardboard cutouts in plan or by using the translation and rotation operators provided by a computer-aided design system. Since construction components, furniture items, and so on are often rigid objects, whose positions and orientations can be varied relative to each other, it is not surprising that the proper isometric transformations are very commonly used for manipulating shapes in design worlds. 

If a designer turns over a cardboard cutout, then reflection is introduced as an additional design operator: the property of handedness is varied. When reflection is added to the proper isometric transformations, in this way, the designer is working with the isometric (or rigid) transformations. 

Many architectural elements come in both right-handed and left-handed versions. Bilaterally symmetrical compositions can, for example, be decomposed into right and left halves, which are equivalent under the reflection transformation (figure 7.9). Similarly, doors may swing to the right or to the left (figure 7.10). But consider a type of cupboard that is made only with the door swinging one way: reflection of a shape depicting an instance of this type of cupboard would produce an unrealizable design. Thus reflection of three-dimensional shapes must be used with caution. 

The transformation of scaling keeps shape constant, but varies size. Appending scaling to the isometric transformations yields the similarity transformations: differently scaled instances are said to be similar to each other. Scaling of abstract shapes, such as squares and circles, is very common in design. But many architectural vocabulary elements do not scale: they take different proportions as they become larger or smaller. Galileo noted, for example, that corresponding bones of large and small animals have very different proportions (figure 7.11), and, similarly, columns and beams should have proportions appropriate to their lengths. 

Sometimes stretch and shear transformations (figure 7.12) are also introduced as operators applicable to shapes in a design world. Dtirer employed them in highly systematic fashion to generate wide ranges of variants on the forms of the human face (figures 7.13, 7.14). And architects have 

7.11 

Proportions of bones of large and small animals (after Galileo's  Dialogues Concerning Two New Sciences,  1632) 

7.9 

Right and left halves of the entrance to Palladio's S. Giorgio Maggiore, Venice, are equivalent under reflection 

7.10 

Cupboards with left-handed and right-handed doors are reflections of each other 

7.12 

Stretch and shear transformations of a square 

7.13 

Diirer's use of stretch transformations to generate images of human faces (after  Four Books of Human Proportion,  1528) 

7.14 

Diirer's use of shear transformations 

sometimes sheared standard elements to fit them to parallelogram-shaped panels along stairs or ramps (figure 7.15). Shear and stretch transformations distort the shapes of objects but always preserve the geometric property of parallelism. Together with similarity transformations, they constitute the affine transformations. 

Yet another distorting transformation is the perspective transformation. This results, for example, when a slide of a two-dimensional figure is projected obliquely onto the screen (figure 7.16). Parallels now converge, but a geometric property technically known as cross-ratio is preserved. Perspective transformations are occasionally used by architects to fit orthogonal plans to skewed sites or to create spatial illusions (figure 7.17). Perspective and affine transformations together constitute the linear transformations. 

Now imagine that a prototype figure is drawn on an infinitely flexible rubber sheet and that transformed instances may be produced by stretching and twisting the sheet in every conceivable way, provided that it is never broken and rejoined. In his celebrated book  On Growth and Form  (1942) the biologist D'Arcy Thompson used such "rubber sheet" transformations to show how widely divergent organic forms might be regarded as instances of the same broad type (figure 7.18).4 These transformations, which encompass all those previously discussed, in general preserve only the geometric property of connectedness, and they are known technically as continuous transformations. 

Diirer employed nonlinear continuous transformations in a similar way in his  Four Books of Fluman Proportion  (1528). Figure 7.19 shows a human profile with horizontal construction lines. By varying the intervals between these lines, Dtirer subjected the profile to nonlinear distortions to produce grotesque caricatures. 

Floor plans of buildings are equivalent under nonlinear continuous transformations when the shapes of corresponding rooms differ but adjacencies between rooms remain the same. Since room adjacencies are often determined by practical imperatives, but an architect may have considerable freedom to vary shape, we can often find this sort of equivalence among plans for the same type of building. Figure 7.20, for example, shows an adjacency diagram, and figure 7.21 shows several Frank Lloyd Wright house plans that realize it. By virtue of this they are all equivalent under nonlinear continuous transformations. 

7.15 

A sheared version of the Corinthian capital (after Guarini's  Aichitettura Civile,  1737) 

7.16 

Diirer's use of two-dimensional perspective transformations 

7.17 

Trajan's Market, Rome: the right side becomes a perspective transformation of the left 

 

7.18 

D'Arcy Thompson's use of continuous deformations to generate a series of fishes (after  On Growth and Form,  1942) 

7.19 

Durer's use of nonlinear continuous transformations 

7.20 

An adjacency diagram: circles represent spaces and lines represent important adjacencies 

7.21 

Some Frank Lloyd Wright house plans that have the adjacency diagram shown earlier and are equivalent under nonlinear continuous transformations 

Sundt House, 1941 

Gaudi provides yet another example of the use of nonlinear continuous transformations. For design of vaulting shapes, he frequently employed flexible wires hung with weights. By shifting the suspension points, and varying the numbers, positions, and masses of weights, he could transform a funicular shape. This, when inverted, defined the profile for a similarly loaded arch or vault. 

The relations between these various classes of geometric transformations are summarized by figure 7.22, in which each class includes all those below. A universe of design possibilities can be specified by choosing a vocabulary of shape types and some class of transformations to employ as design operators. For a given vocabulary, choosing successively more general classes of transformations will yield nested, successively more extensive universes. 

This hierarchy of geometric transformations also provides us with a useful vocabulary for describing spatial relations between shapes in a composition. Where  shapel  and  shape2  are shapes, we can write assertions such as: 

translation (shapel)  =  shape2 rotation (shapel)  =  shape2 reflection (shapel)  =  shape2 isometrictransformation (shapel) = shape2 lineartransformation (shapel) = shape2 continuousdeformation (shapel)  =  shape2 

7.22 

A taxonomy of geometric transformations 

7.23 

The arity of an operation 

Shape A    Shape B 

■ -    -    '&lt;11 M 

ill    :a®; 

iiiiliir : :: y®:®- 

mmmt  ■■■■ 

■■■■ 

■■■■ 

iI8RaflHlg|l| KfllillllllliS  11115? iiils ®  mm  1111 lllllll* ili®: 

HlSilSBlBl 

Union    Intersection 

A-B    B-A 

7.24 

Boolean operations on pixel shapes 

In other words, we specify that  shapel  is mapped into  shape2  by the given operator. Furthermore, to specify the relation more precisely, we can add transformation parameters, for example: 

translation (shapel,  Xdistance, Ydistance)  = shape2 rotation (shapel,  Theta)  = shape2 

Such vocabulary can be used to express different sorts of formal analyses of the Frank Lloyd Wright plans shown in figure 7.21. First, we can find isometries among the piers and columns—square ones in the Life house and circular ones in the Jester and Sundt houses. (Repetition of standard construction elements makes practical sense.) Second, there are similarities between the circular rooms in the Jester house, similarities between the triangular rooms in the Sundt house, and affinities between the rectangular rooms in the Life house: this provides each house with formal coherence but allows rooms to vary in size according to function. The essential equivalence of the three plans under continuous deformations is not immediately evident—indeed, it is surprising—because the shapes of corresponding rooms in the three houses, and of the building footprints, are  not  similar. 

COMBINATION 

A transformation is, technically, a unary operation: execution of a transformation turns one thing into another. Designers also need to perform binary operations, by which two things are combined to produce a third (figure 7.23). Addition and multiplication, for example, are binary operations in the integer numbers. 

In a bitmap, union and intersection are useful binary operations. Let us say that a shape is any set of true (black) pixels (figure 7.24). One shape is a subshape of another whenever every pixel of the first is also a pixel of the second. The union of two shapes is the shape consisting of all the pixels in the first shape or the second shape. The intersection of two shapes is the shape consisting of just those pixels in both the first shape and the second shape. We can also define a shape difference (the second shape subtracted from the first) as the shape consisting of just those pixels in the first shape that are not also in the second. And, if we subtract the first shape from the second, we obtain a shape consisting of just those pixels in the second shape that are not also in the first. The set of all subshapes of the complete bitmap grid, and the operations of shape union, intersection, and subtraction, form a Boolean algebra. 

7.25 

Boolean operations on plane polygons 

The operations of union, intersection, and subtraction can be defined, in a directly analogous way, for a world of closed polygonal shapes (figure 7.25).® Thus if we take a small vocabulary of elementary shapes, the transformations of translation, rotation, reflection and scaling, and Boolean operations, we can establish a rich and extensive universe of polygonal compositions for exploration (figure 7.26). 

The Boolean operations can also be defined for a world of closed solids (figure 7.27). Solid modeling systems are computer-aided design systems built around this idea.6 They usually provide vocabularies of elementary parameterized solids, the similarity transformations, and the Boolean operations. This establishes a universe of three-dimensional compositions of solids. 

To avoid some technical problems it is convenient to define binary operations in line worlds in a similar, but subtly different way.7 Let us say that one straight-line segment is included in a second straight-line segment if the slopes and intercepts of the two lines are the same and if the endpoints of the second line lie between the endpoints of the first (figure 7.28). This definition is straightforwardly extended to other types of lines, such as arcs and splines. A shape, then, is a collection of lines, and a shape is a subshape of another whenever every line of the first shape is also a line of the second shape (figure 7.29). The addition of two shapes, then, is the shape consisting of all the lines in the first shape or the second shape, or produced by combining lines in the first shape or the second shape (figure 7.30). And the subtraction is the shape consisting of just those lines in the first shape that are not in the shape subtracted. 

Some interesting universes of compositions can be established with the line addition and subtraction operations. If we can instantiate horizontal and vertical straight lines of any length (for example, by using pencil, parallel rule, and right-angle square), and add and subtract lines, we can explore a universe of all possible shapes composed of horizontal and vertical lines. If we introduce rotation of lines as an additional parameter (for example, by adding an adjustable square to our kit of drafting instruments), the universe expands to include all possible straight-line compositions. At the limits of this universe are the empty shape and the universal shape. The empty shape has no lines and is a subshape of every shape. The universal shape consists of all possible straight lines and has every shape as a subshape. 

The derivation of complex shapes from simple ones by means of binary operations can be depicted by a binary tree, as shown in figure 7.31. If we record for each node in the 

Vocabulary of polygons 

7.27 

Boolean operations on closed solids 

7.28 

Line BC is included in line AD 

Some shapes in the universe  7.26 

A universe of shapes that contains a unit square and a half-square triangle and is closed under orthogonal translations, scaling, and Boolean operations 

7.29 

A line shape and some of its infinitely many subshapes 

7.30 

Addition and subtraction of line shapes 

7.32 

Intersection is not closed in the plane polygons with interiors 

Replacement rule 

Subtraction of old subshape 

Addition of new subshape 

7.33 

Replacement of a subshape 

tree the transformation parameters of the operand shapes, and the operator that was applied, we obtain a procedure for reconstructing the shape—in effect, a concise description of it. This technique for encoding descriptions of complex shapes finds practical application in computer-aided design: the constructive solid geometry (CSG) method of shape description that is commonly used in solid modelers, for example, is based on application of Boolean operators to elementary closed solids (Requicha, 1980; Kemper and Wallrath, 1987). 

It is usually convenient to define binary operations in such a way that they are closed in some shape type that particularly interests us. For example, the addition and substrac-tion operations are closed in line shapes: they can never produce something that is not a line shape. But the Boolean operations are  not  closed in the plane polygons.8 Consider, for example, two squares coincident at an edge, as shown in figure 7.32. Their intersection is  not  a closed shape with an interior, but a one-dimensional straight line. 

REPLACEMENT 

Anybody who has worked with a word processor is familiar with the operation of replacing one character string with another. Similarly, a designer may need to replace a shape of one type with a shape of another. Replacement might be local (replace  that  X by a circle) or it might be global (replace  all  Xs by circles). We can specify replacements by means of rules, as shown in figure 7.33, in which the subshape to be replaced appears on the left side and its replacement appears on the right side. In a line world replacement amounts to subtraction of the old shape followed by addition of the new one. Draftsmen do this by erasing then redrawing. In a computer-aided design system, information describing the old shape is deleted from the data structure and replaced by information describing the new shape. 

The same replacement operation may produce different results when it is applied in different ways. Consider, for example, the simple line shape shown in figure 7.34a. Parallel replacement of squares by circles produces the result shown in figure 7.34b, but serial replacement of squares by circles produces the sorts of results shown in figure 7.34c. 

The way that a replacement operation works may also depend on the way that emergent shapes in a composition have been recognized and labeled. This is illustrated in figure 7.35: different applications of a rule for recognizing and labeling squares induce different replacements of squares by circles. 

a. An arrangement of squares 

b. Parallel replacement 

7.35 

Recognition controls replacement 

c.  Sequential replacement 

7.34 

Replacement of squares by circles 

Different applications of the recognition rule induce different replacements 

7.36 

Disambiguating an elevation drawing by replacing transparent polygons with opaque ones 

7.37 

Elevation diagram of Palladio's S. Francesco della Vigna, Venice (after Wittkower, 1962) 

Designers often begin with states of design worlds that have ambiguous interpretations as proposals for three-dimensional buildings and, through erasure and replacement, sharpen them into less ambiguous representations. Figure 7.36, for example, shows how a wire-frame elevation sketch may be resolved, in various ways, into an unambiguous layering of planes by erasure of verticals and gables and substitution of shaded polygons for empty ones. It seems very likely that Palladio proceeded in much this way in his explorations of overlaid temple fronts applied to church facades (figure 7.37). 

ALGEBRAS 

A designer, then, creates a composition (a state of the design world) by instantiating, transforming, and combining shapes. Compositional alternatives can be produced by choosing different shape vocabulary elements for instantiation and by performing different sequences of transformation and combination operations. Thus the designer's compositional universe is bounded and structured by the shape vocabulary available for instantiation and by the repertoire of shape transformation and combination operators provided by the design world. 

Technically, the design world models an algebra—a set of things (the carrier set of the algebra) together with operators defined on those things and closed in the set. In this case, the things are states of the design world, and the operators provide the designer with a way to get around from one state to another,- they are the means of exploration. More formally, a design algebra is a triple (V, T, C) where V is a vocabulary of shapes available for instantiation in the design world, T is a repertoire of shape transformation operators, and C is a repertoire of shape combination operators. The carrier set of the algebra, denoted V*, consists of all those shapes that can be produced by instantiating vocabulary elements, transforming shapes, and combining shapes. Each element of V* is a state of the design world, and the operators in T and C are closed in V*. 

A designer should be concerned, first of all, that V* contains shapes relevant to the task at hand. If, for example, V* contains only straight-line shapes and the design context calls for curves, then the designer is exploring the wrong terrain. Secondly, the instantiation, transformation, and combination operators should conveniently structure the process of exploring V*: they should allow the shapes of interest to be 

constructed and varied in quick and elegant ways. Finally, the efficiency of the model—that is, the speed with which operations are executed—is also important. A computer-aided design system, for example, may model a given design algebra much more efficiently than pencil, paper, and traditional drafting instruments. 

A standard computer-drafting system clearly exemplifies the specification and implementation of a design algebra appropriate for use in architecture. Such a system provides for instantiation of straight lines, arcs, circles, and usually a few more complicated shapes such as rectangles. It provides a shape addition operator for "grouping" primitives into more complex shapes and a shape subtraction operator for deleting unwanted shapes. The usual shape transformation operators are translation, rotation, reflection, and scaling. 

A solid-modeling system implements a rather different kind of algebra. The vocabulary typically consists of parametric boxes, cylinders, spheres, cones, and prisms. The shape combination operations are union, intersection, and subtraction of solids. These can be applied not only to pairs of instances of the solid primitives, but also to pairs of solids that have themselves resulted from combination operations, so that complex solids can be built from simple primitives through recursive combination. Translation and rotation operators are usually provided for positioning solids in three-dimensional space. Reflection and scaling are sometimes provided as well, but these may be avoided since they can have disconcerting effects when applied to three-dimensional solids. 

SUMMARY 

A design world is fundamentally characterized by its shape vocabulary and operators. These establish, for exploration, a set of shape possibilities that includes the vocabulary and is closed under application of all of the operators. 

LANGUAGES OF ARCHITECTURAL FORM 

GRAMMATICAL COMBINATION 

The trouble with algebras, as universes of design possibilities, is that they usually contain too much. They tend to contain vast numbers of possibilities that have no architectural meaning whatsoever, plus possibilities that are meaningful but irrelevant or uninteresting. The state-action trees that they establish contain numerous branches that are not worth exploring. We need some way to curb promiscuous combination of shapes, to tighten up the rules of the game. 

One powerful way to do this is to introduce the idea of grammatical combination of parts. We can, if we so choose, specify in the type definition of an architectural vocabulary element that it is only instantiated in certain kinds of combinations with other elements. That is, we specify certain external relations in the type definition. The analogy here with parts of speech is close; it is essential to being an English noun that it is only instantiated in English sentences in certain kinds of combinations with other words, as given by the rules of English grammar. Thus not every string of English words is an English sentence: only strings that comply with the rules of English grammar count as sentences. A clear and simple illustration of this kind of thing in architecture is provided by Alberti's handling of columns, piers, entablatures, and arches (figure 8.1), as analyzed by Rudolf Wittkower (1962): 

In his religious buildings Alberti consistently avoided the combination of arch and column. When he used columns he did, in fact, give them a straight entablature, while when he introduced arches, he made them rest on pillars with or without half-columns set against them as decoration. Alberti found the models for both forms in Roman architecture. But whereas the first motif is Greek, the Romans playing the role of mediators, the second is Roman. The first motif is based on the functional meaning of the column, the second on the cohesion and unity of the wall. To explain this latter point: in the Colosseum the arched pillars may be interpreted as residues of a pierced wall, with the halfcolumns, which carry the straight entablature, placed against them as ornament. In practice, therefore, Alberti's conception of the column is essentially Greek, while his conception of the arch is essentially Roman. 

Critics sometimes suggest that certain usages violate rules of grammatical combination. Vitruvius warned that Ionic capitals should not be combined with Doric entablatures, 

8.1 

Albertian usage (following Roman precedent) of columns, entablatures, piers, and arches 

132     THE LOGIC OF ARCHITECTURE 

8.2 

"A most glaring absurdity": application of a Greek portico to a church, as depicted by Pugin in  The True Principles of Pointed or Christian Architecture,  1841 

"the usage of each class having been fixed long ago." Augustus Welby Pugin, in  The True Principles of Pointed or Christian Architecture  (1841), noted a difficulty that arose when English architects proposed to apply Greek porticos to churches (figure 8.2): 

Christian churches require bells, by the sound of which the faithful may be called to their devotions. The bells, to be distinctly heard, must be suspended in a tower or belfry, and these are features utterly unknown in Greek architecture. A tower composed of a number of small porticos, set over one another, and placed in front of a mock temple, is a most glaring absurdity,- nor is a tower of this description, starting out of nothing at the top of a portico, any better. 

He was no better pleased by the application of Greek porticos to houses (figure 8.3). 

Neither are they better adapted for domestic purposes; for it is still more absurd to see two or three tiers of windows introduced in the shell of a Greek temple, the roof of which is broken by numerous stacks of vainly disguised chimneys. 

In biological thought, very similar ideas about restrictions on ranges of combinatorital possibility were formulated by Cuvier. In his  Lemons d’anatomie comparee  (1800) he noted (as Aristotle had done) that each kind of organ may take many forms, and that, if any form could coexist with any other form, a huge combinatorial universe would result. However, he argued, combinations must meet certain conditions, and only the combinations that meet these conditions actually exist in nature. 

8.3 

"A Grecian temple outraged in all its proportions and character": Pugin's depiction of the combination, in a house, of the Greek temple with windows and chimneys 

8.4 

Substitution of alternative wall and entrance treatments for a square plan (after Gibbs's  A Book of Architecture,  1728) 

The grammatical rules of a language of architectural form, like those of a spoken language, may be specified in a variety of formats. The simplest approach, as employed, for example, by Pugin, is to display various exemplars of "correct" and "incorrect" practice. This technique has very commonly been employed by architectural theorists, from Vitruvius to the present day. 

A more sophisticated approach is to state generalized prescriptive rules, as in elementary language textbooks. The Renaissance architectural theorists were particularly fond of doing this. In his Four Books of Architecture (1570) Palladio, for example, introduced rules of composition as follows: 

And altho' variety and things new may please every one, yet they ought not to be done contrary to the precepts of art, and contrary to that which reason dictates; whence one sees, that altho' the ancients did vary, yet they never departed from the universal and necessary rules of art, as shall be seen in my book of antiquities. 

Typical of the prescriptive rules given by Palladio for villa designs are: 

The rooms ought to be distributed on each side of the entry and hall; and it is to be observed, that those on the right correspond with those on the left, that so the fabrick may be the same in one place as in the other. . . . 

The windows on the right hand ought to correspond to those on the left, and those above directly over them that are below,- and the doors likewise ought to be directly over one another, that the void may be over the void, and the solid upon the solid, and all face one another, so that standing at one end of the house one may see to the other, which affords both beauty and cool air in summer, besides other conveniences. 

REPLACEMENT RULES 

Yet another approach is to specify replacement rules. Grammarians of spoken language, for example, often set out sentence schemata like: 

The _ is green. 

Then they specify the type of word substitutable for the blank, in this case a noun. Thus the schema might be expressed: 

The  Noun  is green. 

Noun  is a variable ranging over all the English nouns: substitution of any instance of an English noun, such as  grass,  yields a grammatical English sentence. 

8.5 

Substitution of alternative wall and entrance treatments for a circular plan (after Gibbs, 1728) 

Architectural theorists have occasionally established schemata and demonstrated substitutions in much the same way. James Gibbs (1728), for example, produced diagrams showing how various wall and entrance treatments could be substituted for each other in square and circular pavilions (figures 8.4, 8.5). In his  Encyclopaedia of Architecture  (1846), J. C. Loudon took a bare cube as the schema for a cottage, then showed how different exterior treatments might be substituted as appropriate to the owner's status. More recently, Bernard Tschumi has programmatically employed substitution of architectural elements from a chosen lexicon within the framework of a gridded ten-meter cube to generate a set of pavilions for the Park of La Villette in Paris. 

RECURSIVE REPLACEMENT 

Replacement rules become particularly interesting if they are applied recursively. Figure 8.6 shows how the recursive application of a simple replacement rule to an initial square yields plans for increasingly elaborate fourfold Islamic gardens, such as that of the Taj Mahal, which was originally subdivided by paths and canals into sixty-four smaller squares. Notice that the rule can be applied an unlimited number of times. Thus a very simple rule system specifies a countably infinite set of design possibilities for exploration. 

Elaboration of this principle leads to a powerful technique for specifying universes of similarly-structured objects. Let us assume, for example, that we are concerned with a type of object known as a sentence, and that a sentence always consists of a noun phrase followed by a verb phrase. This can be expressed by the replacement rule1: 

Sentence —&gt; NounPhrase VerbPhrase 

The rule tells us that, whenever we see the string of symbols on the left-hand side, we can replace it by the string of symbols on the right-hand side. A second rule establishes the essential properties of a noun phrase: 

NounPhrase —&gt; Article Noun 

And a third rule establishes the essential properties of a verb phrase: 

VerbPhrase —&gt; Verb NounPhrase 

Finally, there are rules establishing the ranges of the variables  Article, Noun,  and  Verb: 

Article  —&gt; a, the 

Noun  —&gt; column, beam  Verb  supports, loads 

Starting symbol By rule 1 By rule 2 By rule 3 By rule 2 By rule 4 By rule 4 By rule 5 By rule 6 Termination 

8.6 

The Islamic garden rule, as used in the garden of the Taj Mahal 

(The comma indicates an alternative.) These rules are known as productions, and the set constitutes a production system, as follows: 

Rule 1     Sentence —&gt; NounPhrase VerbPhrase 

Rule 2     NounPhrase -&gt; Article Noun 

Rule 3     VerbPhrase -&gt; Verb NounPhrase 

Rule 4     Article  —&gt; a, the 

Rule 5     Noun  -&gt; column, beam 

Rule 6     Verb  -* supports, loads 

These six replacement rules, together with the starting symbol  Sentence,  constitute a phrase-structure grammar that generates a simple language.2 Sentences in the language are generated by recursive application of the production system to the starting symbol to generate a sequence of symbol strings. A rule applies, and can be executed, whenever a substring of the current symbol string is matched by the left-hand side of a rule. We say that a new symbol string is  derived  from the current symbol string by application of that rule. A derivation is a sequence of such rule applications. Derivations terminate when no further matches can be found. Here, then, is an example of a derivation: 

Sentence 

NounPhrase VerbPhrase Article Noun VerbPhrase Article Noun Verb NounPhrase Article Noun Verb Article Noun  a  Noun Verb Article Noun  a  Noun Verb  the  Noun  a column  Verb  the beam a column supports the beam 

This derivation is depicted graphically by the tree diagram in figure 8.7. Steps in derivations are often denoted as follows: 

By rule 6     a column  Verb  the beam =&gt; 

a column supports the beam 

The symbol =&gt; is read "derives." 

Sometimes, in a derivation process, several different substitutions are allowable. For example, the intermediate string 

Article Noun Verb Article Noun 

consists of five variables, each with two possible values, so 25 = 32 different sentences can be produced from it. Thus a concise grammar can specify a large (in some cases countably infinite) set of sentences. Alternative derivations can be rep- 

8.7 

A tree diagram depicting the derivation and structure of a sentence 

resented by a state-action tree in which the root is the starting symbol  Sentence,  branches represent applicable rules, internal nodes are "incomplete" sentences (strings that still contain variables), and "complete" sentences in the language (strings with no variables) are at terminal nodes. 

Now let us assume that, for every production in the grammar there is a corresponding inverse, or recognition rule, as follows: 

Reduction 1 Reduction 2 Reduction 3 Reduction 4 Reduction 5 Reduction 6 

NounPhrase VerbPhrase —&gt; Sentence Article Noun —&gt; NounPhrase Verb NounPhrase  -a  VerbPhrase a, the —&gt; Article column, beam -&gt;Noun supports, loads Verb 

These recognition rules can be applied recursively to a string of words to determine whether the string is a sentence in the language,- that is, whether it complies with the grammatical rules. If the string can be reduced to the starting symbol  Sentence,  then it is a sentence: it has been shown to satisfy the predicate  sentence (String).  Here is an example of a successful reduction: 

Given string By reduction 4 By reduction 4 By reduction 5 By reduction 2 By reduction 5 By reduction 2 By reduction 6 By reduction 3 By reduction 1 Termination 

the beam loads a column Article beam loads a column Article beam loads Article column Article Noun loads Article column NounPhrase loads Article column NounPhrase loads Article Noun NounPhrase loads NounPhrase NounPhrase Verb NounPhrase NounPhrase VerbPhrase Sentence 

Compilers perform such reductions when they check the syntax of programs in computer languages, and language students do so when they diagram sentences.3 

In summary, a grammar concisely encodes a type definition. If it is executed in generative mode it produces instances of the type, and if it is executed in recognition mode it determines whether or not a given object is an instance. Furthermore, the grammar assigns a syntactic structure to instances: it specifies a way (or perhaps alternative ways) of decomposing instances into parts of various recognizable types, such as noun phrases, verb phrases, and so on. 

Technically, the language L specified by a grammar is a subset of the carrier set V* of an algebra established by the vocabulary V and combination operators (figure 8.8). The vocabulary is divided into nonterminal elements (variables) and terminal elements (constants). In our example, the nonterminal vocabulary consists of the symbols  Sentence, NounPhrase, VerbPhrase, Article, Noun,  and  Verb.  The terminal vocabulary consists of six English words:  a, the, column, beam, supports, loads.  The concatenation operator applied to the terminal vocabulary yields an infinite number of strings, such as: 

the the the a the beam column supports loads a 

Even if we specify that a string must be exactly five words long, there will still be 65 = 7,776 strings. But we admit as sentences only those strings of terminals that are derived from the starting symbol  Sentence  by application of the rules. Thus our grammar specifies that only thirty-two of these five-word strings are sentences in the language. 

8.8 

The language L specified by a grammar is a subset of the carrier set V* of an algebra 

8.9 

The rules of a simple grammar that generates schematic designs for classical columns 

THE PARALLEL OF THE ORDERS AS A GRAMMAR 

If we want to use a grammar to restrict the possible states of a design world, we must formulate the rules in terms of the types of shapes, labels, and relations populating that world. This can be done in many different ways. Let us begin with a simple example. 

Parallels of the classical orders usually specify that an order consists of three parts: pedestal, column, and entablature. This might be expressed verbally by the replacement rule: 

Order -a Pedestal Column Entablature 

Then further rules of trichotomous subdivision might be added: 

Pedestal -a Base Dado Cap 

Column  -a  ColumnBase Shaft Capital 

Entablature —&gt; Architrave Frieze Cornice 

The same rules may be expressed graphically, as shown in figure 8.9. 

So far this is not a very interesting grammar, since it merely specifies a single object subdivided into nine parts. But it begins to specify a more interesting language if we introduce rules that provide for alternative substitutions, such as: 

Capital -a Doric, Ionic, Corinthian 

Furthermore, we can introduce rules that tell how to detail the various parts. For example, a Doric capital is detailed as follows: 

Capital  -a  Necking echinus Abacus Abacus -a plinth cymation fillet Necking -a cincture astragal fillets 

Figure 8.10 shows graphic versions of these rules and figure 8.11 illustrates their application to derive a complete Doric capital. It is easy to see how a complete parallel of the orders might be encoded by such rules. 

When run in generative mode these rules tell how to compose the parts of a classical column correctly: they encode knowledge of how instances of this type of artifact are put together. When run in recognition mode they tell how to parse a classical column into a hierarchy of labeled parts (figure 8.12). (These rules parse any classical column in a unique way, but in general grammars may parse objects in multiple ways.) Figure 8.13 illustrates the step-by-step reduction process by which an object is recognized and labeled as a classical column. 

8.10 

Rules for detailing a Doric capital 

8.11 

Top-down refinement of the design of a Doric capital  8.12 

A tree diagram depicting the derivation and structure of a schematic classical order 

8.13 

Reduction of a classical order 

Notice how the classical rules, as I have expressed them here, structure a top-down design process: the designer begins with a very abstract definition and recursively refines it into a detailed drawing of an instance of the type. The design strategy is to accomplish the final goal of producing a complete, detailed drawing via solution of a sequence of subproblems. The subgoal, at each stage, is to appropriately refine the current design to the next level of detail. 

Conversely, the classical rules structure a bottom-up recognition process. We first look for classical vocabulary elements such as astragals and cinctures, then check to see that these are correctly combined into higher-level components such as Doric capitals. Then we check that these higher-level components are correctly combined, and so on recursively until we can show that the whole composition not only has the correct classical parts, but is also correctly put together. 

All this works because a classical order is, like a sentence, a linear sequence of elements (running bottom to top instead of left to right). Thus we can embed a grammar in an algebra in which the sole operation is concatenation of sequences of elements. But in general, if we want to specify languages of two-dimensional and three-dimensional form, we must embed grammars in algebras that have wider repertoires of operations. One way to do this is to parameterize all the vocabulary elements, as shown in figure 8.14. Assignments of values to parameters then specify geometric transformations of instances, and required spatial relationships of elements in compositions can be expressed by writing predicates of the parameters. So we can more completely express the rule governing relationships of pedestal, column, and entablature in an order by writing: 

8.15 

Correctly proportioned classical column (according to the rules given by Vignola) 

Order (X4, Y4, Height4, Width4)  -&gt; 

Pedestal (XI, Yl, Heightl, Widthl) 

Column (X2, Y2, Height2, Width2) 

Entablature (X3, Y3, Height3, Width3) 

such that 

equal  (X4, XI) 

equal  (Y4, Yl) 

equal  (Width4, Widthl) 

equal (XI, X2) 

equal  ((Yl  +  Heightl), Y2) 

equal  (Widthl, Width2) 

equal  ((Y2 + Height2), Y3) 

equal (Width2, Width3) 

equal  (Height4, (Heightl  +  Height2 + Height3)) 

This rule could be elaborated to specify the correct classical ratio of column diameter to height, and so on (figure 8.15). 

The designer's first task, in producing a design within this language, is to choose a value of Height4 such that the order fits correctly into its context. This decomposes into subtasks of dimensioning and correctly relating pedestal, column, and entablature. The goal, in each of these subtasks, is to choose values for the variables such that the specified predicates are satisfied. Each of these subtasks then decomposes into still lower-level subtasks, and so on until values have been chosen for all the variables, predicates at every level have been satisfied, and the order has been designed down to the smallest detail. 

8.17 

Derivation of a design in the halfhexagon table grammar 

THE HALF-HEXAGON TABLE GRAMMAR 

Figure 8.16 illustrates another example of a grammar defined in a two-dimensional world of closed shapes. There is one terminal vocabulary element—a half-hexagon of fixed dimension—and one marker element—a white circle. (Markers function like construction lines: they guide the development of compositions but do not appear in completed compositions.) The game defined by this grammar is conveniently played with cardboard cutouts and coins. There is no explicit parameterization of vocabulary elements. We assume, instead, that the isometric transformations (identity, translation, rotation, and reflection) may be applied to any halfhexagon or circle. Let us also assume that the half-hexagons depict tables in a furniture layout. 

The positions of the markers define attachment points for new tables. The starting symbol is a single table with a single attachment point on one edge. There are three rules for attachment of new tables in different ways, and a fourth rule simply removes the attachment point to terminate the attachment process. A rule applies when its left-hand side can be brought into coincidence with a subshape by some isometric transformation. Recursive application of the rules derives sequences of arrangements such as that shown in figure 8.17. Some completed designs in the language are illustrated in figure 8.18. 

Now let us introduce two additional rules, as illustrated in figure 8.19. One recognizes and labels a type of arrangement called a circle, and the other recognizes and labels a type called a triad. We can now formulate problems such as "Construct an arrangement that includes two circles and a triad." Figure 8.20 illustrates a solution. 

In this case the rules of the grammar structure a bottom-up design process. Fully-detailed components (the halfhexagon tables) are given at the outset, and the designer must assemble these (much as in a jigsaw puzzle) in such a way that specified qualities emerge. A small part of the infinite state-action tree that must be searched for a solution is shown in figure 8.21. 

This tree may be searched systematically in either depth-first or breadth-first fashion. In depth-first search the designer picks an alternative from among the several available at each node, and so follows a branch deeply into the tree until a solution is found or until it becomes clear that the branch will not lead to a solution. If the branch does not lead to a solution, the designer backtracks then follows another branch, and so on. In breadth-first search, instead of diving 

8.18 

Some plan arrangements in the language specified by the halfhexagon table grammar 

8.20 

A solution to the problem "Construct an arrangement that includes three circles and a triad" 

8.22 

Approaching the solution via a sequence of subgoals 

deeply into the tree, the designer pushes uniformly into it, level by level. All of the nodes at the first level are examined, then all of the nodes at the second level are developed and examined, and so on. 

Both of these strategies become much more efficient if the designer has some good way of deciding which branches look most promising and exploring those first. In this case, the most obvious strategy is to accomplish the final goal via a sequence of subgoals of fitting individual pieces appropriately in place. The overall goal can be decomposed into subgoals of forming circles and triads. These subgoals, in turn, can be decomposed into lower-level subgoals of choosing correctly among rules one, two, and three (which fit tables against their predecessors in different ways) at each stage. If the current intermediate subgoal is to form a circle, for example, it is appropriate to choose rule two (which constructs a fragment of a circle). And if the current intermediate subgoal is to form a triad, it is appropriate to choose rule three (which constructs a fragment of a triad). By intelligently relating means to ends in this way, a designer can rapidly construct a solution (figure 8.22). 

GRAMMARS WITH SCALING 

In the half-hexagon table grammar, shape equivalence is defined under isometric transformations. But we can, if we wish, define equivalence under broader classes of transformations. Figure 8.23, for example, shows a simple grammar that generates compositions of right triangles. In this case, a rule applies when its left-hand side can be brought into coincidence with a subshape by some similarity transformation. 

If we think of grammars purely as abstract systems, we can define shape equivalence in any way we like. But if we want to relate a grammar to a particular construction world, it is more useful to define shape equivalence in a way that reflects the properties of that world. If real half-hexagon tables are made in just one size, for example, it makes sense to think of them as equivalent under rigid transformations, but it is  not  useful to broaden the definition of equivalence to provide for scaling. But if rooms can be made any size, we might find it useful in a floor-plan grammar to define shape equivalence under similarity or affine transformations. Figure 8.24 shows a grammar for Le Corbusier's spiral museum. Here room shapes that can be brought into coincidence by translation, right-angle rotation, and unequal scaling are taken to be equivalent. 

A design in the language  8.24 

A grammar for Le Corbusier's spiral museum 

8.25 

Skeletons of plan construction lines (after Durand's  Partie graphique des corns d’architecture a l’Ecole Royale Polytechnique,  1821) 

8.26 

Steps in the top-down process of refining a skeleton into a fully detailed plan (after Durand's  Precis des legons d’architecture,  1802-5) 

DURAND'S  PRECIS  AS A GRAMMAR 

Purely top-down and purely bottom-up design processes, as illustrated by these examples, are limiting cases that we rarely encounter in practice. Instead, the rules of grammars usually establish complex domains in which exploration of possibilities may proceed in both top-down and bottom-up directions. J. N. L. Durand's  Precis des legons d’architecture  (1802-5) and  Partie graphique des corns d’architecture  (1821) clearly illustrate this.4 

Durand's text and diagrams constitute a compendium of neoclassical design rules. Cross-axes, grids, squares and circles are taken as primitive shapes, and a diagram (figure 8.25) shows how to assemble these, in bottom-up fashion, into symmetrical skeletons of construction lines. Another key plate (figures 8.26, 8.27) illustrates the top-down process of recursively refining a skeleton into a fully detailed floor plan. Numerous additional plates illustrate a lexicon of alternative substitutions (figure 8.28) and examples of syntactically correct combinations of elements (figure 8.29). Durand's rules do not quite provide a complete, consistent specification of a classical architectural language, but it is straightforward to develop them into a grammar that does. 

If you try to design within the framework of Durand's rules, it soon becomes evident that the strengths and weaknesses of top-down and bottom-up strategies are complementary. In top-down design the subproblems are ones of choosing and adapting elements to fit within a framework that has been established at a higher level. At a certain point it may prove impossible to substitute or to adapt any of the available elements to fit as required. This necessitates moving back to a higher level of abstraction and adjusting the overall framework so that the lower-level problems are redefined. Conversely, in bottom-up design, the subproblems are ones of assembling known pieces to achieve specified emergent properties. At a certain point it may prove impossible to find a combination of the pieces at hand that achieves the desired result. This necessitates moving back to a lower level of abstraction and redesigning the components so that they can be put together in different ways—thus redefining the higher-level problems. 

8.27 

The final plan, after shapes representing architectural elements from the classical lexicon have been substituted and all construction lines have been removed 

8.29 

Examples of syntactically correct compositions (after Durand's  Paitie giaphique des corns d’architecture) 

8.28 

Alternative substitutions from the classical architectural lexicon (after Durand's  Paitie giaphique des corns d’aichitectuie ) 

A GRAMMAR OF PALLADIAN VILLA PLANS 

8.30 

Association of labels with points and with ends of line segments 

For a final example, let us consider a fairly sophisticated grammar to generate villa floor plans in the style of Palladio. Since Palladio was one of the first architects to explore plan ideas by sketching numerous variants, it is appropriate to define this grammar in a two-dimensional world of lines. It will suffice to take as the starting point the algebra of straight-line shapes under shape addition and subtraction that was introduced in chapter 4. Where L* is the universe of two-dimensional straight-line shapes, then, the Palladian grammar specifies a subset P of L*. 

Stiny (1980) has defined, for this sort of world, a powerful type of grammar known as a parametric shape grammar.5 Shapes, under Stiny's definition, consist of points, lines, and labels. Labels are alphabetic characters or character strings and may be associated with points and lines as illustrated in figure 8.30. Rules specify how subshapes of a composition in progress may be replaced by other shapes. A rule applies if there is a similarity transformation that will bring the shape on the left-hand side into coincidence with a subshape of the composition in progress such that there is a one-to-one match of labels. Shapes have proportion parameters, and the values of these can be left unassigned by the grammar so that dimensionless plan schemata, which can be proportioned in different ways, are produced. (When rules are applied it is assumed that assignments to the parameters of the matching shapes are the same.) Labels are used to control application of rules and to define termination conditions. 

Notice that, in this formalism for defining grammars, the sharp distinction made earlier between terminal shapes (which appear in completed designs in a language) and marker shapes ("construction lines," which do not appear in completed designs) is abandoned. A derivation terminates when labels (not markers) have been eliminated. The importance of this becomes evident when we consider the roles of shapes in depictions. Where there is a sharp distinction between terminals and markers, we assume that terminals depict physical components and assemblies in the construction world, while markers are just organizing abstractions that do not depict physical objects in the construction world. Thus, in the earlier example, half-hexagons depict tables in the construction world, but the circular markers do not depict anything in the construction world. But in a language specified by a parametric shape grammar, as now defined, shapes may have more or less precise meanings in the construction world. This allows for a design to evolve smoothly from an 

8.31 

The Villa Malcontenta as shown in Palladio's  Four Books of Architecture 

initial vague sketch to final working drawings that precisely specify the sizes, shapes, materials, and locations of physical components. 

The Palladian grammar given here is formulated as a parametric shape grammar.* It is a slight modification of a grammar published by Stiny and Mitchell in 1978. I will discuss the vocabulary and rules of the language and illustrate them through a step-by-step derivation of the plan of the Villa Malcontenta (figure 8.31). 

The grammar derives plans in top-down fashion, working from the footprint and an organizing grid down to the details of walls, columns, doors, and windows. Thus it fairly closely follows Durand's method. Derivations are organized into eight main stages, as follows: 

1.    grid definition 

2.    exterior-wall definition 

3.    room layout 

4.    interior-wall realignment 

5.    principal entrances—porticos and exterior wall inflections 

6.    exterior ornamentation—columns 

7.    windows and doors 

8.    termination. 

(0,0)  f  A 

8.32 

The initial shape from which all villa plans are generated: an axis through a labeled point 

The initial shape, from which all plans are generated, establishes a point labeled A at the origin of the coordinate system (figure 8.32). Tartan grids are generated around this point using the rules specified in figure 8.33. Figure 8.34 shows how these rules are applied to generate a small tartan grid. The grid required for layout of the Villa Malcontenta (and derived using these rules) is shown in figure 8.35. The dimensioning lines (with arrowhead) indicate the parameters controlling grid dimensions. We will leave values unassigned here and simply assume that any assignment of values complies with Palladio's well-known rules of proportion and maintains bilateral symmetry about the central axis. 

Once a grid is generated, it is circumscribed by a rectangle to define an exterior wall. This operation is performed by the rule specified in figure 8.36. The effect of applying this rule to the grid of the Villa Malcontenta is shown in figure 8.37. For clarity, the wall positions have been shaded. Meanings of shapes are now becoming less ambiguous. We can see that some of them specify locations for solid construction elements and others specify locations for habitable voids. 

The rules specified in figure 8.38 provide for formation of rectangular, I-shaped, T-shaped and +-shaped central rooms. Application of rules 13, 12, and 18 to the Villa Malcontenta's wall pattern produces the result illustrated in figure 8.39. Notice how the meanings of lines have shifted as the design has evolved. They began as abstract gridlines, then were seen as possible boundaries between solids and voids, and are now seen as room boundaries. Similarly, the interior polygons are now seen as rooms. 

Interior wall realignment is a subtlety occasionally introduced to allow achievement of appropriate dimensions and proportions. The rules of this are specified in figure 8.40. They are not applied in derivation of the Villa Malcontenta plan. 

The rules for handling principal entrances are specified in figure 8.41. Palladio drew on an extensive lexicon of entrance treatments (probably in response to the varying status of his clients, and the exigencies of site and budget), so quite a few rules are needed. The Villa Malcontenta's treatment is illustrated in figure 8.42. 

The addition of columns to a portico can be handled in many different ways: it becomes the occasion for an unconstrained ornamental flourish. Palladio's numerous variations 

8.33 

Rules for the generation of bilaterally symmetrical tartan grids 

8.34 

Application of the rules to generate a small tartan grid 

Undimensioned layout 

8.35 

The tartan grid generated for the Villa Malcontenta 

8.36 

Rule for inscribing an outer rectangle to define exterior wall surfaces 

Layout with correct Palladian values assigned to dimensioning variables  8.37 

The underlying wall pattern of the Villa Malcontenta 

B 

B 

8.38 

Rules for concatenation of cells to produce larger and more complex rooms 

8.39 

Derivation of the room layout of the Villa Malcontenta 

8.40 

Rules for interior wall realignment 

8.40 (cont.) 

8.41 

Lexical insertion rules providing for a wide variety of entrance treatments 

8.41 (corn.) 

8.42 

Addition of the front entrance and inflection of the back wall of the Villa Malcontenta 

on the theme of portico columns are enumerated by the rules specified in figure 8.43, and figure 8.44 shows how the Villa Malcontenta columns are inserted. 

The distinction that arises here between construction and enumeration of possibilities is an important one. We can encode Palladio's principles of room layout in a few simple rules, then construct layouts as required by recursive application of these rules: we do not need an exhaustive catalogue of Palladian room layouts. But it is hard to make useful generalizations about entrance treatments, so we must resort to enumerating the possibilities one by one. 

By contrast, there  are  a few, strict, general principles for placement of doors and windows. These are expressed by the rules in figure 8.45, and application to the Villa Malcontenta is shown in figure 8.46. 

Finally, termination rules are specified in figure 8.47. For the most part these provide for erasing the construction lines and labels that were used to guide the plan generation process. When the termination rules are applied in the Villa Malcontenta derivation, the final plan shown in figure 8.48 is produced. At this stage, the mappings of shapes to construction world elements are completely unambiguous: shapes stand for rooms, walls, columns, doors, and windows. You could build from this drawing. 

This grammar generates all the uniaxial7 villa plans published in Palladio's  Four Books of Architecture  (figure 8.49), together with many plans sketched elsewhere by Palladio, and a rich catalogue of original plans in a convincing Palladian manner. Since the grid construction rules can be applied indefinitely, to generate grids of increasing size, this grammar specifies a countably infinite universe of villa designs for exploration. FFowever, the number of room layouts possible within a grid of specified size is finite. Figure 8.50, for example, shows the twenty possibilities within a 3 by 3 grid. Notice that the Villa Angarano appears in this catalogue as number four. 

With a 5 by 3 grid the number of possible room layouts grows to 210. It is convenient to classify these according to the shapes of the central rooms. Figure 8.51 shows the complete catalogue of 119 5 by 3 layouts with rectangular central rooms. Five of the layouts from the  Four Books of Architecture  appear here: Villa Badoer, Villa Zeno, Villa Emo, Villa Ragona, and Villa Poiana. 

There are only five 5 by 3 layouts with I-shaped central rooms, as shown in figure 8.52. The Villa Pisani (the only such layout to appear in the  Four Books of Architecture)  is the first of these. The other four are obvious variants on the Villa Pisani theme. 

8.43 

Lexical insertion rules providing for a variety of ways to add columns flanking the front entrance 

8.45 

Rules for placement of doors and windows 

8.46 

Derivation of the Villa Malcontenta's pattern of openings 

8.47 

Termination rules 

8.48 

The final plan of the Villa Malcontenta, after application of termination rules to remove remaining construction lines and labels 

8.49 

Schematic plans of the uniaxial villas published in Palladio's  Four Books of Architecture  and generated by the grammar 

8.50 

Complete enumeration of designs in the language generated by the Palladian grammar: all the 3 by 3 schematic plan layouts produced by rules 1 to 19 

8.51 

All the 5 by 3 schematic plan layouts with rectangular central rooms in the Palladian language 

tan 

8.52 

All the 5 by 3 schematic plan layouts with I-shaped central rooms in the Palladian language 

A T-shaped central room allows considerably more freedom in organization of the auxiliary rooms than does an I-shaped central room. The catalogue shows 78 variants on the theme of the Villa Sarraceno (figure 8.53). 

Finally, there are eight possible 5 by 3 layouts with -t-shaped central rooms (figure 8.54). The Villa Malcontenta is number two, and there are five more straightforward variants on the theme of the Villa Malcontenta. The catalogue is completed by two layouts in which both arms of the cross completely span the plan. 

As noted in chapter 2, Palladio thought that only a few ratios of small whole numbers were suitable for the proportions of room plans. If we assume that any room in a layout can be proportioned in any of these ratios (subject to the requirement of bilateral symmetry), and that we know at least one room dimension, the combinations of possible room proportions yield systems of simultaneous, linear, integer equations which we can attempt to solve for values of all the dimensioning parameters. In general, some of these systems will have positive solutions (the values that we seek) and some will not (meaning that the corresponding combination of room proportions cannot be realized in the given layout). Thus any layout can be developed into fully 

8.53 

All the 5 by 3 schematic plan layouts with T-shaped central rooms in the Palladian language 

8.54 

All the 5 by 3 schematic plan layouts with +-shaped central rooms in the Palladian language 

8.55 

Some original, fully developed "Palladian" villas generated by the grammar 

dimensioned plans with correct Palladian proportions. Finally, any schematic plan can be detailed in numerous ways by application of rules governing selection and placement of doors, windows, and entrance features. Figure 8.55 shows some examples of original, fully developed villa plans in the language specified by the grammar. 

In essence, the grammar concisely encodes knowledge of how to put together Palladian villa plans—the kind of knowledge traditionally acquired by perusal of the  Four Books  and through apprenticeship in the studio. If we consider the corresponding reductions, it also provides a way to recognize villa plans as Palladian—by successfully reducing them back to points labeled A. 

DESIGN AS COMPUTATION 

The view of design that has been developing through this discussion can now be made more precise. We have seen that a design world provides shape tokens which depict architectural elements. The rules of a grammar specify the ways in which these tokens may be manipulated. A design process is a computation of specified predicates according to these rules; that is, a sequence of operations on the shape tokens undertaken in an effort to satisfy predicates asserted about the design world. 

To put this in another way, we can say that the syntactic rules governing a design world establish an architectural type (such as that known as the Palladian villa), and predicates expressed in a critical language establish the requirements of a particular moment and context.8 The goal of the designer's computation is to instantiate the type in a way appropriate to that moment and context. 

A basic structure is given to the design world by the initial vocabulary of shapes, the operators that can be applied to them, and the algebra that results. But knowledge of the type, as expressed in rules for recognition, refinement, and assembly of parts, provides much more structure. 

The process of finding a solution to a design problem is a trial-and-error one of applying rules to generate candidate solutions, then computing predicates to determine whether candidate solutions are acceptable solutions.9 The basic structure of this process is illustrated in figure 8.56. It is known, technically, as a generate-and-test process taking place in a search space. 

A computational device to execute such a process needs a generation mechanism, a test mechanism, and a control strategy (rules for determining what alternative to try next). 

8.56 

The basic trial-and-error structure of a design process 

Design intelligence may be located either in the generation mechanism or in the test mechanism. In the former case, the rules of the grammar assure with high probability (or perhaps even guarantee) that an acceptable solution will be quickly produced: the evaluation mechanism has little or nothing to do. In the latter case, the generation mechanism indiscriminately produces alternatives, and it is up to the evaluation mechanism to sort out the acceptable ones by bringing a knowledge base to bear, drawing inferences, and exploring the entailments of alternatives. In other words, you can get acceptable results by combining smart designers with dumb critics, or by teaming smart critics with dumb but energetic designers. You may prefer God (a smart designer with no need for a critic) or evolution (indiscriminate generation but deadly effective criticism). 

Given a generation mechanism and a test mechanism, the efficiency with which a solution can be found will depend on the control strategy that is used. Depending on the structure of the problem, either depth-first or breadth-first search may prove to be the more efficient. And efficiency can usually be enhanced by choosing appropriate subgoals, developing more promising alternatives before less promising ones, and abandoning branches as soon as it becomes clear that they are unlikely to lead to a solution. 

Different types of computational devices may be used to generate proposals, test them, and apply control strategies. For example, a computer can be used to generate alternatives by mechanically applying the rules of a shape grammar, with a human critic inspecting and testing the machine's proposals. Or a human designer might generate alternatives which are then evaluated by analysis programs or knowledge-based computer systems. In a completely manual design process all the generation and testing is performed by a human designer, or the tasks are divided among members of a design team. And in a fully automated design process the computer both generates and tests. 

This formulation seems uncomfortably mechanistic and reductionist if we assume that a designer works in a closed world of fixed rules, limited knowledge, and predefined goals. This may, indeed, be the case in some specialized areas of design, but an architect usually works with a complex structure of facts, rules, and goals that can grow and change as a design process unfolds. The task is not just to solve a well-defined problem but to discover interesting possibilities and relate them, through critical discourse, to our knowledge and experience. Design elucidates  both  what we can have  and  what we want. 

As a foundation for designing, we need a theory of what types of shapes among the indefinitely many emergent subshapes in an evolving design should receive our attention. We have now seen that the left-hand sides of shape rules specify the shape types of interest, and that available recognition mechanisms (computer implemented, or in the human perceptual system) provide a way to find instances of these. We also need to know what to  do  with these shapes when we find them; the right-hand sides of shape rules establish potential directions for further development of the design, and the available operators (for instantiation, transformation, and combination of shapes) provide the means to carry out that development. 

Ideally, the rules of an architectural grammar should provide a well-formed representation of a class of buildings in a construction world. In other words, the language specified by the grammar should include a depiction of every possible building in the class, and every design in the language should be for a possible building in that class. Of course there can be differences of opinion about the extension of a class of possible buildings, and hence about whether or not a grammar provides a well-fojrmed representation. Some may think, for example, that the Palladian grammar specifies too many possibilities, and some may think that it specifies too few. It depends on what you understand by "Palladian villa." 

I do not want to suggest that designers necessarily follow explicit grammatical rules (though they sometimes do). Nor do I want to speculate (as an orthodox, functionalist, cognitive scientist might) that a designer's mental states are states of an abstract computational device and that design is the mental derivation of shapes. The essential points are that design exploration is rarely indiscriminate trial-and-error but is more usually guided by the designer's knowledge of how to efficiently put various types of compositions together and that such knowledge can often be  made  explicit, in a concise and uniform format, by writing down shape rules. 

FUNCTIONAL DESCRIPTIONS 

In  De Anima  Aristotle pointed out that we can describe a physical object not only by specifying its form and materials, but also by specifying its functions.1 While "the physicist" would describe a house as "stones, bricks, and timbers," Aristotle suggested, "the essence of a house is assigned in such a formula as 'a shelter against destruction by wind, rain, and heat.'" There is some evidence to suggest that the distinction drawn here between formal and functional descriptions is actually grounded in a difference of brain mechanisms for perceiving form and function. For example, Warrington and Taylor (1973), in studies of brain-damaged patients, found that damage to the left parietal lobe can impair ability to recognize the function of an object, while leaving intact the ability to perceive its three-dimensional shape. Conversely, damage to the right parietal lobe produces the opposite effect. Be this as it may, the distinction is certainly of fundamental importance to us here: if we do not want to treat architectural design as a purely formal game, we must introduce into our critical language predicates specifying functions. We need, for example, to be able to specify as a design objective the provision of shelter against destruction by wind, rain, and heat. In this chapter I shall consider how to do so. 

ACTIONS 

Essentially a description of form tells what an object  is,  while a functional description tells what it  accomplishes.  That is, it specifies actions with effects that interest us. Thus we might functionally describe a knife by saying that it cuts or a glass by saying that it holds wine or a traffic light by saying that it controls traffic. So we normally use verbs in describing function, by contrast with our use of adjectives in describing physical properties and our use of prepositions and comparatives in describing physical relations. Very often, too, the name that we give to a physical object is a condensed functional description formed from a verb. Consider for example "eraser," "computer," "bathroom," "air-conditioner," and even "shelter." 

Another way to describe an action (and hence a function) is as an input/output pair (figure 9.1). For example, the function of a toaster might be described by: 

toaster (bread) = toast 

9.1 

Description of a function in terms of inputs and outputs 

This illustrates the relation between the logical and everyday senses of "function": formally speaking, the toaster executes a function mapping from bread to toast. It also maps from raw muffins to toasted muffins, and so on. We can use variables to provide for this, and write: 

toaster (X) = Y 

where the range of X consists of all the sorts of things that we might want to toast, and the range of Y consists of all the sorts of things that we can get when we do so. The function "toaster" is then a subset of ordered pairs in the Cartesian product of X and Y, as specified by the following rules: 

toaster (bread)  =  toast toaster (muffin)  =  toasted muffin toaster (bagel)  =  toasted bagel toaster (cheese) = melted cheese 

Notice that it transforms bread into toast and muffins into toasted muffins, but not bread into toasted muffins: you would need a device that executed another (rather more unusual) function to accomplish that. 

Sometimes it is convenient to use numerical variables, as for example in: 

lightbulb  (Electricity) = (Light) 

This specifies that  lightbulb  is a function mapping some input of electricity into some output of light. We might describe the mapping by a set of ordered pairs of numerical values for the two variables or, more concisely, by mathematical formulae linking the two variables. The use of mathematical formulae to describe physical functions in this way has become a cornerstone of modern engineering. 

AFFORDANCES, FUNCTIONS, AND SIDE EFFECTS 

A functional description does not specify just any action that happens to be performed by an object. We are much more restrictive about what we admit as functions. Specifically, a functional description tells of the useful actions performed by that object in some particular context. For example, if we say that somebody's heart performs the function of circulating blood, then we specify a useful action that it performs in the context of that person's body. But we would not say that, in the context of the body, the heart performs the function of making the sound of heartbeats,- this appears to be merely a useless side effect. Further, if the heart were placed in some other context, say a jar of formaldehyde, then its behavior 

9.2 

Architectural homonyms: different usages of same-shaped elements 

would be different. It would no longer circulate blood in the body, so this, obviously, could no longer be its function. But it might then perform some other function, for example the instruction of medical students. 

A convenient way of beginning to sort out these complexities is to say that an object may, by virtue of its physical characteristics, afford2 different functions in different contexts. Thus, by virtue of its weight, a brick affords holding down when placed on top of a pile of papers. By virtue of the friction developed between brick and floor, it also affords the function of doorstop. And, by virtue of its compressive strength, it affords a structural function when used in a wall. Clearly we can see an object as something in one context and use it as something else in another context. 

When context is indefinite, then, the function of an object is relatively ill defined. But, if we consider an object to be an element of an architectural language, the syntactic rules of that language will specify the contexts in which it can appear. We can then consider the object's roles in those contexts and so produce a relatively well-defined (if potentially complex) functional description. For example, a long, thin, hollow, metal cylinder might have very many different uses. But, in a particular architectural language, it can be used as a column if the grammar allows it to be placed under a beam, it can be used as a handrail if the grammar allows it to be placed beside a stair, and it can be used as a pipe if the grammar allows it to be placed end-to-end with other pipes (figure 9.2). 

DIRECTION TOWARD GOALS 

In a given context, then, we sort the effects of the various actions performed by an object into useful ones and irrelevant or pernicious side effects. We regard actions with useful effects as goal-directed, and therefore classify them as functions. 

Such classification is relative to a state of knowledge and a point of view. We regard circulation of blood as a function because we know that this supports life, and we take this to be good. But we cannot see any good following from the production of the sound of heartbeats. If medical research were to reveal some hitherto unknown effect of the sound of heartbeats that we recognized as valuable, then we would reinterpret production of the sound of heartbeats as a function of the heart. Or, consider the production of heat by a lighting system. Usually this is regarded as an undesirable side effect. But a clever engineer might capture this heat and 

use it to reduce the building's energy consumption. So the production of heat now becomes a function. Yet again, a computer program might have a bug; but this might be relabeled as a feature if somebody finds that its effect is somehow useful. 

In general, actions afforded by an object become functions when we discover how to make use of them—when we can direct them toward the achievement of some goal. To describe a function fully, then, we should specify not only the action of interest, but also the goal toward which that action is directed. We might describe the hour hand of a clock, for example, by saying that it rotates  in order  to indicate the time (Bobrow, 1985). 

FUNCTIONAL CONNECTIONS 

A claim that an action is useful invites a question about the viewpoint from which usefulness is defined. What is useful to the landlord of a building may not be useful to the tenant, and a biological feature that is useful for the survival of a species may not be useful to an individual organism in some specific context. Must we take the Aristotelean position (as developed, for example, in  Nichomachean Ethics)  that the concepts of function  (ergon)  and good are inextricably interrelated, and so consider functions as contributions to some ultimate good? Does this require us to consider the purposes of God? 

A reasonable way to avoid these complexities is to say, simply, that an action of an object is a function if its effect is to provide something that another object requires in order to perform its functions. Thus we define function in an indirect, recursive way. We must ask, of course, how the recursion eventually terminates—but I will come back to that. 

Two physical objects are functionally connected whenever a function of one is to provide something that the other requires. A power outlet and a light fixture are functionally connected, for example, when the outlet provides the fixture with the electricity required to illuminate a room. In other words, the function of the outlet is to supply electricity, or: 

outlet (supply) = electricity 

And the function of the light fixture is: 

fixture (electricity) = light 

A chain of functional connections 

hut (roof (beam (columns (ground)))) or 

hut (superstructure (columns (ground))) or 

hut (roof (frame (ground))) 

Thus the functional connection by which electricity is supplied to produce light is described by: 

fixture (outlet (supply))  =  light 

In general, functional connections are established by spatial relationships: plugging a fixture  into  an outlet enables the outlet to provide electricity, placing a column  under  a beam enables it to provide support, and so on. This is because the required physical action will take place only when the spatial relationship of the objects satisfies certain requirements. When an object is an element of an architectural language, then, the syntactic rules of that language specify how to form functional connections by locating the object in the right place. 

PHYSICAL SYSTEMS 

A physical system3 may now be defined, provisionally, as a collection of functionally interconnected physical objects. Thus, for example, an automobile engine is a physical system of mechanical parts, the human body is a physical system of organs, a structural frame is a physical system of columns and beams, a beam is a physical system of web and flanges, and a house is a physical system of rooms and circulation spaces. A physical system's chains of functional connection—that is, its chains of causality leading to useful results—are what particularly interest us. 

Consider, for example, a "primitive hut" much like the one described by Laugier (figure 9.3). A roof provided with support gives shelter. A beam provides support to the roof, columns provide support to the beam, and the ground provides support to the columns. We can identify two overlapping subsystems: the superstructure, which provides shelter and requires support from columns, and the frame, which provides support to the roof and requires support from the ground. Identification and naming of subsystems in this way is an act of reification—addition of objects to the universe of discourse (just as we did, earlier, in developing formal descriptions). A thing that provides support to the roof in the context of a hut is called a frame. Frames might take many different forms, but to know what a frame  is  is to know how to use things made from columns and a beam to support the roof of a hut. A hut, taken as a whole, is a system of roof, frame, and ground (alternatively, superstructure, columns, and ground) organized to provide shelter. More concisely, from a functional viewpoint, it  is  a shelter against destruction by wind, rain, and heat (figure 9.4). 

hut (roof (beam (columns (ground)))) -&gt; hut (roof (beam (support )))—&gt; hut (roof (support))-* hut (shelter) 

9.4 

The primitive hut: a physical system that provides shelter to the interior and requires support from the ground 

Within a physical system, the functions of most of the components are consumed in internal functional interconnections: they provide what other components require. The functions provided by the system as a whole are those  not  consumed in internal functional interconnections. Similarly, the functions required by the system as a whole are those not provided internally. Thus functions are defined relative to some system boundary, beyond which we choose not to pursue chains of cause and effect. This boundary may be drawn arbitrarily but, in order to avoid infinite regress, it must be drawn somewhere. 

Often there are natural places to draw a system boundary. In consideration of the physical functions of organs, for example, it is natural to draw a boundary around the individual organism and define functions relative to the goal of individual survival. In architecture we usually take the individual building as the system, and in urban design we take the individual settlement. 

We can also draw a boundary anywhere within a system to define a subsystem. The functions provided by the subsystem are those not consumed in internal functional interconnections, and the functions required are those not provided internally. The interface of the subsystem to its context is defined by the functional connections that cross the subsystem boundary. 

It is usually most convenient to draw subsystem boundaries such that there are relatively dense functional interconnections within the subsystem and relatively few crossing the subsystem boundary (figure 9.5).4 This allows us to understand a complete system as an organization of semiindependent subsystems interacting in well-defined ways across their interfaces. Thus we think of the human body, for example, as an organization of a skeletal system, a muscular system, a circulation system, a nervous system, and so on. Similarly, we usually divide a building into support system, enclosure system, ventilation system, heating system, lighting system, plumbing system, electrical supply system, mechanical circulation systems, safety systems, communication systems, and control systems. 

When we have segmented a system in this fashion we can describe the way that it works by specifying the functions of each subsystem and the functional connections that are made.5 This could be done in the logical notation introduced earlier, but the task can become a lengthy and tedious one. It will be more convenient, for our purposes here, to use an equivalent graphic notation introduced by Freeman and 

Subsystem boundaries are drawn to minimize functional connections across boundaries 9.6 

The Freeman and Newell notation depicts functional connection by head-to-tail connection of output and input arrows, and nesting of subsystems by nesting of boxes 

Newell (1971). In this notation, a subsystem is represented by a labeled box (figure 9.6). Functions provided by a subsystem are represented by outward-pointing arrows, and functions required are represented by inward-pointing arrows. Thus a functional connection, in which one subsystem provides a function required by another, is depicted by a head-to-tail connection of arrows. Systems consisting of several functionally interconnected subsystems are depicted by nesting boxes within boxes. 

Now let us consider a complex system described in the Freeman and Newell notation (figure 9.7). If we are interested only in the functions of the system as a whole, we can treat the whole thing as an opaque "black box" and consider only the input and output arrows. If we want to know roughly how the system works, we can look at the highest-level subsystems and their functional interconnections. If we want to know how these subsystems work internally, we can go down another level, and so on recursively. 

The functions of each subsystem might simply be described verbally. Alternatively, they might be described quantitatively by writing procedures that convert values of input variables into values of output variables. In this way, a computer model that simulates the functioning of the system can be produced. 

Notice how our ability to produce an intelligible functional description depends on our knowledge of how to parse a system into elements and subsystems in some appropriate way. Imagine, for example, trying to produce a functional description of a building by dividing it into inch-thick vertical slices, specifying the functions provided and required by each, and tracing the functional connections. The recognition rules of a grammar usually tell how to decompose a building in a more "natural" and useful way, but they do not necessarily parse it into discrete, nested subsystems (figure 9.8a): they may identify overlapping subsystems (figure 9.8b). Recognition of different subsystems leads to development of different functional descriptions. Often, a complex system must be understood not as a simple hierarchy, but as a structure of overlapping and interlocking subsystems.6 

A more refined definition of a physical system can now be given. I shall take it that a physical system is any physical object with a useful ability that can be explained by specifying its parts (functional components) and describing their functional connections. To design a physical system is to select functional components that will perform as required and specify an arrangement of these parts that will allow them to interact as required. 

Depiction of functional organization at different levels of abstraction 

b. Overlapping subsystems 

9.8 

Different ways to decompose a system 

A building might make money for a developer or represent the dwelling of a god. Clearly these are important functions, but not (at least in any direct sense) physical ones, so some generalization of the definition of function as role in a physical system seems necessary. This can be accomplished by introducing the idea of a human society composed of individuals and of groups such as families, communities, and so on. If we want to understand and describe how a society works, we will at least need to consider patterns of human movement and assembly,- that is, the physical activity system that operates within a society. Further, if we focus upon economic transactions between individuals and groups, we can describe the economic system associated with the society. And, if we focus upon acts of communication, we can describe the cultural system. Then we can begin to consider the roles that artifacts (including buildings) play within such systems, in much the same way that we have considered their roles within physical systems. 

There is, indeed, a long tradition of functional analysis of activity, cultural, and economic systems within societies.7 Its roots can be traced back to the works of various nineteenth-century social theorists: Comte, Spencer, and Marx, in particular. In its modern form, it was pioneered by the sociologist Emile Durkheim and by the anthropologists Bronislaw Malinowski and A. R. Radcliffe-Brown. Durkheim's (1933) most essential contribution was to insist that, in attempting to understand and explain a social phenomenon, "we must seek separately the efficient cause which produces it and the function it fulfills." Malinowski (1936) proposed that, "in every type of civilization, every custom, material object, idea and belief fulfills some vital function, has some task to accomplish, represents an indispensable part within a working whole." He developed a close analogy between the workings of a living organism, and this led him to suggest that the functions of institutions, customs, and so on could be defined in terms of their contributions to maintaining stability and survival of the system as a whole. Radcliffe-Brown (1952) emphasized processes of adaptation and adjustment which have the effect of maintaining the integrity and continuity of the system. 

However, the functional analysis of ongoing activity, cultural, and economic systems is much less straightforward than the functional analysis of artificial physical systems, or even that of living systems. Generally it is not so easy to draw the boundaries of the system of interest. Within the 

system there are entities, structures, and actions that are difficult to identify and describe with precision: institutions, norms, conventions, customs, laws, recurrent activities, patterns of beliefs and ideas, and the like. And questions of value enter in subtle and complex ways. Is it adequate to define function, ultimately, in terms of contribution to stability, integrity, and survival of the system as a whole, as functionalist social scientists have tended to do? What actions and effects are valued, and by what individuals and groups? Might a function from the viewpoint of some particular group within the society be a dysfunction from the viewpoint of another? If the system as a whole malfunctions in some way, might not generation of social change be more important than maintenance of stability? 

Functionalist social science clearly has its limitations, then, and its larger claims should be treated with considerable caution. But its suggestion that functions can be defined in relation to human activity systems, economic systems, and cultural systems, as well as in relation to physical systems, remains fundamentally useful. 

Specifically, we usually take it that the essential function of a building is to shelter the space required for some human activity. This has often led theorists to classify buildings according to the activities that they accommodate. Vitruvius, for example, first discussed temples. Then, in Book V, he undertook to "treat of the laying out of public places." Under this head fell the forum, treasury, prison, senate house, theater, colonnades and walks, baths, palaestra, harbors, breakwaters, and shipyards. Finally, in Book VI, he dealt with private houses, with the farmhouse and the Greek house as subclasses. 

Alberti developed a much more detailed and systematic functional classification, explicitly based upon a theory of social roles and organization. In Book IV of his  Ten Books  he spoke of "the several divisions of human conditions, whence arises the diversity of buildings," and elaborated: 

Yet when we take a view of the great plenty and variety of buildings all about us, we easily perceive that . . . this great variety and difference among them, are owing principally to the variety there is among mankind. So that, if according to our method we would make a careful enquiry into their sorts and parts, it is here that we must begin our disquisition, namely, from the nature of mankind, and wherein they differ from one another; since upon their account it is that buildings are erected, and for their uses varied: so that having thoroughly considered these things, we may treat of them more clearly. 

His functional classification incorporated such fine distinctions as that between a castle for a tyrant and a palace for a king, and included elaborate enumerations of variants, for example: 

Of the commissaries, chamberlains, public receivers and the like magistrates, whose business is to supply and preside over the public granaries, chambers of accounts, arsenals, markets, docks and stables; as also of the three sorts of prisons . . . 

Reflecting the context of eighteenth-century French society, Jacques-Frangois Blondel's  Corns d’architecture  (1771-77) established a functional classification that included theaters, dance halls, vauxhalls, cemeteries, colleges, hospitals, charnel houses, hotels, exchanges, libraries, academies, factories, fountains, baths, markets, fairs, slaughterhouses, barracks, town halls, prisons, arsenals and lighthouses. 

Following the foundation of the Ecole Polytechnique in Paris at the end of the eighteenth century, the school's first professor, J. N. L. Durand, published his systematically comprehensive text  Precis des legons d’architecture donnees a 1’Ecole Polytechnique  in two volumes in 1802-5. Earlier we considered the grammar of architectural composition that was established in the first volume. The second volume set out the functional classification of buildings in a Napoleonic city. Henry Russell Hitchcock (1958) has summarized it as follows: 

First he deals with urbanistic features, including not only bridges, streets, and squares, but also such supposedly essential elements of the ideal classicizing city as triumphal arches and tombs. A second section considers temples (not churches, it is amusing to note), palaces, treasuries, law courts, town halls, colleges, libraries, museums, observatories, lighthouses, markets, exchanges, custom houses, exhibition buildings, theatres, baths, hospitals, prisons, and barracks. Here were all the individual structures of the model Napoleonic city. 

From ancient times it is possible to trace a general tendency toward greater articulation and diversity in these functional classifications, reflecting increasing complexity of social organization and functioning. Nikolaus Pevsner explored this, in some detail, in his  A History of Building Types  (1976). For example he identified a line of development, beginning in the Middle Ages, when, 

. . . the market hall may break away from the town hall, and may itself split up into a corn hall and a cloth hall, and when the law courts as well as the exchange begin to require extra buildings. Then in the later sixteenth century, government offices first received a building of their own: the Uffizi. But the top storey of the Uffizi became the Medici art gallery, and special museum buildings began to be segregated from the palaces of which they and also the major libraries had formed part. . . . That museums and libraries became public is one aspect of the rise of the middle class into prosperity. 

Through the nineteenth century, with the Industrial Revolution and rapid urbanization, many new functional classes—the railway station, exhibition building, and department store, for example—were to emerge. And the pace has continued to accelerate through the twentieth century, with the development of new classes ranging from motels, gas stations, and airports to suburban shopping centers, video arcades, and laundromats. 

An ecological analogy can be useful here (provided that we do not push it too far). In an ecosystem, the phenomenon of coevolution may be observed. As an ecosystem as a whole evolves, a range of ecological niches emerges, and niches are occupied by appropriately adapted species of organisms. Individual species adapt in the direction of more closely fitting their niches, and this in turn affects the pattern of the whole. The overall result may be that the system evolves in the direction of greater diversity of species, or reduced diversity, or that the system stabilizes at some level. Many scholars, perhaps most notably Robert Park (1925), have drawn a close analogy between social systems and ecosystems. From this viewpoint, we should expect to find that processes of social transformation and evolution generate niches which are filled by appropriately adapted "species" of buildings and rooms, and that different societies (like different ecosystems) will evolve different levels of species diversity. 

ARCHITECTURAL PROGRAMS 

A document that enumerates the activities to be accommodated in a building and specifies how this should be done is known as an architectural program (or brief, in Britain). Vitruvius, for example, stated the program for a house (figure 9.9) as follows: 

We must next consider the principles on which should be constructed those apartments in private houses which are meant for the householders themselves, and those which are to be shared in common with outsiders. The private rooms are those into which nobody has the right to enter without 

9.9 

A typical Roman house, with specialized spaces provided to shelter a variety of the inhabitants' activities 

an invitation, such as bedrooms, dining rooms, bathrooms, and all others used for the like purposes. The common are those which any of the people have a perfect right to enter, even without an invitation: that is, entrance courts, cavae-dia, peristyles, and all intended for the like purpose. FFence, men of everyday fortune do not need entrance courts, tabli-na, or atriums built in grand style, because such men are more apt to discharge their social obligations by going round to others than to have others come to them. 

Further, he distinguished varieties of programs, according to the station of the owner: 

Those who do business in country produce must have stalls and shops in their entrance courts, with crypts, granaries, storerooms, and so forth in their houses, constructed more for the purpose of keeping the produce in good condition than for ornamental beauty. 

For capitalists and farmers of the revenue, somewhat comfortable and showy apartments must be constructed, secure against robbery; for advocates and public speakers, handsomer and more roomy, to accommodate meetings; for men of rank who, from holding offices and magistracies, have social obligations to their fellow-citizens, lofty entrance courts in regal style, and most spacious atriums and peristyles, with plantations and walks of some extent in them, appropriate to their dignity. They need also libraries, picture galleries, and basilicas, finished in a style similar to that of great public buildings, since public councils as well as private lawsuits and hearings before arbitrators are very often held in the houses of such men. 

Often programs specify not only the types and sizes of spaces, but also the ambient conditions to be provided within them. Vitruvius wrote: 

We shall next explain how the special purposes of different rooms require different exposures, suited to convenience and to the quarters of the sky. Winter dining rooms and bathrooms should have a southwestern exposure, for the reason that they need the evening light, and also because the setting sun, facing them in all its splendour but with abated heat, lends a gentler warmth to that quarter in the evening. Bedrooms and libraries ought to have an eastern exposure, because their purposes require the morning light, and also because books in such libraries will not decay. In libraries with southern exposures the books are ruined by worms and dampness, because damp winds come up, which breed and nourish the worms, and destroy the books with mould, by spreading their damp breath over them. 

Dining rooms for Spring and Autumn to the east; for when the windows face that quarter, the sun, as he goes on his career from over against them to the west, leaves such rooms at the proper temperature at the time when it is customary to use them. Summer dining rooms to the north, because that quarter is not, like the others, burning with heat during the solstice, for the reason that it is unexposed to the sun's course, and hence it always keeps cool, and makes the use of the rooms both healthy and agreeable. Similarly with picture galleries, embroiderers' work rooms, and painters' studios, in order that the fixed light may permit the colours used in their work to last with qualities unchanged. 

Alberti gave even more elaborate environmental requirements, not all of which are convincing. In a stable, for instance, he required that "the moon's beams do not come in at the windows," since they would make the horse "walleyed and give him grievous coughs." 

Many programs also specify the adjacencies and proximities to be provided. Among the requirements enumerated by Vitruvius were: 

Bathrooms . . . should adjoin the kitchen; for in this situation it will not take long to get ready a bath in the country. . . . Let the pressing room, also, be next to the kitchen; for in this situation it will be easy to deal with the fruit of the olive. Adjoining it should be the wine room. 

As the explanations suggest, the activities housed in the spaces are functionally connected: one must closely precede the other in time, or closely adjoin it in space, so the corresponding spaces must be closely linked to facilitate adequate performance of the activities. 

Alberti was particularly scholarly and systematic in his specification of adjacency and proximity requirements, and carefully related them to activity patterns, customs, and environmental requirements. So, for example, a country house for a gentleman should be organized as follows: 

The kitchen ought to be neither just under the noses of the guests, nor at too great a distance,- but so that the victuals may be brought in neither too hot nor too cold, and that the 

noise of the scullions, with the clatter of their pans, dishes and other utensils, may not be troublesome. 

The mistress of the family should have an apartment, in which she may easily hear every thing that is done in the house. 

The wife's chamber should go into the wardrobe,- the husband's into the library. 

Their ancient mother, who requires tranquility and repose, should have a warm chamber, well secured against the cold, and out of the way of all noises either from within or without. 

If a man is sick, let him make use of a close-stool; but when he is in health, surely such nastiness cannot be too far off. 

In the French academic tradition programs became more precise and rigorous. An essential part of this tradition, in the eighteenth and nineteenth centuries, was the Grand Prix de Rome, an annual architectural competition established at the Academie Royale d'Architecture in 1720. In conjunction with the great academic texts, such as those of Blondel, Durand, and later Guadet, the Grand Prix competitions firmly established the idea of a formalized architectural program,8 against which designs could be checked for compliance. The program for the Grand Prix (which was different each year) specified a building type and described the activities to be accommodated, together with their space requirements. It was a formal document—in the early years simply dictated to competitors, later given in written form. Competitors who failed to follow the requirements of the program were eliminated from competition. 

As described by Neil Levine (1982), the program for the Grand Prix normally consisted of three parts: a brief introductory paragraph, known as the  chapeau-,  the main text, giving details of requirements; and a final section, giving overall dimensions of the building or site and the number and scale of drawings required. The main section set out requirements in terms of the major spatial elements and was organized hierarchically, beginning with the major rooms and ending with the subsidiary ones. 

It is straightforward to formalize even further and express architectural programs as collections of predicates that we want to be satisfied by a design, stated in the language of first-order logic. Here are some examples: 

larger (kitchen, 80) and smaller (kitchen, 120) 

warmer (kitchen, 65) and colder (kitchen, 75) 

ventilated (kitchen) 

daylit(kitchen) 

adjacent (kitchen, dining) 

FUNCTION 

9.10 

The strong, masculine Doric column and the slender, feminine Corinthian, as interpreted by Vignola,  Rules of the Five Orders,  1562 

It becomes part of the critic's task to evaluate these predicates for a given design proposal. 

In general, then, an architectural program describes an activity system and enumerates the component activities that are to be provided with shelter by the spaces of a building. It specifies how large the spaces need to be in order to accommodate their activities, the precise qualities of shelter that are desired, and the relationships of spaces that are necessitated by activity relationships. The basic roles of the building's physical subsystems (which the architect must design) are thus to supply the support, enclosure, circulation connections, light, warmth, and other things that the spaces listed in the program require. 

Modernism assigned a particularly crucial role to the architectural program. It was assumed that an abstract set of predicates could be formulated prior to the architectural work and independently of it, and that it was then the designer's task to satisfy these predicates as completely and efficiently as possible. This seems a little innocent now, since it conceives of social systems in an unrealistically static way, assumes a logical consistency that may be illusory, and ignores the tendency of buildings to change the very patterns that they were designed to accommodate. But the predicates of the program still provide an important starting point for critical reasoning about architectural possibilities. 

MEANING 

The theorists and critics of modernism have tended to focus their discourse on the programs of buildings and on the performances of buildings as physical systems, but in recent years there has been renewed interest in a third aspect of function—the roles that buildings and parts of buildings play in symbol systems.9 The philosopher Nelson Goodman (1985) has gone so far as to claim that "a building is a work of art only insofar as it signifies, means, refers, symbolizes in some way."10 

Vitruvius clearly recognized that buildings and parts of buildings function as symbols, and he attempted to elucidate the way they do this by telling a series of tales about the invention of the classical orders (figure 9.10). He began with the Doric: 

Wishing to set up columns in that temple, but not having rules for their symmetry, and being in search of some way by which they could render them fit to bear a load and also of a satisfactory beauty of appearance, they measured the imprint of a man's foot and compared this with his height. On finding that, in a man, the foot was one sixth of the height, they 

applied the same principle to the column, and reared the shaft, including the capital, to a height six times its thickness at its base. Thus the Doric column, as used in buildings, began to exhibit the proportions, strength, and beauty of the body of a man. 

What, exactly, is Vitruvius telling us here? Surely he cannot be saying (as some commentators have thought) that a Doric column depicts or describes a man: if so, it is a curiously imperfect attempt. He appears to be claiming, instead, that a Doric column exemplifies some characteristically masculine properties—particular proportions, an appearance of strength, and lack of adornment. 

Goodman (1976, 1984, 1985) has carefully distinguished denotation and exemplification as different varieties of reference.11 In denotation (which includes naming, description, and depiction), a symbol applies by pointing, in some way, to something. Thus, for example, "Parthenon" denotes a particular building in Athens, as does a picture of the Parthenon. But in exemplification, reference runs in the opposite direction, "from symbol to certain labels that apply to it or to properties possessed by it."12 The Doric column, then, exemplifies thickness and the strength following from that. The Doric column does not, however, literally possess the property of masculinity: it does so metaphorically, by virtue of its properties of thickness, strength, and plainness. In Goodman's terminology, exemplification of metaphorically possessed properties is "expression": the Doric column expresses masculinity. 

Vitruvius next considered the Ionic column: 

Just so afterwards, when they desired to construct a temple to Diana in a new style of beauty, they translated these footprints into terms characteristic of the slenderness of women, and thus first made a column the thickness of which was only one eighth of its height, so that it might have a taller look. At the foot they substituted the base in place of a shoe,-in the capital they placed the volutes, hanging down at the right and left like curly ringlets, and ornamented its front with cymatia and with festoons of fruit arranged in place of hair, while they brought the flutes down the whole shaft, falling like the folds in the robes worn by the matrons. 

He summarized the differences: 

Thus in the invention of the two different kinds of columns, they borrowed manly beauty, naked and unadorned, for the one, and for the other the delicacy, adornment, and proportions characteristic of women. 

Thus the Ionic column exemplifies slender proportions and delicate adornment, and so expresses femininity. 

Next, Vitruvius made a similar analysis of the Corinthian column: 

The third order, called Corinthian, is an imitation of the slenderness of a maiden,- for the outlines and limbs of maidens, being more slender on account of their tender years, admit of prettier effects in the way of adornment. 

Here we have even slenderer proportions, even prettier adornment, and so the expression of maidenliness. 

Finally, he traced the chain of reference one step further: 

The temples of Minerva, Mars, and Hercules, will be Doric, since the virile strength of these gods makes daintiness entirely inappropriate to their houses. In temples to Venus, Flora, Proserpine, Spring-Water, and the Nymphs, the Corinthian order will be found to have peculiar significance, because these are delicate divinities and so its rather slender outlines, its flowers, leaves, and ornamental volutes will lend propriety where it is due. The construction of temples of the Ionic order to funo, Diana, Father Bacchus, and the other gods of that kind, will be in keeping with the middle position which they hold; for the building of such will be an appropriate combination of the severity of the Doric with the delicacy of the Corinthian. 

Thus, by virtue of the expression of its columns, a temple alludes to the gender of the god to which it is dedicated: propriety demands that this allusion should be appropriate. In Goodman's terminology, this is a case of "mediated reference." 

9.11 

Architectural denotation: a seafood restaurant that depicts a fish 

In general, we can consider four basic varieties of reference by buildings and parts of buildings: denotation, exemplification, expression, and mediated reference. Very occasionally buildings may denote, as for example when a seafood restaurant depicts a fish (figure 9.11). Much more frequently they exemplify material properties, proportions, symmetries, and other formal properties, or functional characteristics such as strength or efficiency. Expression may follow from exemplification, and complex chains of mediated reference may develop. 

To deal with this, our critical language needs predicate symbols denoting the referential functions of architectural elements and subsystems. We might need to say, for example: 

exemplifies (column, strength) expresses (column, masculinity) alludes (column, Mars) 

The conditions for correct application of such predicates are not, however, likely to be as stable or straightforward to formulate as those for physical and programmatic predicates. We can assemble explicit facts and rules about how symbols work in a particular culture, and we can draw useful critical conclusions from these, but it would be foolhardy to assume that any set of such conclusions exhausted the meaning of an architectural proposal. In particular, the closed, artificial knowledge bases maintained by computer systems, as opposed to the knowledge bases of human critics who participate in a culture, are likely to provide only crude approximations to architectural meaning. 

FUNCTIONAL TYPOLOGY 

We have now seen how architectural elements and subsystems may perform a variety of physical, social, and symbolic functions. It follows that we can define types not only in terms of formal characteristics, but also in terms of functional characteristics. That is, we can classify the objects that we manipulate in architectural composition not only according to what they look like, but also according to what they are good for. 

There is considerable psychological evidence that functional classification of objects does play an important role in our thought processes. Duncker (1945), for example, noted the phenomenon of "functional fixedness"—the tendency to recognize certain uses of an object immediately, taking these to be characteristic of the object, while ignoring other possible uses unless these are explicitly pointed out. This suggests that we access our knowledge about the uses of things through a functional classification scheme. Krauss (1952) studied children's definitions of nouns and found that they were often functional in character: "A table is to sit at," "a book is to read," and so on. Nelson (1973) presented experimental evidence that a child "forms categories on the basis of function and generalizes to new instances on the basis of form." In their well-known study of concepts, Miller and Johnson-Laird (1976) concluded, on the basis of such evidence, that we tend to classify objects by function rather than by form. Johnson-Laird (1988) has summarized: 

When George Miller and I undertook an analysis of concepts, we soon realized that tables, unlike human beings, do not 

have a canonical shape: they come in a profusion of shapes. Moreover, you can recognize an object as a table even if it has a shape unlike any table you have ever seen. We were forced to conclude that an artifact can be identified as a member of a category, not because of any intrinsic aspect of its three-dimensional shape, but because its form, dimensions and other visible properties, whatever they may be, are perceived as appropriate for a particular function. You can see the possibilities inherent in the artifact. It is a table because it has a surface on which you could rest utensils. 

9.12 

Picasso's bull's head 

It is easy to see the practical advantages, in everyday life, of classifying objects according to what we can use them for. But, since function may vary with context, we must always be prepared to reclassify—to recognize that "this x will make a good y" if it is placed in some new context. Picasso elegantly demonstrated this when he made a realistic bull's head by juxtaposing the handlebars and saddle of a bicycle (figure 9.12). Later, so the story goes, he speculated that a resourceful mechanic might find it and remark, "This bull's head will make excellent handlebars and a saddle for my bicycle."1 The artist and the mechanic here deploy different languages that happen to have some vocabulary elements in common. In the artist's language these elements, when appropriately related, serve to depict parts of an animal. But in the mechanic's language these same elements, when related in a quite different way, play roles in a mechanical system. 

1

FUNCTIONALIST CRITICISM 

In chapter 1 we saw how aesthetic value might be defined in terms of form. An alternative, or perhaps complementary, approach is to define it in terms of the concept of function that has now been developed. We can take as our starting point analysis of some sentences that express judgments about physical objects.2 Consider, for example, sentences such as: 

This man is good. 

Here  good  is simply employed as a predicate. However, there is another common usage of  good  in English, exemplified by: 

2

This is a good knife. 

Here  good  is used not as a predicate, but as an adjunct to a noun. Now moral philosophers have given particular attention to the adjunctive use of  good,  and have pointed out that this is appropriate only under certain circumstances. 

Specifically, the standard argument goes,  good  can be applied adjunctively only to nouns that denote classes of objects about which we can rationally have expectations, as to what instances will look like, or do, or be used for.  Good  is applied when our expectations are satisfied to a greater than usual degree. Thus a good circle is an unusually well formed one, and a good knife is one that cuts unusually well: where types are characterized by form,  good  denotes well-formedness, and where types are characterized by function,  good  denotes superior performance. 

Thus functionalist criticism begins with some system of functional classification of artifacts, then expresses judgments about adequate performance of functions. A building might, for example, be judged a good, bad, or mediocre church. If later used for another purpose it might then be judged a good, bad, or mediocre theater, or warehouse. 

The language of functionalist criticism can be elaborated by introducing adjuncts that identify different kinds or dimensions of good performance. Thus we might speak of a sharp knife, a strong beam, or a thermally-efficient heat exchanger, but not (except in very unusual circumstances) of a thermally-efficient knife or a sharp heat exchanger. Modern engineering has introduced the additional refinement of numerical scales to express sharpness, efficiency, strength, and so on. 

A further and more doubtful step is to identify beauty with good performance. The tendency to do this can be traced back to Socrates. His views are recorded in Xenophon's  Recollections of Socrates  ( Memorabilia ). In the context of a discussion of the good and the beautiful, Socrates was asked (by Aristippus): "Is a dung basket beautiful then?" And he gave the reply: "Of course, and a golden shield is ugly, if the one is well made for its special work and the other badly." Later, he took up the issue with the armorer Pistias, and asked him: "How then do you make a wellshaped breastplate to fit an ill-shaped body?" Pistias forthrightly answered: "I make it fit; that which fits is well shaped." So Socrates drew the conclusion: "It seems to me then, that you do not speak of [a breastplate's being] well shaped in an absolute sense, but only in regard to its function." Finally, he suggested that architectural beauty may be understood in the same way: "To put it shortly, the house in which the owner can find a pleasant retreat at all seasons is presumably at once the pleasantest and most beautiful." 

This kind of attitude entered into modern architectural thought largely through the influence of the eighteenth-century Italian theorist Carlo Lodoli.15 According to Lodoli, "In 

architecture only that shall show that has a definite function, and which derives from the strictest necessity." Furthermore, ornament was to be strictly banished as functionally superfluous, and "architecture must conform to the nature of the materials." Thus beauty was taken to be a consequence of honest and direct response to necessity and to material. In our own century the architect/engineer Pier Luigi Nervi (1956) has very closely echoed these sentiments, demanding in buildings "a structural essence, a necessary absence of all decoration, a purity of line and shape" and claiming that "every improvement in the functional and technical efficiency of a product brings about an improvement in its aesthetic quality" (figure 9.13). 

Functionalist criticism may be not only evaluative, but also diagnostic. In other words, it may try to explain  why  an element or subsystem performs well or badly. Diagnosis is a matter of identifying relevant differences between the forms of elements or subsystems that perform as expected and those that do not. A room might be bad for some purpose because it is too small, and a beam might be good because it is made of particularly strong material. This requires an understanding of the relationships between form and function—an issue that I shall take up in the final chapter. 

9.13 

A "structural essence": roof structure by Pier Luigi Nervi with bending moment diagram superimposed to show how shape responds to structural necessity 

We have now seen how architectural vocabulary elements can be characterized both formally and functionally. Instances of a given vocabulary element have shape and material properties in common. The syntactic rules of a language of architectural form specify where in a composition such instances can occur. In these contexts they can play certain useful roles—their architectural functions. 

Functionalist criticism is concerned with how  well  architectural elements and subsystems perform their roles within a building. The function of a building as a whole is established by its program, so the performance of elements and subsystems must be evaluated relative to the program. Good performance is a matter both of adequacy in a role and of economy of means. 

In general, functionalist criticism takes an Aristotelian view of architecture: it deals with ends, and with the adequacy of means to those ends. The usual ends are to provide adequate space for specified activities, to achieve adequate performance of the structural system and other physical subsystems, and to exemplify, express, and allude in memorable ways. More concisely, in the famous words of Sir Henry Wotton, the ends of architecture are commodity, firmness, and delight. 

FUNCTIONALLY MOTIVATED DESIGN 

FUNCTIONAL INTERPRETATION 

In order to produce and justify designs that not only have desired formal properties but also satisfy specified practical requirements, a designer must be able to infer the functions of architectural elements and compositions from their formal properties. In other words, the designer must be able to produce functional interpretations of designs and must check these against the functional requirements set out in the problem formulation. The problem of functional interpretation may be stated more precisely as follows:  given  a composition in some language of architectural form  and  a critical language with predicates that ascribe function,  infer  functional descriptions (expressed in the critical language) of elements, subsystems, and the system as a whole. 

In everyday life, too, we often need to infer the functions of actual buildings and parts of buildings.1 In doing so we adopt what the philosopher Daniel Dennett (1987) has called a "design stance": we treat the building as an object designed to fulfill certain functions and try to infer what those functions might be. (This contrasts, in Dennett's terminology, with the "physical stance" that we adopt toward, say, an ocean wave: we treat it as obeying the laws of physics. And it also contrasts with the "intentional stance" that we adopt toward an organism: we treat it as possessing goals, beliefs, and rationality.) 

We could scarcely operate in the world if we were not able to recognize that doors are for entering buildings, that light fixtures are for providing illumination, and so on. In the case of familiar objects, we might simply rely on remembered associations of functions with forms, but this would not enable us to understand new and unfamiliar objects. Clearly we need, as well, some way to infer functions from forms. 

Derivation of functional inferences requires application of rules that relate observations about forms and locations of architectural elements to conclusions about their functions. These rules must encode knowledge of the conditions that the form of an element or subsystem must satisfy if it is to perform some specified function adequately, together with knowledge of how functional connections must be made. If an object satisfies these conditions, we can legitimately see it as an instance of the functional type in question. If an 

object is located under a beam, for example, and it is shaped and dimensioned for sufficient strength, we can legitimately see it as a column. 

When we have sufficient knowledge of such conditions we can produce functional interpretations of systems in compositional fashion, by considering the possible functions of the elements and the ways that they are related—much as we can establish the meaning of a sentence from the possible senses of its component words and the way they are put together. We can use the same rules to reason about how architectural elements must be shaped, dimensioned, and assembled in order to satisfy functional requirements. The rules enable us to explore the functional implications of form and the formal implications of function. 

In this chapter, then, I shall consider conditions of functional adequacy, ways to formulate them precisely, and use of knowledge about them in producing functional readings of designs and in the synthesis of design proposals. 

FUNCTIONAL ADEQUACY AND EQUIVALENCE 

A component of a system is functionally adequate if and only if its physical characteristics allow it to effectively perform its role within that system. Consider, for example, the story of Thomas Edison's invention of the incandescent light bulb. He first established the role of the filament as one of transforming inputs of electricity into outputs of light. Then he tested numerous candidate filaments until he found one that did not burn out immediately,- that is, until he found one that was functionally adequate. 

Two components are functionally equivalent when they both adequately perform a specified role. For example, we can replace the wheel of a car by a functionally equivalent spare wheel or the lead in a mechanical pencil by another lead or the blade of a knife by another blade. The use of functionally equivalent interchangeable parts in this way has become one of the cornerstones of modern industrial production. 

A conceptually more interesting possibility is that the replacement component, though functionally equivalent, has a different internal functional organization and physical form. Consider, for example, a cooking pot handle consisting of a metal shaft and an insulating grip: it could be replaced by a wooden handle which does not separate the functions of providing leverage and insulation in this way. To take a more complex case, an incandescent lighting fixture plugged into a 

wall socket and illuminating a room might be replaced by a fluorescent fixture, plugged into the same socket, and providing much the same illumination. Even more strikingly, architects sometimes produce alternative but apparently functionally equivalent proposals in response to the same context and requirements. Figure 10.1, for example, illustrates alternative "gothic" and "classic" proposals made by Schinkel for the Werdersche Kirche in Berlin. Notice that objects may be functionally equivalent in one context but not in another. In other words, they may be good for performance of different but overlapping ranges of actions. I can, for instance, use both a screwdriver and a kitchen knife to open a jam jar, but I cannot use the screwdriver to carve roast beef. 

10.1 

Architectural synonyms: plans of Schinkel's functionally equivalent proposals for the Werdersche Kirche in Berlin 

To claim that form follows function is to claim that some formal feature or quality of an object is necessary for functional adequacy: if the feature or quality is not present, then the object cannot perform the function we have in mind. For example, the ancient physician Galen claimed that the characteristic formal features of the human hand were necessary if it were to perform its functions adequately. In his treatise  On the Usefulness of the Parts of the Body 2 he first considered the necessity of the cleft shape: 

One and indeed the chief characteristic of a prehensile instrument constructed in the best manner is the ability to grasp readily anything of whatever size or shape that man would naturally want to move. For this purpose, then, which was better—for the hand to be cleft into many divisions or to remain wholly undivided? Or does this need any discussion other than the statement that if the hand remained undivided, it would lay hold only on the things in contact with it that were of the same size as it happened to be itself, whereas, being subdivided into many members, it could easily grasp masses much larger than itself, and fasten accurately upon the smallest objects? For larger masses, the hand is extended, grasping them with the fingers spread apart, but the hand as a whole does not try to grasp the smallest objects, for they would escape if it did; the tips of two fingers are enough to use for them. Thus the hand is most excellently constituted for a firm grasp of things both larger and smaller than itself. Furthermore, if it was to be able to lay hold on objects of many different shapes, it was best for it to be divided into many differing members, as it now is, and for this purpose the hand is obviously adapted best of all prehensile instruments. Indeed, it can curve itself around a spherical body, laying hold of and encircling it from all sides; it surrounds firmly objects with straight or concave sides; and if this be true, then it will also clasp objects of all shapes, for they are all made up of three kinds of lines, convex, concave, and straight. 

Next, he argued that two opposing hands are necessary for grasping large and heavy objects: 

Since, however, there are many bodies whose mass is too great for one hand alone to grasp, Nature made each the ally of the other so that both together, grasping such a body on opposite sides, are in no way inferior to one very large hand. For this reason, then, they face toward one another, since each was made for the sake of the other, and they have been formed equal to one another in every respect, a provision suitable for instruments which are to share the same action. 

Finally, he observed the necessity of variation in the sizes of fingers and of possession of an opposing thumb: 

Too steep: tiles slide off 

Too flat: does not drain 

10.2 

Choisy's analysis of the classical temple roof 

2 1 3 

Now when you have considered the largest objects that man can handle with both hands, such as a log or rock, then give heed, pray, to the smallest, such as a millet seed, a very slender thorn, or a hair, and then, when you have considered besides how very many bodies there are that range in size from the largest to the smallest, think of all this and you will find that man handles them all as well as if his hands had been made for the sake of each one of them alone. He takes hold of very small objects with the tips of two fingers, the thumb and forefinger, and slightly larger objects with the same two fingers, but not with just the tips; those still larger he grasps with three fingers, the thumb, forefinger, and middle finger, and if there are any larger yet, with four, and next, with five. After that the whole hand is used, and for still larger objects the other hand is brought up. The hand could act in none of these ways if it were not divided into fingers differently formed; for it was not enough in itself for the hand merely to be divided. What if there had been no finger opposing the four, as there is now, but all five of them had been produced side by side in one straight line? Is it not very clear that mere number would be useless, since an object to be held firmly must be either encircled from all sides or at least laid hold of from two opposite points? The ability to hold an object firmly would be destroyed if all the fingers had been produced side by side in one straight line, but as it is, with one finger set opposite the rest, this ability is nicely preserved; for this one finger has such a position and motion that by turning very slightly it acts with each of the four set opposite to it. 

Such analyses can be carried out not only of components in natural systems, but also of components of designed artificial systems. In  Physics  (Book II, Chapter IX), for example, Aristotle asked: "Why is a saw like this?" He then answered: 

In order that it may have the essential character of a saw and serve for sawing. This purpose, however, could not be served if it were not made of iron. So if it is to be a saw, and to do its work, it must necessarily be made of iron. 

The positivist architectural theorists and historians of the nineteenth century were fond of analyzing architectural form in similar fashion. Consider, for example, a classical temple roof (figure 10.2). In a famous analysis, Auguste Choisy (1899) suggested that such a roof could fail to provide shelter in two ways: if the pitch were too flat, then the water would not drain away,- but if the pitch were too steep, then the tiles would slide off. Therefore, he suggested, the physical property of pitch "is ruled by this double condition." 

FUNCTIONALLY MOTIVATED DESIGN 

These authors are all claiming, in effect, that the characteristic formal features and qualities of system components can be explained in terms of functions. But is this logically justified? 

Essentially, we are asked to accept that a given fact and two rules allow us to prove a second fact. The given fact is that, at a certain time  t,  a component c functions adequately in a system s. More concisely, we can write: 

Given fact     functions (c) 

The first rule asserts that, in the particular type of artifact under consideration, the action that yields a useful result depends on satisfaction of a particular condition—of sufficient hardness, for example. If the artifact functions adequately, we can conclude that the condition must be satisfied. More formally, we can write: 

Rule 1     functions (c) -&gt; quality (c) 

Note that  quality (c)  is not necessarily the only condition that must be satisfied: there might be an indefinite number of such conditions. A saw blade might need to satisfy conditions of sufficient hardness, sufficient sharpness, sufficient length, and so on. Furthermore, since different actions can yield the same result, different types of artifacts with the same function may need to satisfy different conditions: a welder's torch cuts by virtue of sufficient hotness rather than sufficient hardness. 

The second rule specifies a way to satisfy the condition  quality (c).  It asserts that, if formal feature / is present in component c at time  t,  then, as an effect, the predicate  quality (c)  is satisfied. We can write: 

Rule 2     feature (c, f)  -&gt;  quality (c) 

Hence, it is claimed, we can conclude that, at time t, the formal feature  f  is present in component c. Thus: 

Conclusion     feature (c, f) 

So we might, for example, paraphrase Aristotle's argument about the saw as follows: 

Fact     cuts (saw) 

Rule 1     cuts (saw) -&gt; hard (saw) 

Rule 2     material (saw, iron)    -&gt; hard (saw) 

Conclusion     material (saw, iron) 

Similarly, we might paraphrase Choisy's argument about the temple roof: 

Fact Rule 1 

Rule 2 

Conclusion 

shelters (roof) 

shelters (roof) —&gt; 

drains (roof) and 

not unstable (roof) 

pitch (roof, classicalangle)—&gt; 

drains (roof) and 

not unstable (roof) 

pitch (roof, classicalangle) 

When we lay them out this way, it is easy to see that the arguments are invalid: they involve the fallacy of affirming the consequent. But if we were to alter the second rule to a biconditional, in each case, the logical problems would disappear. Aristotle's argument would become: 

Fact     cuts (saw) 

Rule 1     cuts (saw) —&gt; hard (saw) 

Rule 2     material (saw,    iron)    &lt;-&gt;hard (saw) 

Conclusion     material (saw,    iron) 

Rule 2 now asserts that saying the saw is hard is equivalent to saying that the saw is made of iron. But rule 2 is now empirically false: we know that not only iron but many hard metals would satisfy the condition of sufficient hardness. Similarly, with Choisy, it would be implausible to maintain that  only  the classical angle provided stability and drainage. 

RELATING FORM VARIABLES TO FUNCTION 

This difficulty can be overcome by introducing appropriate variables to describe formal features. We might, for example, assume a variable  Metal  ranging over the hard metals available to Greek saw makers—bronze, iron, and so on. We claim that, as far as a Greek saw maker was concerned, saying that a saw was hard was equivalent to saying that it was made of metal: it could  only  be made of metal. We can now reformulate Aristotle's argument thus: 

Fact     cuts (saw) 

Rule 1     cuts (saw) —&gt; hard (saw) 

Rule 2     material (saw,    Metal)    &lt;-&gt;hard (saw) 

Conclusion     material (saw,    iron) 

or 

material (saw, bronze) etc. 

The conclusion (a valid one) is a disjunction formed by the values of  Metal. 

The rule on which we rely here expresses knowledge of a particular construction world—that of Greek saw makers. It 

specifies available ways to satisfy a condition of sufficient hardness in that construction world. The construction world of modern saw makers is quite different, encompassing many more ways to satisfy a condition of sufficient hardness. If we were to refer to  this  construction world instead, the range of Metal and the conclusion of the argument would be different. Modern saw makers have more ways to accomplish their purpose than their Greek counterparts: for them, form follows function less closely. 

10.3 

Constraints on roof pitch 

Choisy's argument can be reformulated in the same way by introducing a numerical variable Angle ranging from 0° to 90°, and two numerical constants  min  and  max  (figure 10.3). The argument is now written: 

Fact     shelters (roof) 

Rule 1     shelters (roof) -&gt; drains (roof) 

Rule 2     greater (Angle, min)    drains    (roof) 

Conclusion     greater (Angle, min) 

We can also argue: 

Fact     shelters (roof) 

Rule 1     shelters (roof) -&gt; not unstable (roof) 

Rule 2     less (Angle, max^not unstable    (roof) 

Conclusion     less (Angle, max) 

So we can validly conclude that the value of Angle must lie somewhere between  min  and  max.  These two constants are constraints on the value of the design variable Angle. Once again we have relied on knowledge of a particular construction world. A modern architect has available roofing materials that are more waterproof and more stable than Greek tiles, so roof angles are less constrained: they can range from flat to very steep. 

So far we have identified two ways in which a Greek temple roof could fail to perform its sheltering function: it might leak or the tiles might slide off. Further, we have identified conditions that must be satisfied in order  not  to fail in these ways and available means of satisfying these conditions. We could continue this line of investigation by considering other modes of failure and corresponding constraints. For example, the roof would collapse if the span were too great, so we must impose a constraint (again, relative to a particular construction world) on the variable Span. Eventually we could identify all the variables that make a difference to the functioning of the roof and associate appropriate constraints with each one. We could then claim that satisfaction of these constraints is practically sufficient to guarantee that a roof will be functionally adequate. In other words, if the constraints are satisfied, we have no reason to believe that the roof will 

fail. Of course our knowledge might be incomplete, and the roof might fail anyway in some unexpected way, but we cannot do better than draw conclusions from the best knowledge that we have. 

Now it is possible to state some general principles governing the relationship of form and function within a particular architectural language. Generally, an architectural language establishes a repertoire of forms (the vocabulary) that an architect can use, and the syntactic rules of that language specify possible contexts of use. An architect needs to understand the useful roles of vocabulary elements in their possible contexts: a waterproof triangular prism provides shelter when placed over an interior, a cylinder of strong material provides support when placed under a beam, and so on. For each vocabulary element, possible context, and role in that context, there are conditions of functional adequacy that can be expressed as constraints on the values of form variables. Thus full characterization of a vocabulary element requires specification not only of essential formal properties, but also of possible contexts of use, roles in those contexts, and conditions of functional adequacy that must be satisfied. The classical roof type, for example, is characterized by its symmetrical, triangular, prismatic form, by its location above an interior, by its role in that location of providing shelter, and by constraints on pitch and span. 

Constraints may be more or less difficult and expensive to satisfy. A vocabulary element is appropriate for a particular role when the constraints can be satisfied more easily and inexpensively than the constraints applying to other vocabulary elements in that role. A vertical rectangle is a more appropriate form for the section of a wooden beam than a horizontal rectangle because the vertical rectangle will satisfy the condition of adequate strength with use of appreciably less material. Similarly, a symmetrical form is more appropriate for an axially loaded freestanding column than an asymmetrical one. The syntactic rules of an architectural language usually encode knowledge of appropriateness by restricting usage of vocabulary elements to contexts in which they efficiently serve practical purposes. Thus in most architectural languages, wooden rectangular prisms that are not too long and not too shallow serve as beams, and concrete cylinders that are not too thin serve as columns. 

a. Vase 

0  b. Ambiguous 

0  c. Cup 

0  d.  Ambiguous 

e. Bowl 

10.4 

Types of containers characterized by their ratios of width to height (after Labov, 1973) 

ADAPTABILITY AND FUNCTIONAL EXPRESSION 

In effect, constraints expressing conditions of functional adequacy establish limits on the adaptability of a vocabulary element to fit different contexts within a building. That is, they limit the extension of the type. A beam cannot be made too shallow to fit and play its role in the space available or it will fail to provide support, and a classical roof cannot span too great a distance to shelter a large space underneath. 

Sometimes constraints of this nature establish distinctions between subtypes of artifacts. Consider, for example, the containers shown in figure 10.4. They vary in their ratios of width to height. Vases need to be narrow in order to hold flowers upright, so people tend to classify 10.4a as a vase. Cups need to be short for comfortable holding in the hand, so people tend to classify 10.4c as a cup. And bowls need to be wide to present the surfaces of their contents, so people tend to classify 10.4e as a bowl. The ratios in 10.4b and 10.4d do not clearly exemplify narrowness or shortness or wideness, so these containers do not clearly express their functions, and people find them difficult to classify. Similarly, functionally expressive architecture develops when elements are fashioned to not only satisfy conditions of functional adequacy, but also to do so in a way that clearly exemplifies the qualities on which adequacy depends. A building with cylindrical columns and rectangular beams is more functionally expressive than a building with rectangular columns and cylindrical beams, though both may be functionally adequate. 

In their book  Language and Perception  Miller and Johnson-Laird (1976) suggest that joint use of formal and functional criteria is generally characteristic of human mechanisms of object classification and recognition. They consider, for example, a dictionary definition of "table": 

An article of furniture supported by one or more vertical legs and having a flat horizontal surface on which objects can be placed. 

They note that this has two parts: "one having to do with the conventional function of tables, the other with their perceptual appearance." If we consider only the formal side, an object X must meet the following conditions for being an instance of a table: 

X is an object. 

X is movable, connected, and rigid. 

X has a flat surface. 

There are parts of X that extend out from the side opposite to the flat surface. 

The functional side may be elaborated: 

X is a table 

10.5 

Instances of tables (the last two after Carelman, 1971) 

A table is used for working or eating or playing games; the top is used to support various smaller objects required in the course of those activities. 

Conditions of functional adequacy weld the two sides together: 

A table should have a worktop, a surface that is horizontal so that objects will not roll or slide off and flat so that objects can stand on it. Moreover, the surface would be useless if it were not firm and at a convenient height from the floor (not horizontal upside down), so rigid legs are required to support it. 

They conclude that "the schemata of many artifacts weld together form and function. ... It would be a mistake to rely wholly on one or the other." 

In an elaboration of this account, Miller (1977) has proposed that tables might be characterized in the following way: 

table (X) if formoftable (X) 

and 

functionoftable (X) is possible 

where the definition of  formoftable  is in terms of formal characteristics, and the definition of  functionoftable  is in terms of functional characteristics. Note the introduction of the modal operator  possible:  for object X to be a table it is necessary for it to have the specified form, but it need not actually function as a table. Such functioning must merely be possible. (This accords with the view of function that I developed earlier.) You know that  functionoftable (X)  is possible, relative to the given circumstances, if you can see how to use X as a table. Conversely, you know that  functionoftable (X)  is not possible if you can see a reason why X cannot be used as a table. In the context of design, the knowledge that is invoked to determine whether  functionoftable (X)  is possible will be knowledge of conditions of functional adequacy in the assumed construction world. The instances of tables shown in figure 10.5 illustrate this definition. The first is unquestionably a table. The second is formally a stone slab, but it provides a flat surface to support small objects and therefore serves as a table. The third is formally a table, but one that is unlikely to function very effectively: we might say that it is not a good table. The fourth is formally and functionally a table, but in any reasonable construction world it would fail by falling over. 

The surrealist "crisis of the object" that Andre Breton identified in  La Surrealisme et la Peinture  (1927) was generated by subverting artifact classifications formed in this way. 

2 1 9 

FUNCTIONALLY MOTIVATED DESIGN 

Meret Oppenheim's furry teacup and spoon took the shapes of familiar household items and suggested a use, but flaunted failure to satisfy an obvious condition of functional adequacy. Maurice Henry swathed a violin in bandages to make it conspicuously unplayable and called the piece  Homage to Paganini.  Marcel Duchamp signed a urinal to satisfy a necessary condition for that object to be a work of art and challenged viewers to consider whether that condition might also be sufficient. Magritte depicted a typical pipe and inscribed the definition "This is not a pipe." Architects can play similar games by using elements that exemplify certain shape or material properties to suggest a function while in other respects exhibiting denial of that function: at Williams College, Charles Moore made Ionic capitals that are suspended from a cantilevered balcony and that float above shafts that stop a few inches short. 

ELEMENT SELECTION PROBLEMS 

In general, then, architectural vocabulary elements are characterized in terms of their essential formal features, their possible contexts, their functions in those contexts, and the conditions that they must satisfy in order to function adequately. Formal essences are established by a designer's commitment to particular formal qualities (e.g. symmetry) and by knowledge of the formal possibilities inherent in the materials and processes available in the relevant construction world. If lathes are available for turning wood or metal, for example, then various solids of revolution can become part of an architectural vocabulary. Functional essences are established by the capacities of elements to perform actions and the designer's understanding of those actions as means to serve architectural ends. Possible contexts, as expressed in syntactic rules, follow from conceptions of appropriate use and possibilities of physical fit. And conditions of functional adequacy can be established by observation and experiment. 

Where there are severe technological restrictions, as in ancient Greek society, architectural vocabularies tend to be relatively small and stable. But where construction worlds are technologically advanced, it becomes possible for architectural vocabularies to grow large. The industrial revolution, in particular, brought about an enormous expansion of architectural vocabulary as new materials and processes became available. Large vocabularies typically contain functionally equivalent elements that differ in form (much as a spoken language has synonyms) and formally equivalent elements that function differently (as a spoken language has 

homonyms). A column supporting a beam might be round or square (synonym); a vertical duct might be visually indistinguishable from a column (homonym). 

When a purpose can be served by choice of different forms, and when equivalent forms can serve different purposes, a designer must choose a particular way of relating form and function in much the same fashion that a poet must choose a particular way of relating sound and sense. An architect, like a poet, can make choices that yield desired formal qualities such as rhythm and symmetry. Furthermore, since functional equivalence (like synonyms) are never exact, these choices produce subtle but important inflections of functionality and expression. They can be made with rhetorical intent, to produce emphasis, irony, and so on. 

Considered more broadly, this is an issue of appropriate architectural diction—one that was of great concern to the architectural theorists of the nineteenth century, who were faced with the enormous vocabulary expansion resulting from the industrial revolution. Viollet-le-Duc adopted the stance of a language reformer, advocating a new diction of vivid structural expression, boldly expressed cast iron, and dramatic diagonals (Summerson, 1963). Louis Sullivan, in  Kindergarten Chats  (1918), railed against what he saw as the chaotic diction of his contemporaries: 

Imagine for instance: 

Horse-eagles. 

Pumpkin-bearing frogs. 

Frog-bearing pea vines. 

Tarantula-potatoes. 

Sparrows in the form of whales, picking up crumbs in the street. 

If these combinations seem incongruous and weird, I assure you in all seriousness that they are not a whit more so than the curiosities encountered with such frequency by the student of what nowadays passes for architecture. 

ELEMENT DESIGN PROBLEMS 

Element design problems arise when an architect wants to use an instance of a particular type of element to play a particular role in a particular context within a composition. The task is to choose values for the form parameters such that the conditions of functional adequacy in that role are satisfied and a fit to the context is achieved. The square wheel and the square peg in the round hole both fail as solutions to element design problems, but for different reasons: the square wheel does not work (violates a condition of functional adequacy), and the square peg does not fit. 

An element design problem is formulated by establishing the form parameters for which values must be chosen in order to specify an instance together with the conditions that the chosen values must satisfy. For example, the Greek saw-maker's blade design problem might be stated: 

choose     Material 

such that    hard  (Material) 

Similarly, the temple roof design problem might be stated, in more mathematical format: 

choose     Angle 

such that    min &lt;  Angle     &lt;    max 

The designer of a rectangular beam of given material, to carry a given load over a given span, must choose values for section  Depth  and  Width  such that maximum allowable tensile, compressive, and shear stresses in the material are not exceeded. 

An element design problem is solved when it can be demonstrated that chosen values for the form parameters satisfy the specified conditions. The demonstration might be accomplished by prototype testing—trying out saw blades on a block of wood or loading a beam to destruction, for example. More often it is accomplished by reasoning: facts and rules in the knowledge base about the construction world are used to prove the assertion that the chosen values satisfy the requirements. In practice, the knowledge base may or may not provide the means necessary to derive this proof, and the actual derivation may be a trivial or a complex process. 

Different types of elements may perform the same function but, by virtue of their essential internal structure, have different kinds and levels of adaptability to context. Consider, for example, the two classical types of arched openings shown in figure 10.6. The Colosseum motif has one degree of dimensional freedom and is best adapted to vertical bays. It can vary in overall size, but it cannot vary much in proportion unless the springing-points of the arch are also allowed to shift vertically, thus changing the character of the opening and possibly disrupting horizontal alignments in a composition. By contrast, the Palladian motif (as used in the Basilica at Vicenza) has two degrees of dimensional freedom and is equally well adapted to horizontal or vertical bays. Variations in proportion can be accomplished by adjusting the widths of the side bays, while leaving the central arched opening unchanged. 

10.6 

The adaptability of motifs 

10.7 

Pugin's vision of a "classical" temple adapted to the damp English climate (after  The True Principles of Pointed or Christian Architecture,  1841) 

10.8 

Economy of means: the brick piers in the elevation of Louis Kahn's Phillips Exeter Academy Library are no thicker than they have to be 

224 

Sometimes the interrelationships of design variables established by the type definition, together with the requirements of fit to context and functional adequacy, overconstrain an element design problem, so that no solution is possible. Pugin (1841) argued, for example, that the classical temple roof type could not be adapted to the damp English climate, since the minimum angle needed for drainage in this context would produce a form that would no longer count as classical (figure 10.7). Either the formal or the functional essence of the type would have to be violated. Similarly, engineers often face situations where the span and loading of a beam are given, but the available space is not sufficiently deep to accommodate a beam that would be functionally adequate. The problem must be redefined by lightening the load, shortening the span, increasing the available depth, or choosing a different type of beam section that is better adapted to the given conditions. 

Occasionally the requirements will so constrain the problem that just one solution is possible. In this case, in a strong sense, form follows function. More often there will be many feasible solutions, and we need some way to choose between them. Since resources needed to realize a design, such as steel, land, and money, are usually scarce relative to our potential uses for them, it makes sense to apply the principle of economy of means: a designer usually seeks the solution that minimizes use of some scarce resource (figure 10.8). Hannes Meyer forcefully phrased this principle at the opening of his manifesto "Building" (1928). "All things in this world," he wrote, "are a product of the formula: (function times economy)." Design, then, became a matter of organizing building materials into "a constructive whole based on economic principles." This was not an "aesthetic" but a "biological" process: "Thus the individual shape, the body of the structure, the colour of the material and the surface texture evolve by themselves and are determined by life." 

Meyer's vision of an inexorable logical process leading to one "best" solution has been realized, in limited contexts, by computer programs that search the whole universe of potential solutions for those that satisfy feasibility requirements and minimize some objective function defined on the design variables.4 It is often possible to use such programs, for example, to minimize the amount of material in a structural member or the total floor area of a plan or the total thermal load of a building envelope. Techniques of differential calculus, linear and nonlinear programming, and dynamic programming are typically used to produce optimal solutions. 

THE LOGIC OF ARCHITECTURE 

Meyer maintained that it was an absurdity to talk about this kind of design in terms of aesthetics at all: "If a building provides adequately, completely, and without compromise for its purpose it is a good building, regardless of its appearance" (Mumford, 1952). But other advocates of optimal design have argued that strict attention to economy of means will automatically yield beauty. The nineteenth-century functionalist theoretician Horatio Greenough, for example, wrote5: 

If we compare the form of a newly invented machine with the perfected type of the same instrument, we observe, as we trace it through the phases of improvement, how weight is shaken off where strength is less needed, how functions are made to approach without impeding each other, how straight becomes curve, and curve is straightened, till the straggling and cumbersome machine becomes the compact, effective, and beautiful engine. 

With deft irony, though, Thorstein Veblen suggested that Greenough's principle might be inverted. In  The Theory of the Leisure Class  (1899) he proposed that "articles are to an extent preferred for use on account of their being conspicuously wasteful; they are felt to be serviceable somewhat in proportion as they are wasteful and ill adapted to their ostensible use." He went on to explain that (at least in some social contexts) conspicuous waste may be an effective way to establish heightened social status, and hence may be taken as a design objective. 

However the objective is defined, the task of element design is to specialize a general concept appropriately to a given physical context and role within a system. The values chosen for design variables must at least satisfy known feasibility constraints. And, where there are multiple feasible solutions, additional criteria may be adduced to distinguish between better and worse ones. The designer's task then becomes one of refining and perfecting, either by trial-and-error or through use of formal optimization techniques. 

MULTIFUNCTIONALITY 

Elements are often used, in architectural compositions, to play several different roles simultaneously. Windows, for example, are usually expected both to provide light to an interior and to prevent heat loss from an interior. If they are large they tend to provide good lighting at the expense of thermal efficiency, but if they are small they tend to achieve thermal efficiency at the expense of lighting quality. The designer's task, then, is not just to specify form parameters that result in optimal lighting, nor is it just to specify form 

parameters that result in optimal thermal performance, but to find a solution that responds to  both  objectives. 

One common approach to multi-objective element design problems is to establish rules for trading one objective off against another, then to seek an optimal balance. A second approach is to establish thresholds of acceptability, so that all the objectives except one are converted into constraints. Thus a designer might seek optimal lighting subject to maintaining some acceptable level of thermal performance, or, conversely, the objective might be optimal thermal performance subject to maintaining some acceptable level of lighting. Tradeoff ratios and constraints may shift according to conditions prevailing in the construction world. In cold climates where heating fuel is scarce, it is likely that windows will be made small to minimize heat loss, and poor lighting conditions will be accepted. But in temperate climates, where little heating is required, window sizes are less constrained. 

10.9 

Evolution and functional articulation: a fossil trilobite with many similar legs and its modern crab descendent with fewer legs adapted to specialized roles (from Simpson, 1967) 

A more subtle approach than either of these is to look for ways to vary parameters such that performance in one respect is improved without corresponding degradation in other respects—in other words, to explore sets of Pareto-optimal6 solutions. 

FUNCTIONAL ARTICULATION 

Instead of using a single multifunctional element to play a variety of roles, a designer may decide to let several different elements play these roles individually. A window shutter, for example, might be replaced by the combination of a blind to provide visual privacy and an air conditioner to provide ventilation. Where there is a high level of articulation into distinct components, there is greater opportunity for optimally specialized form to emerge. In  Parts of Animals,  for example, Aristotle noted that in some insects the proboscis functions both as a tongue and a sting, while in others these functions are articulated. He commented: 

It is better, when it is possible, that one and the same organ should not be put to dissimilar uses; that is, there should be an organ of defence which is very sharp, and another organ to act as a tongue, which should be spongy and able to draw up nourishment. And thus, whenever it is possible to employ two organs for two pieces of work without their getting in each other's way, Nature provides and employs two. Her habits are not those of the coppersmith who for cheapness' sake makes you a spit-and-lampstand combination. Still, where two are impossible, Nature employs the same organ to perform several pieces of work. 

A tendency toward increasing functional articulation and specialization of parts may sometimes be observed in the evolution of organic forms, and biologists know this as evolution in accordance with "Williston's law" (Simpson, 1967). Figure 10.9, for example, compares a fossil trilobite with one of its modern crab descendents. The trilobite has many very similar legs, and within each leg the several segments are similar. The legs of the crab, on the other hand, are adapted in quite different ways for their various specialized roles in locomotion and grasping, and within each leg the forms of the segments vary according to their respective positions and roles. 

The Pantheon, Rome 

Saint Peter's, Rome 

Saint Paul's, London 

10.10 

Functional articulation of domes 

Similar developments can also be observed in architecture. Consider, for example, the historically successive domes of the Pantheon in Rome, Saint Peter's in Rome and Saint Paul's in London (fig. 10.10). All three domes are at a vast scale and simultaneously perform the functions of enclosing an interior space, providing top-lighting to that space, and serving as a landmark in the heart of a great city. The dome of the Pantheon is a massive, unarticulated single masonry shell, with a simple oculus cut at the center to provide light. This shell performs all three of the functions. The dome of Saint Peter's is a good deal taller, and in this respect it is better adapted to the landmark function. It is also slightly more articulated; the lower part is a single, thick masonry shell as needed to resist the thrusts at the base, but the upper part is articulated into distinct inner and outer shells, which respectively enclose the interior space and give an appropriate exterior profile. Sir Christopher Wren took Saint Peter's as his model, but further articulated the dome of Saint Paul's into three distinct subsystems. Enclosure of the interior is accomplished by means of a relatively shallow masonry shell that carries just its own weight. The heavy stone lantern is supported by a separate brick shell, the elongated catenary shape of which is structurally advantageous for a concentrated load at the center, and which gives dramatic elevation to the lantern. The outer dome is a relatively light timber structure that achieves a greater ratio of height to span than would be possible in masonry without the introduction of buttresses or very heavy reinforcement. 

In his famous "5 points d'une architecture nouvelle" (1927), Le Corbusier explicitly proposed a high level of functional articulation and optimal specialization of components as an aesthetic principle (figure 10.11). He wrote: 

10.11 

Le Corbusier's "five points 

2 2 8 

THE LOGIC OF ARCHITECTURE 

In order to solve a problem scientifically, you first have to identify the separate elements. In a building, therefore, you can immediately distinguish between the supporting and non-supporting members. Instead of the earlier kind of foundations, on which the building rested without calculating the stresses, we install individual pile foundations, and instead of walls, individual supports. The supports and their foundations are worked out exactly to meet the loads imposed on them. These supports are spaced out evenly and deliberately, without taking the individual arrangement of the house into account. 

Of the new separation of structure from plan, he commented further: 

The system of supports rise from the ground to the roof, carrying the floor slabs. The partition walls can be situated wherever they are needed, at will, since each storey is completely independent of all the others. There are no more bearing walls, only membranes of whatever thickness is required. What results from this is complete freedom to arrange the plan as you wish, freely deploying the means at your disposal. 

Finally, of apertures in the facade, he noted: 

By cantilevering the floor slab out over the supports like a balcony, all around the house, you move the whole facade away from the supporting structure. You take away the load-bearing nature of the facade and you are able to extend the windows as far as you like. 

An architect, then, can choose either a highly articulated architectural vocabulary of functionally and formally specialized elements or a less articulated vocabulary of more broadly useful elements. An articulated vocabulary can be deployed to produce functionally expressive compositions, while a less articulated vocabulary invites an architectural rhetoric of ambiguity. 

COMPOSITION PROBLEMS 

Composition problems arise when an architect must choose, adapt, and arrange elements to satisfy specified formal and functional requirements. In bottom-up composition the architect begins with elements of known form and function. Grammatical rules specify various useful relationships of elements and subsystems—how to put them together in ways that establish functional connections. The task is to build up a system that, taken as a whole, functions in the required ways. The potential difficulty is in finding the right ways to build up high-level functions from lower-level ones. For example, an architect might want to compose given rooms 

into a plan, or given appliances into a kitchen layout, or given structural members into a frame, or given electrical components into an electrical system. 

Recall that the half-hexagon table grammar which we considered in chapter 8 structures a bottom-up design process. If we now take account of the functions of tables, and the functional connections that we might want to establish between them, we can see how the rules specify useful ways to put tables together. Rule 1 provides for the formation of long work benches, rule 2 provides for the formation of large conference groupings, and rule 3 provides for the formation of small conference groupings (figure 10.12). Combinations of these rules result in various mixtures of these basic functions. 

Although these functional ends might be achieved in many different ways, using differently shaped tables in different relationships, this language can be characterized by the very particular formal means that it provides for doing so. Rule 1 and rule 2 together provide for formation of straight lines of tables, meandering lines, and loops. Rule 3 allows tables to be doubled, where necessary. The spatial relationships of newly added tables to their predecessors are such that groupings with two-fold, three-fold, and six-fold dihedral symmetry frequently emerge. Rotational and frieze symmetries are also possible. Thus an architect working with this language produces solutions with characteristic formal qualities. A language of, say, square tables placed edge to edge would yield solutions with different rhythms and symmetries. 

In top-down composition the architect begins with a concept of the form and function of the system as a whole and has to work out the details. Grammatical rules specify useful internal organizations for subsystems—how to meet interface requirements and conditions of functional adequacy that have been established at a higher level. The task is to refine the design to the point where the forms of the lowest-level elements are fully specified and their functional adequacy can be demonstrated. The potential difficulty is in finding realizable designs for functionally adequate lower-level elements, or in finding a way to detail a schematic design using available "target" lower-level elements. For example, an architect might begin with the footprint of a building and go on to work out detailed internal room arrangements. Or a structural engineer might begin with a single-line schematic layout of a structural frame and then work out member sizes and jointing details. 

_ 

10.12 

Rules of the half-hexagon table grammar specify useful ways to put tables together 

10.13 

Structural roles of entablature, column, and pedestal 

10.14 

Capitals play the role of transition elements between rectangular entablature and circular column 

The classical column grammar that we considered in chapter 8 structures this sort of design process. The basic concept of high-level functional organization, as established by the first rule, is that a horizontal structural member (the entablature) distributes loads to a vertical structural member (the column), which carries them down to a foundation resting on the ground (the pedestal). These actions are illustrated in figure 10.13. Each of the three subsystems must be detailed to satisfy conditions of functional adequacy in their roles, and rules of the grammar specify how to do this. A second rule, for example, specifies how a column may be articulated into an organization of base, shaft, and capital. The designer must shape the capital for the role of gathering the load from the rectangular entablature and concentrating it on the cylindrical shaft, size the shaft to carry the specified load, and shape the base to distribute the load from the shaft evenly onto the bearing surface of the pedestal. The rules suggest three basic ways to shape the capital so that it forms a graceful transition from a square top to a circular bottom: the Doric way, the Ionic way, and the Corinthian way (figure 10.14). Further rules suggest appropriate ways to shape the base, and so on. 

When the Palladian villa language is functionally interpreted, we can see that its grammatical rules structure a top-down process of working out the details of room arrangement, circulation, and structural support (figure 10.15). First, the designer must choose a gridded footprint that provides the right amount of floor area and satisfies requirements of site and budget. Next, this must be developed into a schematic room layout. The rules allow considerable freedom at this stage, so that villas can be individualized and precisely adapted to the needs of particular clients. Finally, the rules specify how to develop the  poche  in a standard way to assure that the requirements of structural support, convenient circulation, ventilation, and natural light are satisfied. The rules also assure the formal property of bilateral symmetry (essential to this type) and allow for extensive variations on the theme of harmonic room proportioning (a way of distinguishing instances within the type). 

In his "five points" Le Corbusier demonstrated how the introduction of functionally equivalent formal alternatives to the Palladian elements structured a different process of top-down plan refinement, leading to exploration of different formal themes (figure 10.16).7 The footprint is punctuated by a grid of columns rather than subdivided by a grid of wall zones. Plan layout problems are solved by freely instantiating, translating, and rotating wall segments, rather than by 

concatenating grid cells. And there is no standard, symmetrical way to assure adequate circulation, lighting, and ventilation: The designer must work out these details in a way that forms appropriate connections between the features of the particular site and the spaces articulated in the plan. Just as Palladio explored the formal and functional possibilities of his language in a series of villa compositions, so Le Corbusier explored the potentials of  his  free-plan language in a sequence of compositions from the Domino House to the Villa Savoye. 

In general, if we approach architectural composition in bot-tom-up fashion, we rely on our knowledge of the formal and functional characteristics of given architectural vocabulary elements to suggest feasible and useful ways of putting them together in compositions. Conversely, if we approach design in top-down fashion, we rely on our knowledge of formal and functional characteristics to suggest appropriate choices and adaptations of elements to provide given functions in given contexts. In either case, our knowledge of how to select, shape, and put things together to serve architectural purposes can be expressed in the form of shape rules. We can understand the left sides of such rules as specifications of the architecturally interesting shapes in an evolving composition—those that the designer should look for and pay attention to. They are interesting because they can be developed further to accomplish potentially useful subgoals, and the right sides specify how to carry out this development. Thus the rules of an architectural grammar relate compositional means to formal and functional ends. 

A given functional problem can usually be solved within several different architectural languages (as we saw from Schinkel's proposals for the Werdersche Kirche), though not necessarily with equivalent ease or with the same economy of means. The rules of a given language may allow many ways to satisfy a specified set of functional requirements, thus providing the architect with freedom to explore alternative solutions with varying formal and symbolic qualities. Or the rules may rigorously restrict formal directions, as in strict classical architecture or the late work of Mies van der Rohe. 

The rules of an established language can be changed by introducing new elements to play established roles, as Le Corbusier did in his "five points," or by using old elements in new ways, as when Alberti combined the temple front with the triumphal arch to create a new language of Renaissance church facades. Figure 10.17 shows how Alberti deployed classical vocabulary elements inherited from antiquity. Rules 1, 2, and 3 reflect ancient usage in temples and triumphal arches, and rule 4 represents Alberti's extension of this usage to provide a solution to the problem of giving a classical facade to a church with a wide central nave and narrow flanking aisles. Figure 10.18 illustrates the motifs that develop from the rules of usage. 

Alberti's innovation, here, was to use a triumphal arch  as  a church front. It fits into the context where a church front 

10.17 

Rules of usage: rules 1 to 3 specify traditional Roman usage, and rule 4 specifies Alberti's extension of it 

10.18 

Combinations allowed by Alberti's rules of usage 

would normally be and assumes the church front's functional connections. Similarly, a modernist might use a metal pipe  as  a handrail—fitting it into a context where a handrail would normally be, so that it assumes the handrail's functional connections (and detailing it to proclaim "this is not a pipe"). The success of such ploys depends, of course, on the element's functional adequacy in its new role and context. The triumphal arch succeeds for Alberti because it has the requisite tripartite subdivision and because it has the opening in the right place. The metal pipe succeeds for the modernist because it is long, graspable, and smooth. In effect, such successes modify the syntax of an architectural language by allowing a new alternative on the right side of a shape rule. 

Thus architectural languages evolve, but not arbitrarily. The strict classical language, for example, does not create contexts in which the flying buttress serves a structural purpose, so there was no compelling reason to introduce that element into ancient classical architecture. But the gothic language creates contexts that demand something like a flying buttress to resist lateral thrusts: hence Choisy's famous remark that the flying buttress was not invented, but imposed itself. When Sir Christopher Wren designed Saint Paul's Cathedral within the classical language, but gave it a dome that produced lateral thrusts, he introduced flying buttresses to play the role of resisting them—thereby extending the strict classical language. 

From a functional viewpoint, then, the rules of an architectural language are not just arbitrary restrictions on the application of shape operators. They are, more positively, expressions of knowledge about how to make available objects appropriately serve purposes in buildings. It is rarely the case, however, that requirements for formation of functional connections uniquely determine where an element must be located: a column might function properly if located at any one of several positions under a beam, and a window might function properly if located at any one of several positions in a wall. Under these circumstances, the rules of usage may allow arbitrary choice within the functionally defined limits, or (more commonly) they may specify location according to formal principles of centering, alignment, rhythm, symmetry, and so on. 

A useful distinction can be drawn between "strong" and "weak" rules of usage according to the amount of functional knowledge that they express. In general, grammars consisting of strong rules have narrowly specialized application but allow confident, efficient solution of design problems, while 

grammars consisting of weak rules have wider application but promise less in the way of useful results.8 The classical column grammar and the Palladian villa grammar (which were discussed in chapter 8) are examples of strong grammars: they tell precisely how to design specialized types of artifacts. At early stages in design processes, though, architects often use vocabularies of abstract shapes and weak rules for putting them together. A particular shape, for example, may indicate nothing more specific than "square-shaped thing." Since "square-shaped things" can be used for many different purposes in buildings, rules providing strong guidance about placement are not available: the architect must make arbitrary choices or fall back on general formal principles. Usually, as the design process progresses, shapes acquire more precise references in the construction world, contexts within the composition become more precisely and completely defined, and stronger systems of rules come into play. 

Conventions of depiction and interpretation usually reflect the strength of the grammar that is being used. An early representation of an evolving design, such as a quick line sketch, typically specifies so few properties that little knowledge of conditions of functional adequacy is brought into play, and function consequently remains ambiguous. Thus a creative designer can legitimately see shapes as many different things, which evoke different expectations about behavior and possible functions and lead further development and critical discussion in different directions. This is not just an idle game. At this stage the designer is most interested in ranges—the uses that are not inconsistent with a given shape and the shapes that are not inconsistent with a given use. The design is full of unbound variables and so serves as a framework for speculation about possibilities. 

As the design develops, more variables are bound so that properties are specified more precisely and in more detail, with the result that functional interpretations become correspondingly better defined, and situations demand more specific responses. The designer's task becomes progressively less speculative and more one of responding correctly to the precise imperatives of role and context. Eventually, creative speculation about possibilities within the framework of a weak grammar evolves into technical problem-solving within the framework of a strong grammar. 

In one sense this view of rules of usage is consistent with Julien Guadet's (1894) academic notion that to compose "is to make use of what is known." But Guadet placed his faith in universal first principles and in universal rules by means 

of which the new could be deduced from the known. Here I have suggested that design rules are much more contingent—that designers both apply and construct them, in much the same way that courts both apply and construct the law by engaging specific contexts of application. 

CONCLUSION 

At the beginning of this essay I considered architectural composition at the atomic level—the level at which geometric primitives and operators in a design world establish an algebra. Then, at a molecular level, I demonstrated how languages of architectural form can be embedded in such algebras. Finally, I have shown how an architectural grammar may be regarded as a summary of an architect's current knowledge of the elements available to create buildings (the vocabulary), and of how to make appropriate use of them for that purpose. Formally, design is execution of a computation in a shape algebra to produce required shape information, and the rules of a shape grammar specify how to carry out that computation. 

These rules encode knowledge of form, function, and the relationship of the two. Essentially, a designer knows that, by virtue of their characteristic shape and material properties, certain types of objects can appropriately by used for certain purposes by being placed in certain contexts. What an object can be used  as  determines the type of thing it  is:  its architectural essence is its function together with the the context, shape, and material properties necessary for performance of that function. Contexts for its use (as specified by rules of usage) are established by the rules of usage of  other  types of elements with which it forms functional connections. 

The left sides of shape rules define the recognizable situations for which the designer should watch out, to which attention should be paid, and to which response should be considered. Due to the discontinuous nature of design interpretations (resulting from the designer switching attention to different subshapes and seeing them as different things), these situations can emerge in highly unexpected, unpredictable ways. The right sides of shape rules specify responses worth considering. Other responses might also be worth considering, but the rules of the grammar specify the known ones. Choices among possible responses might be made mechanically, but this is not characteristic of skilled human designers. Critical reflection on the entailments of possible responses normally lies at the heart of architectural design 